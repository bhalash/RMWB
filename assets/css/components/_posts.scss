/**
 * Articles and Pages
 * -----------------------------------------------------------------------------
 * @category   Stylesheet
 * @package    Sheepie
 * @author     Mark Grealish <mark@bhalash.com>
 * @copyright  Copyright (c) 2015 Mark Grealish
 * @license    https://www.gnu.org/copyleft/gpl.html The GNU GPL v3.0
 * @version    3.0
 * @link       https://github.com/bhalash/sheepie
 */

/**
 * Default Article Styling
 * -----------------------------------------------------------------------------
 * Default text and other element styling for articles.
 */

.article {
    @include clearfix;

    dl, ol, ul {
        box-sizing: border-box;
        margin-left: 1.25rem;
        padding-left: 0.5rem;
    }

    blockquote p {
        font-family: $font--lato;

        &:not(:last-child) {
            margin-bottom: rem($vspace);
        }
    }

    img {
        border: 1px solid color(whites, mid-light);
        box-sizing: border-box;
    }

    input {
        // For password on password-protected posts.
        display: block;
    }
}

/*
 * Excerpted Articles
 * -----------------------------------------------------------------------------
 */

.excerpt p {
    color: color(blacks, x-light);
}

/*
 * Related Articles
 * -----------------------------------------------------------------------------
 * Inserted below articles, these articles repreent three related articles
 * picked at random from the post archives.
 */

.related-articles {
    @include media(640) {
        @include columns(flex, article, 3, $split-column-margin * 2);
    }
}

.related {
    margin-bottom: rem($vspace);

    &:not(:last-child) {
        border: 1px solid color(whites, mid-light);
        border-width: 0 0 1px 0;
        padding: 0 0 $split-column-margin 0;
    }

    @include media(640) {
        margin: 0;

        &:not(:last-child) {
            border-width: 0 1px 0 0;
            padding: 0 $split-column-margin 0 0;
        }
    }

    .title {
        overflow-x: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    &__thumbnail {
        background: center top/cover no-repeat;
        display: block;
        height: rem($vspace * 9);
    }
}

/*
 * Full Article
 * -----------------------------------------------------------------------------
 * This has a nested flex layout:
 */

.full {
    &__content > *:not(:last-child) {
        margin-bottom: rem($vspace);
    }
}

/*
 * Article Footer
 * -----------------------------------------------------------------------------
 * This has a nested flex layout:
 *
 * 1. Side-by-side avatar and text.
 * 2. Within right-side text, veritcally-centerd column.
 */

.footer {
    &__author {
        display: flex;
    }

    &__avatar {
        @include avatar(7rem);
    }

    &__bio {
        flex: 1;
        margin-left: rem($vspace);
        @include flex-center-children('-blurb');
    }
}

/**
 * Photobox
 * -----------------------------------------------------------------------------
 * I post a great many photographs, and this has become a convenient way for me
 * to arrange and display them.
 */

figure {
    /* Every word has a space afterward, above and below, set by the browser.
     * An object with display "inline-block" or similar is treated as a word by
     * your browser, and given a small trailing space beside and below,
     * determined by either the element or element parent's font-size value.
     *
     * This can offset images several pixels from where they should be, in
     * circumstances where those few pixels can break layout. */
    font-size: 0;

    img {
        /* Important: images will otherwise display weirdly in a manner that
         * varies by browser. */
        width: 100%;
    }

    a {
        display: block;
        margin-bottom: 0.5rem;

        &:only-child {
            /* Constrain size of non-photobox (single) images Doesn't work in
             * IE, but phooey to them. */
            @include media(768) {
                max-height: 20rem;
                object-fit: cover;
                overflow: hidden;
            }
        }

    }
}

.photobox {
    &--two {
        @include columns(flex, a, 2, $split-column-margin);
    }

    &, &--three {
        @include columns(flex, a, 3, $split-column-margin);
    }

    &--four {
        @include columns(flex, a, 4, $split-column-margin);
    }
}
