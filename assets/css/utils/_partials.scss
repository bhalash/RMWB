/**
 * Theme Partials and Reusable CSS Classes
 * -----------------------------------------------------------------------------
 * @category   Stylesheet
 * @package    Sheepie
 * @author     Mark Grealish <mark@bhalash.com>
 * @copyright  Copyright (c) 2015 Mark Grealish
 * @license    https://www.gnu.org/copyleft/gpl.html The GNU GPL v3.0
 * @version    3.0
 * @link       https://github.com/bhalash/sheepie
 *
 */

/**
 * General Classes
 * -----------------------------------------------------------------------------
 */

.meta {
    @include font-size(1.3);
}

/**
 * Floats
 * -----------------------------------------------------------------------------
 */

.float {
    &--left {
        float: left;
    }

    &--right {
        float: right;
    }

    &--none {
        @include nofloat;
    }
}

/**
 * Left and Right Floated Images 
 * -----------------------------------------------------------------------------
 */

.leftie {
    float: left;
    width: 20%;
    @include margin(0 3 1 0);
}

.rightie {
    float: right;
    width: 20%;
    @include margin(0 0 1 3);
}

/**
 * Vertical Spacing
 * -----------------------------------------------------------------------------
 */

.vspace {
    &--full {
        @include margin($vspace, bottom);
    }

    &--double {
        @include margin($vspace * 2, bottom);
    }

    &--half {
        @include margin($vspace * 0.5, bottom);
    }
}

/**
 * Photowall
 * -----------------------------------------------------------------------------
 */

.photowall {
    @include column-count(3);


    @include media(small) {
        @include column-count(2, rem($vspace * 0.5));
    }

    img {
        @include margin($vspace * 0.5, bottom); 
    }
}

/**
 * Photobox
 * -----------------------------------------------------------------------------
 * I post a great many photographs, and this has become a convenient way for me
 * to arrange and display them.
 */

@mixin photobox-elements {
    /* Every word has a space afterward, above and below, set by the browser. 
     * An object with display "inline-block" or similar is treated as a word by
     * your browser, and given a small trailing space beside and below, 
     * determined by either the element or element parent's font-size value.
     * 
     * This can offset images several pixels from where they should be, in 
     * circumstances where those few pixels can break layout. */
    font-size: 0;

    img {
        /* Important: images will otherwise display weirdly in a manner that 
         * varies by browser. */
        width: 100%;
    }

    a {
        @include padding(1, bottom);
    }
}

.article-photobox {
    &--two, &-two {
        @include photobox-elements;
        @include columns(flex, a, 2, $three-col-margin);
    }

    &, &--three, &-three {
        @include photobox-elements;
        @include columns(flex, a, 3, $three-col-margin);
    } 

    &--four, &-four {
        @include photobox-elements;
        @include columns(flex, a, 4, $three-col-margin);
    }
}

/**
 * Lightbox Image
 * -----------------------------------------------------------------------------
 * There is a JavaScript component to determine state, but it is mostly handled
 * through this CSS.
 * 
 * 1. If #lightbox is targeted by a clicked link, make it appear.
 * 2. Otherwise it is hidden.
 * 3. I am working on a way to successfuly freeze the background without 
 *    resorting to JavaScript (I could freeze the body tag, but that requires
 *     JS!).
 */

a[class^=rmwb-lightbox-] {
    background: palette(black, dark);
    @include pop-modal;

    img {
        height: initial;
        max-width: 90%;
        max-height: 90%;
        transform: translate(-50%, -50%);
        width: initial;
        @include fixed(50% 50%, left top);
    }
}

