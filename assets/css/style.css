@charset "UTF-8";
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

article,
aside,
footer,
header,
nav,
section {
  display: block; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

figcaption,
figure,
main {
  /* 1 */
  display: block; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

dfn {
  font-style: italic; }

mark {
  background-color: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

audio,
video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

img {
  border-style: none; }

svg:not(:root) {
  overflow: hidden; }

button,
input,
optgroup,
select,
textarea {
  margin: 0; }

button,
input {
  /* 1 */
  overflow: visible; }

button,
select {
  /* 1 */
  text-transform: none; }

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

textarea {
  overflow: auto; }

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

details,
menu {
  display: block; }

summary {
  display: list-item; }

canvas {
  display: inline-block; }

template {
  display: none; }

[hidden] {
  display: none; }

html {
  color: #494949;
  font-family: "Merriweather", Georgia, "Times New Roman", serif;
  font-size: 90%; }
  @media print {
    html {
      font-size: 85%; } }
  @media only screen and (min-width: 540px) {
    html {
      font-size: 100%; } }

@media print {
  body {
    margin: 0; } }

blockquote, h1, h2, h3, h4, h5, h6, li, ol, p, pre, ul {
  margin: 0;
  padding: 0; }

figure {
  margin-left: 0;
  margin-right: 0; }

hr {
  background: #dcdcdc;
  border: 0;
  height: 1px; }

iframe, img {
  max-width: 100%;
  overflow: hidden; }

@media print {
  embed, iframe {
    display: none; } }

article img {
  height: auto; }

blockquote {
  border-left: 1px solid #5b5b5b;
  padding-left: 0.625rem; }
  blockquote p, blockquote li {
    font-style: italic; }

abbr {
  text-decoration: underline; }

blockquote, cite, li, ins, p, q {
  font-size: 1.01936rem;
  line-height: 1.64936rem; }

a, cite {
  font-size: inherit; }

a {
  color: #00a3f5;
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }

h1 {
  font-weight: bold;
  font-size: 4.31808rem; }

h2 {
  font-weight: bold;
  font-size: 2.66872rem; }

h3 {
  font-weight: bold;
  font-size: 1.64936rem; }

h4 {
  font-weight: bold;
  font-size: 1.01936rem; }

h5 {
  font-weight: bold;
  font-size: 0.24064rem; }

h6 {
  font-weight: bold;
  font-size: 0.14872rem; }

.title {
  color: #242424;
  font-family: "Lato", Verdana, Geneva, sans-serif, sans-serif;
  font-weight: bold; }
  .title a {
    color: inherit;
    font-weight: inherit; }
    .title a:hover {
      text-decoration: none; }

.comment-notes, .logged-in-as, .meta {
  font-size: 0.81549rem;
  font-weight: 100;
  line-height: 1rem; }

.round {
  border-radius: 50%; }

.social.beard .social__icon {
  background: 0% 0%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #343537; }
.social.discuss .social__icon {
  background: 20% 0%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #b9dfbc; }
.social.email .social__icon {
  background: 40% 0%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #f5756c; }
.social.facebook .social__icon {
  background: 60% 0%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #3B5998; }
.social.flickr .social__icon {
  background: 80% 0%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #ff0084; }
.social.github .social__icon {
  background: 100% 0%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #666666; }
.social.google .social__icon {
  background: 0% 33.33333%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #dd4b39; }
.social.instagram .social__icon {
  background: 20% 33.33333%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #3f729b; }
.social.linkedin .social__icon {
  background: 40% 33.33333%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #0976b4; }
.social.pinterest .social__icon {
  background: 60% 33.33333%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #cc2127; }
.social.print .social__icon {
  background: 80% 33.33333%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #007aaf; }
.social.reddit .social__icon {
  background: 100% 33.33333%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #ff5700; }
.social.rss .social__icon {
  background: 0% 66.66667%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #ff6600; }
.social.search .social__icon {
  background: 20% 66.66667%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #343537; }
.social.share .social__icon {
  background: 40% 66.66667%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #343537; }
.social.tumblr .social__icon {
  background: 60% 66.66667%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #35465c; }
.social.twitter .social__icon {
  background: 80% 66.66667%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #55acee; }
.social.youtube .social__icon {
  background: 100% 66.66667%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #b31217; }
.social.menu .social__icon {
  background: 0% 100%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #343537; }
.social.close .social__icon {
  background: 20% 100%/600% 400% no-repeat url("vectors/button-sprites.svg");
  background-color: #343537; }
.social a, .social__icon {
  box-sizing: border-box;
  display: block;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  height: 0;
  padding-bottom: 100%;
  width: 100%; }
.social a {
  font-size: 0 !important;
  line-height: normal; }

@media print {
  .noprint {
    display: none !important; } }

.clearfix {
  overflow: auto; }
  .clearfix:after {
    clear: both;
    content: '';
    display: table; }

.avatar {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  .avatar > div {
    min-height: 1px; }
    .avatar > div:nth-child(1) {
      -webkit-box-flex: 0;
      -webkit-flex: 0 1 17.5%;
          -ms-flex: 0 1 17.5%;
              flex: 0 1 17.5%; }
    .avatar > div:nth-child(2) {
      -webkit-box-flex: 0;
      -webkit-flex: 0 1 77.5%;
          -ms-flex: 0 1 77.5%;
              flex: 0 1 77.5%; }
  @media only screen and (min-width: 540px) {
    .avatar {
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-pack: justify;
      -webkit-justify-content: space-between;
          -ms-flex-pack: justify;
              justify-content: space-between; }
      .avatar > div {
        min-height: 1px; }
        .avatar > div:nth-child(1) {
          -webkit-box-flex: 0;
          -webkit-flex: 0 1 10%;
              -ms-flex: 0 1 10%;
                  flex: 0 1 10%; }
        .avatar > div:nth-child(2) {
          -webkit-box-flex: 0;
          -webkit-flex: 0 1 88%;
              -ms-flex: 0 1 88%;
                  flex: 0 1 88%; } }
  .avatar__photo {
    background: center/cover no-repeat;
    display: block;
    height: 0;
    padding-bottom: 100%;
    width: 100%; }

.text--small {
  font-size: 0.81549rem;
  line-height: 1.01936rem; }
.text--big {
  font-size: 1.22323rem; }
.text--bold {
  font-weight: bold; }
.text--italic {
  font-style: italic; }
.text--left {
  text-align: left; }
.text--center {
  text-align: center; }
.text--right {
  text-align: right; }

.hidden {
  display: none; }

.float--left {
  float: left; }
.float--right {
  float: right; }
.float--none {
  float: none ;
  width: initial ; }

.vspace--triple {
  margin-bottom: 3.05808rem; }
.vspace--double {
  margin-bottom: 2.03872rem; }
.vspace--full {
  margin-bottom: 1.01936rem; }
.vspace--threequarter {
  margin-bottom: 0.76452rem; }
.vspace--twothird {
  margin-bottom: 0.67278rem; }
.vspace--half {
  margin-bottom: 0.50968rem; }
.vspace--onethird {
  margin-bottom: 0.33639rem; }
.vspace--quarter {
  margin-bottom: 0.25484rem; }

.vcenter--triple {
  margin-bottom: 3.05808rem;
  margin-top: 3.05808rem; }
.vcenter--double {
  margin-bottom: 2.03872rem;
  margin-top: 2.03872rem; }
.vcenter--full {
  margin-bottom: 1.01936rem;
  margin-top: 1.01936rem; }
.vcenter--threequarter {
  margin-bottom: 0.33639rem;
  margin-top: 0.33639rem; }
.vcenter--twothird {
  margin-bottom: 0.33639rem;
  margin-top: 0.33639rem; }
.vcenter--half {
  margin-bottom: 0.33639rem;
  margin-top: 0.33639rem; }
.vcenter--onethird {
  margin-bottom: 0.33639rem;
  margin-top: 0.33639rem; }
.vcenter--quarter {
  margin-bottom: 0.25484rem;
  margin-top: 0.25484rem; }

.color--blues--bg, .color--blues--bg-hover:hover {
  background-color: #00a3f5; }
.color--blues--text, .color--blues--text-hover:hover {
  color: #00a3f5; }
.color--rmwb--bg, .color--rmwb--bg-hover:hover {
  background-color: #343537; }
.color--rmwb--text, .color--rmwb--text-hover:hover {
  color: #343537; }
.color--white--bg, .color--white--bg-hover:hover {
  background-color: #ffffff; }
.color--white--text, .color--white--text-hover:hover {
  color: #ffffff; }

.error {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

@media only screen and (min-width: 640px) {
  div.archive {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; }
    div.archive > div {
      min-height: 1px;
      -webkit-box-flex: 0;
      -webkit-flex: 0 1 49%;
          -ms-flex: 0 1 49%;
              flex: 0 1 49%; } }

.archive-year-name {
  background: center/cover;
  text-align: center; }
  .archive-year-name a {
    background: rgba(0, 0, 0, 0.4);
    color: #ffffff;
    display: block;
    padding: 2rem; }
    .archive-year-name a:hover {
      text-decoration: none; }

.archive-card-year {
  background: #373737;
  box-sizing: border-box;
  list-style-type: none;
  padding: 0.5rem;
  text-align: center;
  overflow: auto; }
  .archive-card-year:after {
    clear: both;
    content: '';
    display: table; }
  .archive-card-year > li {
    float: left;
    min-height: 1px;
    width: 24.25%; }
    .archive-card-year > li:not(:nth-child(4n)) {
      margin-right: 1%; }

.archive-card-month {
  color: #ffffff;
  margin-bottom: 1%; }

.archive-card-data span {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }
.archive-card-data span.month-count {
  display: none; }
.archive-card-data:hover span.month-count {
  display: initial; }
.archive-card-data:hover span.month-name {
  display: none; }

.archive-card-month a {
  background: #242424;
  color: inherit;
  display: block;
  position: relative;
  height: 0;
  padding-bottom: 100%;
  width: 100%; }
  .archive-card-month a:hover {
    background: #00a3f5; }

.main {
  box-sizing: border-box;
  margin: 0 auto;
  max-width: 72rem;
  min-width: 0;
  padding: 3%; }
  @media only screen and (min-width: 768px) {
    .main {
      padding: 7.5%; } }
  @media print {
    .main {
      max-width: 100%;
      padding: 0; } }

.article {
  overflow: auto; }
  .article:after {
    clear: both;
    content: '';
    display: table; }
  .article dl, .article ol, .article ul {
    box-sizing: border-box;
    margin-left: 1.25rem;
    padding-left: 0.5rem; }
  .article blockquote p:not(:last-child) {
    margin-bottom: 1.01936rem; }
  .article img {
    border: 1px solid #dcdcdc;
    box-sizing: border-box; }
  .article input {
    display: block; }

.excerpt p {
  color: #6d6d6d; }

@media only screen and (min-width: 640px) {
  .related-articles {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; }
    .related-articles > article {
      min-height: 1px;
      -webkit-box-flex: 0;
      -webkit-flex: 0 1 31.33333%;
          -ms-flex: 0 1 31.33333%;
              flex: 0 1 31.33333%; } }

.related {
  margin-bottom: 1.01936rem; }
  .related:not(:last-child) {
    border: 1px solid #dcdcdc;
    border-width: 0 0 1px 0;
    padding-bottom: 1.01936rem; }
  @media only screen and (min-width: 640px) {
    .related {
      margin: 0; }
      .related:not(:last-child) {
        border-width: 0 1px 0 0;
        padding: 0 1.5% 0 0; } }
  .related .title {
    overflow-x: hidden;
    text-overflow: ellipsis;
    white-space: nowrap; }
  .related__thumbnail {
    background: center top/cover no-repeat;
    display: block;
    height: 9.17425rem; }

.full__content {
  overflow: auto; }
  .full__content:after {
    clear: both;
    content: '';
    display: table; }
  .full__content > *:not(:last-child) {
    margin-bottom: 1.01936rem; }

.footer__author {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  @media only screen and (min-width: 640px) {
    .footer__author {
      -webkit-box-align: initial;
      -webkit-align-items: initial;
          -ms-flex-align: initial;
              align-items: initial; } }
.footer__avatar {
  border: 0.1rem solid rgba(52, 53, 55, 0.25);
  border-radius: 50%;
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
      -ms-flex: 0 1 auto;
          flex: 0 1 auto;
  width: 5rem;
  height: 5rem; }
.footer__bio {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  margin-left: 1.01936rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .footer__bio-blurb {
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
            flex: 0 1 auto; }

code, kbd, pre, pre span, tt, var {
  -webkit-font-smoothing: antialiased;
  background: #343537;
  color: #fbfbfb;
  font: 800 0.91743rem "Source Code Pro", "Courier New", Courier, monospace;
  overflow: auto; }

kbd, p code, tt, var {
  padding: 0.25rem 0.5rem; }

pre {
  padding: 1rem; }
  pre code {
    display: block; }

.comments {
  margin: 0 auto;
  /**
   * Comments List
   * -------------------------------------------------------------------------
   */
  /**
   * Comments Form
   * -------------------------------------------------------------------------
   */ }
  .comments__commentlist {
    list-style-type: none; }
  @media only screen and (min-width: 640px) {
    .comments__inputs {
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-pack: justify;
      -webkit-justify-content: space-between;
          -ms-flex-pack: justify;
              justify-content: space-between;
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap; }
      .comments__inputs > input {
        min-height: 1px;
        -webkit-box-flex: 0;
        -webkit-flex: 0 1 32.33333%;
            -ms-flex: 0 1 32.33333%;
                flex: 0 1 32.33333%; } }
  .comments__input {
    display: block;
    margin-bottom: 0.50968rem;
    width: 100%; }
    @media only screen and (min-width: 640px) {
      .comments__input {
        margin: 0; } }
  .comments__textarea {
    display: block;
    height: 12.5rem; }

.comment:not(:last-child) {
  margin-bottom: 1.01936rem; }
.comment header {
  border-bottom: 1px solid rgba(220, 220, 220, 0.4);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  margin-bottom: 0.5rem;
  white-space: nowrap; }
  @media only screen and (min-width: 640px) {
    .comment header {
      border: 0;
      margin: 0; } }
.comment__header {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .comment__header-item {
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
            flex: 0 1 auto; }
  .comment__header-item:last-child {
    padding-bottom: 0.16rem; }
    @media only screen and (min-width: 640px) {
      .comment__header-item:last-child {
        border-bottom: 1px solid rgba(220, 220, 220, 0.4); } }
.comment__avatar {
  margin: 0 1.01936rem 1.01936rem 0;
  border: 0.1rem solid rgba(52, 53, 55, 0.25);
  border-radius: 50%;
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
      -ms-flex: 0 1 auto;
          flex: 0 1 auto;
  width: 4rem;
  height: 4rem; }
  @media only screen and (min-width: 640px) {
    .comment__avatar {
      margin: 0 1.01936rem 0 0; } }
@media only screen and (min-width: 640px) {
  .comment__body {
    margin-left: 5rem; } }
.comment__body p:not(:last-child) {
  margin-bottom: 0.5rem; }

form {
  position: relative;
  width: 100%; }

fieldset {
  margin: 0;
  padding: 0; }

button, fieldset, input, textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  border: 0;
  border-radius: 0;
  box-sizing: border-box;
  outline: 0; }

button:focus, fieldset:focus, form:focus, input:focus, label:focus, textarea:focus {
  border: none;
  outline: none; }

input:not(.modal-search__input), textarea {
  background: #ededed;
  font-size: 1rem;
  min-height: 3rem;
  padding: 0.625rem 1rem;
  -webkit-transition: background-color 0.15s;
          transition: background-color 0.15s; }
  input:not(.modal-search__input)::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
    font-size: inherit; }
  input:not(.modal-search__input)::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
    font-size: inherit; }
  input:not(.modal-search__input):-moz-placeholder, textarea:-moz-placeholder {
    font-size: inherit;
    opacity: 1; }
  input:not(.modal-search__input)::-moz-placeholder, textarea::-moz-placeholder {
    font-size: inherit;
    opacity: 1; }
  input:not(.modal-search__input):-ms-input-placeholder, textarea:-ms-input-placeholder {
    font-size: inherit; }
  input:not(.modal-search__input):not(#submit):focus, textarea:not(#submit):focus {
    color: #ffffff;
    background: #343537; }
  input:not(.modal-search__input):focus::-webkit-input-placeholder, textarea:focus::-webkit-input-placeholder {
    color: #ffffff; }
  input:not(.modal-search__input):focus::-webkit-input-placeholder, textarea:focus::-webkit-input-placeholder {
    color: #ffffff; }
  input:not(.modal-search__input):focus:-moz-placeholder, textarea:focus:-moz-placeholder {
    color: #ffffff;
    opacity: 1; }
  input:not(.modal-search__input):focus::-moz-placeholder, textarea:focus::-moz-placeholder {
    color: #ffffff;
    opacity: 1; }
  input:not(.modal-search__input):focus:-ms-input-placeholder, textarea:focus:-ms-input-placeholder {
    color: #ffffff; }

textarea {
  padding: 0.625rem;
  resize: none;
  width: 100%; }

input[type=submit] {
  height: 2rem;
  padding-bottom: 0.3rem;
  width: 100%; }
  input[type=submit]:active {
    color: #ffffff;
    background: #00a3f5; }

.headline {
  margin-top: 2.03872rem; }
  @media only screen and (min-width: 640px) {
    .headline {
      margin-top: 0; } }

.menu {
  margin: 2rem 0; }
  @media only screen and (min-width: 640px) {
    .menu {
      margin: 3rem 0 0; } }
  .menu__list {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse;
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    list-style-type: none;
    max-width: 100%; }
    @media only screen and (min-width: 640px) {
      .menu__list {
        -webkit-box-pack: center;
        -webkit-justify-content: center;
            -ms-flex-pack: center;
                justify-content: center; } }
  .menu .menu-item {
    overflow: hidden;
    padding: 0;
    height: 0;
    padding-bottom: 3rem;
    width: 3rem; }
    .menu .menu-item:not(:last-child) {
      margin-left: 0.50968rem; }
    @media only screen and (min-width: 768px) {
      .menu .menu-item {
        height: 0;
        padding-bottom: 2.5rem;
        width: 2.5rem; } }
  body.error404 .menu {
    display: none; }

.lightbox {
  background: #ffffff;
  outline: 0;
  -webkit-transition: opacity 0.15s;
          transition: opacity 0.15s;
  z-index: 4;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }
  .lightbox__anchor {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0; }
  .lightbox__image {
    box-sizing: border-box;
    margin: 0;
    max-height: 95%;
    max-width: 95%;
    position: absolute;
    top: 50%;
    right: auto;
    bottom: auto;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }

figure a {
  display: block;
  /* Every word has a space afterward, above and below, set by the browser.
   * An object with display "inline-block" or similar is treated as a word
   * by your browser, and given a small trailing space beside and below,
   * determined by either the element or element parent's font-size value.
   *
   * This will offset images several pixels from where they should be, in
   * circumstances where those extra pixels will break layout. */
  font-size: 0;
  margin-bottom: 1.5%; }
  @media only screen and (min-width: 640px) {
    figure a {
      margin-bottom: 1.01936rem; } }
figure img {
  width: 100%; }

.photobox--two {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .photobox--two > a {
    min-height: 1px;
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 49.25%;
        -ms-flex: 0 1 49.25%;
            flex: 0 1 49.25%; }
  .photobox--two a:nth-last-child(-n+2) {
    margin-bottom: 0; }
.photobox--three {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .photobox--three > a {
    min-height: 1px;
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 32.33333%;
        -ms-flex: 0 1 32.33333%;
            flex: 0 1 32.33333%; }
  .photobox--three a:nth-last-child(-n+3) {
    margin-bottom: 0; }
.photobox--four {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .photobox--four > a {
    min-height: 1px;
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 23.875%;
        -ms-flex: 0 1 23.875%;
            flex: 0 1 23.875%; }
  .photobox--four a:nth-last-child(-n+4) {
    margin-bottom: 0; }

.modal-search {
  background: #ffffff;
  box-sizing: border-box;
  height: 100vh;
  overflow: hidden;
  -webkit-transition: opacity 0.15s;
          transition: opacity 0.15s;
  z-index: 3;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /**
   * Form Area
   * -------------------------------------------------------------------------
   */
  /**
   * Input Area
   * -------------------------------------------------------------------------
   */ }
  .modal-search:focus {
    outline: none; }
  .modal-search__form {
    height: 100%; }
    .modal-search__form fieldset {
      height: 100%;
      position: relative;
      width: 100%; }
  .modal-search__input, .modal-search label[for=modal-search__input] {
    box-sizing: border-box;
    display: block;
    font-size: 2rem;
    margin: 0 auto;
    text-align: center;
    width: 90%;
    position: absolute;
    top: 50%;
    right: auto;
    bottom: auto;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
    @media only screen and (min-width: 1024px) {
      .modal-search__input, .modal-search label[for=modal-search__input] {
        font-size: 4.5rem; } }
    .modal-search__input:focus + label, .modal-search label[for=modal-search__input]:focus + label {
      display: none; }
  .modal-search .toggle {
    height: 0;
    padding-bottom: 2rem;
    width: 2rem;
    position: absolute;
    top: 1rem;
    right: 1rem;
    bottom: auto;
    left: auto; }

.modal-search-input:focus + label {
  display: none;
  visibility: hidden; }

.navigation--home {
  padding: 0.5rem 1rem; }
  @media only screen and (min-width: 1024px) {
    .navigation--home {
      position: absolute;
      top: 0;
      right: auto;
      bottom: auto;
      left: 0; } }
  .navigation--home__link {
    display: block;
    padding: 0.76452rem 0; }
    .navigation--home__link:before {
      content: "← "; }

.pagination {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  .pagination p {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .pagination a {
    display: block; }
  .pagination--site {
    margin-bottom: 1.01936rem; }
    @media only screen and (min-width: 640px) {
      .pagination--site {
        margin-bottom: 0; } }
  .pagination__count {
    text-align: center;
    padding: 0.76452rem 0; }
    @media only screen and (min-device-width: 320px) and (max-device-width: 667px) {
      .pagination__count {
        display: none; } }
    .pagination__count:empty {
      display: none; }
  .pagination__next {
    text-align: right; }
    .pagination__next a:after {
      content: " →"; }
  @media only screen and (min-device-width: 320px) and (max-device-width: 667px) {
    .pagination__previous {
      white-space: normal; } }
  .pagination__previous a:before {
    content: "← "; }

.searchform__input {
  font-size: 1.75rem;
  padding: 0.5rem;
  width: 100%; }

@media only screen and (min-width: 540px) {
  #widgets {
    overflow: auto; }
    #widgets:after {
      clear: both;
      content: '';
      display: table; }
    #widgets > div {
      float: left;
      min-height: 1px;
      width: 32%; }
      #widgets > div:not(:nth-child(3n)) {
        margin-right: 2%; } }

@media only screen and (min-width: 540px) {
  .sidebar-widget {
    margin-bottom: 1.01936rem; } }

.widget-title {
  margin-bottom: 0.50968rem; }

.leftie, .alignleft {
  float: left;
  margin: 0 2rem 0.5rem 0;
  width: 50%; }
  @media only screen and (min-width: 768px) {
    .leftie, .alignleft {
      width: 30%; } }

.rightie, .alignright {
  float: right;
  margin: 0 0 0.5rem 2rem;
  width: 50%; }
  @media only screen and (min-width: 768px) {
    .rightie, .alignright {
      width: 30%; } }

.aligncenter {
  margin: 0 auto; }

.wp-caption-text, .wp-caption, .screen-reader-text, .sticky, .bypostauthor, .gallery-caption {
  color: inherit; }

.page-links {
  margin-top: 1.01936rem; }

.comment-notes, .logged-in-as {
  margin-bottom: 1.01936rem; }

.post-password-form input {
  margin: 1.01936rem 0; }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsImxpYi9fbm9ybWFsaXplLnNjc3MiLCJiYXNlL19yZXNldC5zYXNzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NoYXJvbi1zYXNzL3NyYy9fY29sb3Iuc2NzcyIsImJhc2UvX3ZhcmlhYmxlcy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NoYXJvbi1zYXNzL3NyYy9fbWVkaWEuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2FzcyIsInV0aWxpdGllcy9fZ2VuZXJpY3Muc2FzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jaGFyb24tc2Fzcy9zcmMvX3NvY2lhbC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NoYXJvbi1zYXNzL3NyYy9fc3ByaXRlLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvY2hhcm9uLXNhc3Mvc3JjL19taXhpbnMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jaGFyb24tc2Fzcy9zcmMvX2NvbHVtbnMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jaGFyb24tc2Fzcy9zcmMvX3Bvc2l0aW9uLnNjc3MiLCJsYXlvdXQvXzQwNC5zYXNzIiwibGF5b3V0L19hcmNoaXZlcy5zYXNzIiwibGF5b3V0L19tYWluLnNhc3MiLCJjb21wb25lbnRzL19hcnRpY2xlcy5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQUNqQjtFQUNFLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsMkJBQTJCO0VBQzNCLE9BQU87RUFDUCwrQkFBK0I7RUFDL0IsT0FBTyxFQUFFOztBQUVYOzs7Ozs7RUFNRSxlQUFlLEVBQUU7O0FBRW5CO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQixFQUFFOztBQUVyQjs7O0VBR0UsT0FBTztFQ1ZQLGVBQUEsRUFBQTs7QURhRjtFQUNFLGlCQUFpQixFQUFFOztBQUVyQjtFQUNFLHdCQUF3QjtFQUN4QixPQUFPO0VDUlQsVUFBQTtFRFVFLE9BQU87RUFDUCxrQkFBa0I7RUFDbEIsT0FBTyxF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RTtNQUNFO1FBQ0EsaUJBQVcsRUFBQSxFQUFBO0VWK3ZCYjtJZ0J6L0JBLG1CQUFBO0lBQ0Usc0JBQXNCLEVBQUE7SUFDdEI7TUFDQTtRQUVGLGNBQUEsRUFBQSxFQUFBO0lBQ0U7TUFFRixjQUFHLEVBQUE7RWhCeS9CSDtJZ0J2L0JFLGtCQUFZLEVBQUE7SUFFZDtNQUVFLGNBQWMsRUFBQTtFaEJ1L0JoQjtJQUNFO01BQ0Usb0JBQW9CLEVBQUUsRUFBRTtFQUM1QjtJZ0JuL0JGLGNBQVUsRUFBQTs7QWhCcy9CVjtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsWUFBWSxFQUFFOztBQUVoQjtFS3h1QkU7SVd6UUYsZUFBaUIsRUFBQTtJTnVRZjtNQUNBLFlBQWM7TUFHWixZQUFBO01BSUEsZUN0QjJDLEVBQUE7SUFFN0M7TUFDRSxZQUFZO01Ec0NkLGdCQzNDUTtNWG93QkosV0FBVyxFQUFFO01nQnYvQm5CO1FBQ0UsaUJaSU8sRUFBZ0MsRUFBQTs7QUpzL0J6QztFQUNFO0lnQnQvQkUsMEJaRHFDLEVBQUEsRUFBQTs7QUowL0J6QztFQUNFLDBCZ0J2L0JXLEVBQUE7O0FoQnkvQmI7RUFDRSxZZ0J0L0JJO0VBRUosd0JBQU07RWhCcy9CTixXZ0JyL0JFLEVBQVU7RWhCcy9CWjtJZ0JwL0JFO01BRUYsV0FBQSxFQUFBLEVBQVk7O0FoQnMvQmQ7RUFDRSxhZ0JwL0JVO0VoQnEvQlYsd0JBQXdCO0VBQ3hCLFdBQVcsRUFBRTtFQUNiO0lBQ0U7TUFDRSxXQUFXLEVBQUUsRUFBRTs7QUFFckI7RVU3ekJFLGVBQUEsRUFBQTs7QVZnMEJGO0VBQ0UsZVU5ekJXLEVBQUs7O0FWZzBCbEI7RUFDRSx1QkFBdUIsRUFBRTs7QUFFM0I7RUFDRSwwQkFBMEIsRUFBRTs7QUFFOUI7RUFDRSxxQkFBcUIsRUFBRSIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZm9vdGVyLFxuaGVhZGVyLFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4ge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBtYXJnaW46IDA7IH1cblxuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxucHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovIH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG5kZXRhaWxzLFxubWVudSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuY2FudmFzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuaHRtbCB7XG4gIGNvbG9yOiAjNDk0OTQ5O1xuICBmb250LWZhbWlseTogXCJNZXJyaXdlYXRoZXJcIiwgR2VvcmdpYSwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogOTAlOyB9XG4gIEBtZWRpYSBwcmludCB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDg1JTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTQwcHgpIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMTAwJTsgfSB9XG5cbkBtZWRpYSBwcmludCB7XG4gIGJvZHkge1xuICAgIG1hcmdpbjogMDsgfSB9XG5cbmJsb2NrcXVvdGUsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGxpLCBvbCwgcCwgcHJlLCB1bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5maWd1cmUge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbmhyIHtcbiAgYmFja2dyb3VuZDogI2RjZGNkYztcbiAgYm9yZGVyOiAwO1xuICBoZWlnaHQ6IDFweDsgfVxuXG5pZnJhbWUsIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5AbWVkaWEgcHJpbnQge1xuICBlbWJlZCwgaWZyYW1lIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuYXJ0aWNsZSBpbWcge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuYmxvY2txdW90ZSB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzViNWI1YjtcbiAgcGFkZGluZy1sZWZ0OiAwLjYyNXJlbTsgfVxuICBibG9ja3F1b3RlIHAsIGJsb2NrcXVvdGUgbGkge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5hYmJyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxuYmxvY2txdW90ZSwgY2l0ZSwgbGksIGlucywgcCwgcSB7XG4gIGZvbnQtc2l6ZTogMS4wMTkzNnJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjQ5MzZyZW07IH1cblxuYSwgY2l0ZSB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDsgfVxuXG5hIHtcbiAgY29sb3I6ICMwMGEzZjU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5oMSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDQuMzE4MDhyZW07IH1cblxuaDIge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAyLjY2ODcycmVtOyB9XG5cbmgzIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMS42NDkzNnJlbTsgfVxuXG5oNCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDEuMDE5MzZyZW07IH1cblxuaDUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAwLjI0MDY0cmVtOyB9XG5cbmg2IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMC4xNDg3MnJlbTsgfVxuXG4udGl0bGUge1xuICBjb2xvcjogIzI0MjQyNDtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBWZXJkYW5hLCBHZW5ldmEsIHNhbnMtc2VyaWYsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIC50aXRsZSBhIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuICAgIC50aXRsZSBhOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uY29tbWVudC1ub3RlcywgLmxvZ2dlZC1pbi1hcywgLm1ldGEge1xuICBmb250LXNpemU6IDAuODE1NDlyZW07XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG4gIGxpbmUtaGVpZ2h0OiAxcmVtOyB9XG5cbi5yb3VuZCB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4uc29jaWFsLmJlYXJkIC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiAwJSAwJS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzNTM3OyB9XG4uc29jaWFsLmRpc2N1c3MgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDIwJSAwJS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjlkZmJjOyB9XG4uc29jaWFsLmVtYWlsIC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiA0MCUgMCUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1NzU2YzsgfVxuLnNvY2lhbC5mYWNlYm9vayAuc29jaWFsX19pY29uIHtcbiAgYmFja2dyb3VuZDogNjAlIDAlLzYwMCUgNDAwJSBuby1yZXBlYXQgdXJsKFwidmVjdG9ycy9idXR0b24tc3ByaXRlcy5zdmdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzQjU5OTg7IH1cbi5zb2NpYWwuZmxpY2tyIC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiA4MCUgMCUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDA4NDsgfVxuLnNvY2lhbC5naXRodWIgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDEwMCUgMCUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY2NjY2NjsgfVxuLnNvY2lhbC5nb29nbGUgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDAlIDMzLjMzMzMzJS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGQ0YjM5OyB9XG4uc29jaWFsLmluc3RhZ3JhbSAuc29jaWFsX19pY29uIHtcbiAgYmFja2dyb3VuZDogMjAlIDMzLjMzMzMzJS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y3MjliOyB9XG4uc29jaWFsLmxpbmtlZGluIC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiA0MCUgMzMuMzMzMzMlLzYwMCUgNDAwJSBuby1yZXBlYXQgdXJsKFwidmVjdG9ycy9idXR0b24tc3ByaXRlcy5zdmdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwOTc2YjQ7IH1cbi5zb2NpYWwucGludGVyZXN0IC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiA2MCUgMzMuMzMzMzMlLzYwMCUgNDAwJSBuby1yZXBlYXQgdXJsKFwidmVjdG9ycy9idXR0b24tc3ByaXRlcy5zdmdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjYzIxMjc7IH1cbi5zb2NpYWwucHJpbnQgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDgwJSAzMy4zMzMzMyUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2FhZjsgfVxuLnNvY2lhbC5yZWRkaXQgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDEwMCUgMzMuMzMzMzMlLzYwMCUgNDAwJSBuby1yZXBlYXQgdXJsKFwidmVjdG9ycy9idXR0b24tc3ByaXRlcy5zdmdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MDA7IH1cbi5zb2NpYWwucnNzIC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiAwJSA2Ni42NjY2NyUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNjYwMDsgfVxuLnNvY2lhbC5zZWFyY2ggLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDIwJSA2Ni42NjY2NyUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0MzUzNzsgfVxuLnNvY2lhbC5zaGFyZSAuc29jaWFsX19pY29uIHtcbiAgYmFja2dyb3VuZDogNDAlIDY2LjY2NjY3JS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzNTM3OyB9XG4uc29jaWFsLnR1bWJsciAuc29jaWFsX19pY29uIHtcbiAgYmFja2dyb3VuZDogNjAlIDY2LjY2NjY3JS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzU0NjVjOyB9XG4uc29jaWFsLnR3aXR0ZXIgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDgwJSA2Ni42NjY2NyUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU1YWNlZTsgfVxuLnNvY2lhbC55b3V0dWJlIC5zb2NpYWxfX2ljb24ge1xuICBiYWNrZ3JvdW5kOiAxMDAlIDY2LjY2NjY3JS82MDAlIDQwMCUgbm8tcmVwZWF0IHVybChcInZlY3RvcnMvYnV0dG9uLXNwcml0ZXMuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjMxMjE3OyB9XG4uc29jaWFsLm1lbnUgLnNvY2lhbF9faWNvbiB7XG4gIGJhY2tncm91bmQ6IDAlIDEwMCUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0MzUzNzsgfVxuLnNvY2lhbC5jbG9zZSAuc29jaWFsX19pY29uIHtcbiAgYmFja2dyb3VuZDogMjAlIDEwMCUvNjAwJSA0MDAlIG5vLXJlcGVhdCB1cmwoXCJ2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0MzUzNzsgfVxuLnNvY2lhbCBhLCAuc29jaWFsX19pY29uIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMDtcbiAgcGFkZGluZy1ib3R0b206IDEwMCU7XG4gIHdpZHRoOiAxMDAlOyB9XG4uc29jaWFsIGEge1xuICBmb250LXNpemU6IDAgIWltcG9ydGFudDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG5AbWVkaWEgcHJpbnQge1xuICAubm9wcmludCB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9IH1cblxuLmNsZWFyZml4IHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgLmNsZWFyZml4OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4uYXZhdGFyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5hdmF0YXIgPiBkaXYge1xuICAgIG1pbi1oZWlnaHQ6IDFweDsgfVxuICAgIC5hdmF0YXIgPiBkaXY6bnRoLWNoaWxkKDEpIHtcbiAgICAgIGZsZXg6IDAgMSAxNy41JTsgfVxuICAgIC5hdmF0YXIgPiBkaXY6bnRoLWNoaWxkKDIpIHtcbiAgICAgIGZsZXg6IDAgMSA3Ny41JTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU0MHB4KSB7XG4gICAgLmF2YXRhciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAgICAgLmF2YXRhciA+IGRpdiB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDFweDsgfVxuICAgICAgICAuYXZhdGFyID4gZGl2Om50aC1jaGlsZCgxKSB7XG4gICAgICAgICAgZmxleDogMCAxIDEwJTsgfVxuICAgICAgICAuYXZhdGFyID4gZGl2Om50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgZmxleDogMCAxIDg4JTsgfSB9XG4gIC5hdmF0YXJfX3Bob3RvIHtcbiAgICBiYWNrZ3JvdW5kOiBjZW50ZXIvY292ZXIgbm8tcmVwZWF0O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB3aWR0aDogMTAwJTsgfVxuXG4udGV4dC0tc21hbGwge1xuICBmb250LXNpemU6IDAuODE1NDlyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjAxOTM2cmVtOyB9XG4udGV4dC0tYmlnIHtcbiAgZm9udC1zaXplOiAxLjIyMzIzcmVtOyB9XG4udGV4dC0tYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4udGV4dC0taXRhbGljIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG4udGV4dC0tbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbi50ZXh0LS1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi50ZXh0LS1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0OyB9XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5mbG9hdC0tbGVmdCB7XG4gIGZsb2F0OiBsZWZ0OyB9XG4uZmxvYXQtLXJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0OyB9XG4uZmxvYXQtLW5vbmUge1xuICBmbG9hdDogbm9uZSA7XG4gIHdpZHRoOiBpbml0aWFsIDsgfVxuXG4udnNwYWNlLS10cmlwbGUge1xuICBtYXJnaW4tYm90dG9tOiAzLjA1ODA4cmVtOyB9XG4udnNwYWNlLS1kb3VibGUge1xuICBtYXJnaW4tYm90dG9tOiAyLjAzODcycmVtOyB9XG4udnNwYWNlLS1mdWxsIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4wMTkzNnJlbTsgfVxuLnZzcGFjZS0tdGhyZWVxdWFydGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMC43NjQ1MnJlbTsgfVxuLnZzcGFjZS0tdHdvdGhpcmQge1xuICBtYXJnaW4tYm90dG9tOiAwLjY3Mjc4cmVtOyB9XG4udnNwYWNlLS1oYWxmIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41MDk2OHJlbTsgfVxuLnZzcGFjZS0tb25ldGhpcmQge1xuICBtYXJnaW4tYm90dG9tOiAwLjMzNjM5cmVtOyB9XG4udnNwYWNlLS1xdWFydGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNTQ4NHJlbTsgfVxuXG4udmNlbnRlci0tdHJpcGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMy4wNTgwOHJlbTtcbiAgbWFyZ2luLXRvcDogMy4wNTgwOHJlbTsgfVxuLnZjZW50ZXItLWRvdWJsZSB7XG4gIG1hcmdpbi1ib3R0b206IDIuMDM4NzJyZW07XG4gIG1hcmdpbi10b3A6IDIuMDM4NzJyZW07IH1cbi52Y2VudGVyLS1mdWxsIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4wMTkzNnJlbTtcbiAgbWFyZ2luLXRvcDogMS4wMTkzNnJlbTsgfVxuLnZjZW50ZXItLXRocmVlcXVhcnRlciB7XG4gIG1hcmdpbi1ib3R0b206IDAuMzM2MzlyZW07XG4gIG1hcmdpbi10b3A6IDAuMzM2MzlyZW07IH1cbi52Y2VudGVyLS10d290aGlyZCB7XG4gIG1hcmdpbi1ib3R0b206IDAuMzM2MzlyZW07XG4gIG1hcmdpbi10b3A6IDAuMzM2MzlyZW07IH1cbi52Y2VudGVyLS1oYWxmIHtcbiAgbWFyZ2luLWJvdHRvbTogMC4zMzYzOXJlbTtcbiAgbWFyZ2luLXRvcDogMC4zMzYzOXJlbTsgfVxuLnZjZW50ZXItLW9uZXRoaXJkIHtcbiAgbWFyZ2luLWJvdHRvbTogMC4zMzYzOXJlbTtcbiAgbWFyZ2luLXRvcDogMC4zMzYzOXJlbTsgfVxuLnZjZW50ZXItLXF1YXJ0ZXIge1xuICBtYXJnaW4tYm90dG9tOiAwLjI1NDg0cmVtO1xuICBtYXJnaW4tdG9wOiAwLjI1NDg0cmVtOyB9XG5cbi5jb2xvci0tYmx1ZXMtLWJnLCAuY29sb3ItLWJsdWVzLS1iZy1ob3Zlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMGEzZjU7IH1cbi5jb2xvci0tYmx1ZXMtLXRleHQsIC5jb2xvci0tYmx1ZXMtLXRleHQtaG92ZXI6aG92ZXIge1xuICBjb2xvcjogIzAwYTNmNTsgfVxuLmNvbG9yLS1ybXdiLS1iZywgLmNvbG9yLS1ybXdiLS1iZy1ob3Zlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDM1Mzc7IH1cbi5jb2xvci0tcm13Yi0tdGV4dCwgLmNvbG9yLS1ybXdiLS10ZXh0LWhvdmVyOmhvdmVyIHtcbiAgY29sb3I6ICMzNDM1Mzc7IH1cbi5jb2xvci0td2hpdGUtLWJnLCAuY29sb3ItLXdoaXRlLS1iZy1ob3Zlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7IH1cbi5jb2xvci0td2hpdGUtLXRleHQsIC5jb2xvci0td2hpdGUtLXRleHQtaG92ZXI6aG92ZXIge1xuICBjb2xvcjogI2ZmZmZmZjsgfVxuXG4uZXJyb3Ige1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gIGRpdi5hcmNoaXZlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtd3JhcDogd3JhcDsgfVxuICAgIGRpdi5hcmNoaXZlID4gZGl2IHtcbiAgICAgIG1pbi1oZWlnaHQ6IDFweDtcbiAgICAgIGZsZXg6IDAgMSA0OSU7IH0gfVxuXG4uYXJjaGl2ZS15ZWFyLW5hbWUge1xuICBiYWNrZ3JvdW5kOiBjZW50ZXIvY292ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuYXJjaGl2ZS15ZWFyLW5hbWUgYSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IDJyZW07IH1cbiAgICAuYXJjaGl2ZS15ZWFyLW5hbWUgYTpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLmFyY2hpdmUtY2FyZC15ZWFyIHtcbiAgYmFja2dyb3VuZDogIzM3MzczNztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgLmFyY2hpdmUtY2FyZC15ZWFyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAuYXJjaGl2ZS1jYXJkLXllYXIgPiBsaSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWluLWhlaWdodDogMXB4O1xuICAgIHdpZHRoOiAyNC4yNSU7IH1cbiAgICAuYXJjaGl2ZS1jYXJkLXllYXIgPiBsaTpub3QoOm50aC1jaGlsZCg0bikpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMSU7IH1cblxuLmFyY2hpdmUtY2FyZC1tb250aCB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBtYXJnaW4tYm90dG9tOiAxJTsgfVxuXG4uYXJjaGl2ZS1jYXJkLWRhdGEgc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cbi5hcmNoaXZlLWNhcmQtZGF0YSBzcGFuLm1vbnRoLWNvdW50IHtcbiAgZGlzcGxheTogbm9uZTsgfVxuLmFyY2hpdmUtY2FyZC1kYXRhOmhvdmVyIHNwYW4ubW9udGgtY291bnQge1xuICBkaXNwbGF5OiBpbml0aWFsOyB9XG4uYXJjaGl2ZS1jYXJkLWRhdGE6aG92ZXIgc3Bhbi5tb250aC1uYW1lIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uYXJjaGl2ZS1jYXJkLW1vbnRoIGEge1xuICBiYWNrZ3JvdW5kOiAjMjQyNDI0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmFyY2hpdmUtY2FyZC1tb250aCBhOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDBhM2Y1OyB9XG5cbi5tYWluIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogNzJyZW07XG4gIG1pbi13aWR0aDogMDtcbiAgcGFkZGluZzogMyU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5tYWluIHtcbiAgICAgIHBhZGRpbmc6IDcuNSU7IH0gfVxuICBAbWVkaWEgcHJpbnQge1xuICAgIC5tYWluIHtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDA7IH0gfVxuXG4uYXJ0aWNsZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG4gIC5hcnRpY2xlOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAuYXJ0aWNsZSBkbCwgLmFydGljbGUgb2wsIC5hcnRpY2xlIHVsIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIG1hcmdpbi1sZWZ0OiAxLjI1cmVtO1xuICAgIHBhZGRpbmctbGVmdDogMC41cmVtOyB9XG4gIC5hcnRpY2xlIGJsb2NrcXVvdGUgcDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjAxOTM2cmVtOyB9XG4gIC5hcnRpY2xlIGltZyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RjZGNkYztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gIC5hcnRpY2xlIGlucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4uZXhjZXJwdCBwIHtcbiAgY29sb3I6ICM2ZDZkNmQ7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAucmVsYXRlZC1hcnRpY2xlcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICAucmVsYXRlZC1hcnRpY2xlcyA+IGFydGljbGUge1xuICAgICAgbWluLWhlaWdodDogMXB4O1xuICAgICAgZmxleDogMCAxIDMxLjMzMzMzJTsgfSB9XG5cbi5yZWxhdGVkIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4wMTkzNnJlbTsgfVxuICAucmVsYXRlZDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGNkY2RjO1xuICAgIGJvcmRlci13aWR0aDogMCAwIDFweCAwO1xuICAgIHBhZGRpbmctYm90dG9tOiAxLjAxOTM2cmVtOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAucmVsYXRlZCB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgICAgIC5yZWxhdGVkOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICBib3JkZXItd2lkdGg6IDAgMXB4IDAgMDtcbiAgICAgICAgcGFkZGluZzogMCAxLjUlIDAgMDsgfSB9XG4gIC5yZWxhdGVkIC50aXRsZSB7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cbiAgLnJlbGF0ZWRfX3RodW1ibmFpbCB7XG4gICAgYmFja2dyb3VuZDogY2VudGVyIHRvcC9jb3ZlciBuby1yZXBlYXQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiA5LjE3NDI1cmVtOyB9XG5cbi5mdWxsX19jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgLmZ1bGxfX2NvbnRlbnQ6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gIC5mdWxsX19jb250ZW50ID4gKjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjAxOTM2cmVtOyB9XG5cbi5mb290ZXJfX2F1dGhvciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgIC5mb290ZXJfX2F1dGhvciB7XG4gICAgICBhbGlnbi1pdGVtczogaW5pdGlhbDsgfSB9XG4uZm9vdGVyX19hdmF0YXIge1xuICBib3JkZXI6IDAuMXJlbSBzb2xpZCByZ2JhKDUyLCA1MywgNTUsIDAuMjUpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGZsZXg6IDAgMSBhdXRvO1xuICB3aWR0aDogNXJlbTtcbiAgaGVpZ2h0OiA1cmVtOyB9XG4uZm9vdGVyX19iaW8ge1xuICBmbGV4OiAxO1xuICBtYXJnaW4tbGVmdDogMS4wMTkzNnJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmZvb3Rlcl9fYmlvLWJsdXJiIHtcbiAgICBmbGV4OiAwIDEgYXV0bzsgfVxuXG5jb2RlLCBrYmQsIHByZSwgcHJlIHNwYW4sIHR0LCB2YXIge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgYmFja2dyb3VuZDogIzM0MzUzNztcbiAgY29sb3I6ICNmYmZiZmI7XG4gIGZvbnQ6IDgwMCAwLjkxNzQzcmVtIFwiU291cmNlIENvZGUgUHJvXCIsIFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5rYmQsIHAgY29kZSwgdHQsIHZhciB7XG4gIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtOyB9XG5cbnByZSB7XG4gIHBhZGRpbmc6IDFyZW07IH1cbiAgcHJlIGNvZGUge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5jb21tZW50cyB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICAvKipcbiAgICogQ29tbWVudHMgTGlzdFxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuICAvKipcbiAgICogQ29tbWVudHMgRm9ybVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqLyB9XG4gIC5jb21tZW50c19fY29tbWVudGxpc3Qge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgLmNvbW1lbnRzX19pbnB1dHMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICAgIC5jb21tZW50c19faW5wdXRzID4gaW5wdXQge1xuICAgICAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgICAgIGZsZXg6IDAgMSAzMi4zMzMzMyU7IH0gfVxuICAuY29tbWVudHNfX2lucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwLjUwOTY4cmVtO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgLmNvbW1lbnRzX19pbnB1dCB7XG4gICAgICAgIG1hcmdpbjogMDsgfSB9XG4gIC5jb21tZW50c19fdGV4dGFyZWEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMTIuNXJlbTsgfVxuXG4uY29tbWVudDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4wMTkzNnJlbTsgfVxuLmNvbW1lbnQgaGVhZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjIwLCAyMjAsIDIyMCwgMC40KTtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgLmNvbW1lbnQgaGVhZGVyIHtcbiAgICAgIGJvcmRlcjogMDtcbiAgICAgIG1hcmdpbjogMDsgfSB9XG4uY29tbWVudF9faGVhZGVyIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmNvbW1lbnRfX2hlYWRlci1pdGVtIHtcbiAgICBmbGV4OiAwIDEgYXV0bzsgfVxuICAuY29tbWVudF9faGVhZGVyLWl0ZW06bGFzdC1jaGlsZCB7XG4gICAgcGFkZGluZy1ib3R0b206IDAuMTZyZW07IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAuY29tbWVudF9faGVhZGVyLWl0ZW06bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDIyMCwgMjIwLCAyMjAsIDAuNCk7IH0gfVxuLmNvbW1lbnRfX2F2YXRhciB7XG4gIG1hcmdpbjogMCAxLjAxOTM2cmVtIDEuMDE5MzZyZW0gMDtcbiAgYm9yZGVyOiAwLjFyZW0gc29saWQgcmdiYSg1MiwgNTMsIDU1LCAwLjI1KTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBmbGV4OiAwIDEgYXV0bztcbiAgd2lkdGg6IDRyZW07XG4gIGhlaWdodDogNHJlbTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgLmNvbW1lbnRfX2F2YXRhciB7XG4gICAgICBtYXJnaW46IDAgMS4wMTkzNnJlbSAwIDA7IH0gfVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAuY29tbWVudF9fYm9keSB7XG4gICAgbWFyZ2luLWxlZnQ6IDVyZW07IH0gfVxuLmNvbW1lbnRfX2JvZHkgcDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtOyB9XG5cbmZvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbmZpZWxkc2V0IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbmJ1dHRvbiwgZmllbGRzZXQsIGlucHV0LCB0ZXh0YXJlYSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG91dGxpbmU6IDA7IH1cblxuYnV0dG9uOmZvY3VzLCBmaWVsZHNldDpmb2N1cywgZm9ybTpmb2N1cywgaW5wdXQ6Zm9jdXMsIGxhYmVsOmZvY3VzLCB0ZXh0YXJlYTpmb2N1cyB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG5pbnB1dDpub3QoLm1vZGFsLXNlYXJjaF9faW5wdXQpLCB0ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQ6ICNlZGVkZWQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWluLWhlaWdodDogM3JlbTtcbiAgcGFkZGluZzogMC42MjVyZW0gMXJlbTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjE1czsgfVxuICBpbnB1dDpub3QoLm1vZGFsLXNlYXJjaF9faW5wdXQpOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLCB0ZXh0YXJlYTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiBpbmhlcml0OyB9XG4gIGlucHV0Om5vdCgubW9kYWwtc2VhcmNoX19pbnB1dCk6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIHRleHRhcmVhOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7IH1cbiAgaW5wdXQ6bm90KC5tb2RhbC1zZWFyY2hfX2lucHV0KTotbW96LXBsYWNlaG9sZGVyLCB0ZXh0YXJlYTotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgb3BhY2l0eTogMTsgfVxuICBpbnB1dDpub3QoLm1vZGFsLXNlYXJjaF9faW5wdXQpOjotbW96LXBsYWNlaG9sZGVyLCB0ZXh0YXJlYTo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgaW5wdXQ6bm90KC5tb2RhbC1zZWFyY2hfX2lucHV0KTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsIHRleHRhcmVhOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiBpbmhlcml0OyB9XG4gIGlucHV0Om5vdCgubW9kYWwtc2VhcmNoX19pbnB1dCk6bm90KCNzdWJtaXQpOmZvY3VzLCB0ZXh0YXJlYTpub3QoI3N1Ym1pdCk6Zm9jdXMge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJhY2tncm91bmQ6ICMzNDM1Mzc7IH1cbiAgaW5wdXQ6bm90KC5tb2RhbC1zZWFyY2hfX2lucHV0KTpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwgdGV4dGFyZWE6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjZmZmZmZmOyB9XG4gIGlucHV0Om5vdCgubW9kYWwtc2VhcmNoX19pbnB1dCk6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIHRleHRhcmVhOmZvY3VzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICBpbnB1dDpub3QoLm1vZGFsLXNlYXJjaF9faW5wdXQpOmZvY3VzOi1tb3otcGxhY2Vob2xkZXIsIHRleHRhcmVhOmZvY3VzOi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgaW5wdXQ6bm90KC5tb2RhbC1zZWFyY2hfX2lucHV0KTpmb2N1czo6LW1vei1wbGFjZWhvbGRlciwgdGV4dGFyZWE6Zm9jdXM6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgaW5wdXQ6bm90KC5tb2RhbC1zZWFyY2hfX2lucHV0KTpmb2N1czotbXMtaW5wdXQtcGxhY2Vob2xkZXIsIHRleHRhcmVhOmZvY3VzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cblxudGV4dGFyZWEge1xuICBwYWRkaW5nOiAwLjYyNXJlbTtcbiAgcmVzaXplOiBub25lO1xuICB3aWR0aDogMTAwJTsgfVxuXG5pbnB1dFt0eXBlPXN1Ym1pdF0ge1xuICBoZWlnaHQ6IDJyZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjNyZW07XG4gIHdpZHRoOiAxMDAlOyB9XG4gIGlucHV0W3R5cGU9c3VibWl0XTphY3RpdmUge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJhY2tncm91bmQ6ICMwMGEzZjU7IH1cblxuLmhlYWRsaW5lIHtcbiAgbWFyZ2luLXRvcDogMi4wMzg3MnJlbTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgLmhlYWRsaW5lIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH0gfVxuXG4ubWVudSB7XG4gIG1hcmdpbjogMnJlbSAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAubWVudSB7XG4gICAgICBtYXJnaW46IDNyZW0gMCAwOyB9IH1cbiAgLm1lbnVfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIG1heC13aWR0aDogMTAwJTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgIC5tZW51X19saXN0IHtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH0gfVxuICAubWVudSAubWVudS1pdGVtIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiAzcmVtO1xuICAgIHdpZHRoOiAzcmVtOyB9XG4gICAgLm1lbnUgLm1lbnUtaXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjUwOTY4cmVtOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLm1lbnUgLm1lbnUtaXRlbSB7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDIuNXJlbTtcbiAgICAgICAgd2lkdGg6IDIuNXJlbTsgfSB9XG4gIGJvZHkuZXJyb3I0MDQgLm1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLmxpZ2h0Ym94IHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgb3V0bGluZTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjE1cztcbiAgei1pbmRleDogNDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7IH1cbiAgLmxpZ2h0Ym94X19hbmNob3Ige1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7IH1cbiAgLmxpZ2h0Ym94X19pbWFnZSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtYXJnaW46IDA7XG4gICAgbWF4LWhlaWdodDogOTUlO1xuICAgIG1heC13aWR0aDogOTUlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICByaWdodDogYXV0bztcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG5cbmZpZ3VyZSBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIC8qIEV2ZXJ5IHdvcmQgaGFzIGEgc3BhY2UgYWZ0ZXJ3YXJkLCBhYm92ZSBhbmQgYmVsb3csIHNldCBieSB0aGUgYnJvd3Nlci5cbiAgICogQW4gb2JqZWN0IHdpdGggZGlzcGxheSBcImlubGluZS1ibG9ja1wiIG9yIHNpbWlsYXIgaXMgdHJlYXRlZCBhcyBhIHdvcmRcbiAgICogYnkgeW91ciBicm93c2VyLCBhbmQgZ2l2ZW4gYSBzbWFsbCB0cmFpbGluZyBzcGFjZSBiZXNpZGUgYW5kIGJlbG93LFxuICAgKiBkZXRlcm1pbmVkIGJ5IGVpdGhlciB0aGUgZWxlbWVudCBvciBlbGVtZW50IHBhcmVudCdzIGZvbnQtc2l6ZSB2YWx1ZS5cbiAgICpcbiAgICogVGhpcyB3aWxsIG9mZnNldCBpbWFnZXMgc2V2ZXJhbCBwaXhlbHMgZnJvbSB3aGVyZSB0aGV5IHNob3VsZCBiZSwgaW5cbiAgICogY2lyY3Vtc3RhbmNlcyB3aGVyZSB0aG9zZSBleHRyYSBwaXhlbHMgd2lsbCBicmVhayBsYXlvdXQuICovXG4gIGZvbnQtc2l6ZTogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS41JTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgZmlndXJlIGEge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS4wMTkzNnJlbTsgfSB9XG5maWd1cmUgaW1nIHtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLnBob3RvYm94LS10d28ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuICAucGhvdG9ib3gtLXR3byA+IGEge1xuICAgIG1pbi1oZWlnaHQ6IDFweDtcbiAgICBmbGV4OiAwIDEgNDkuMjUlOyB9XG4gIC5waG90b2JveC0tdHdvIGE6bnRoLWxhc3QtY2hpbGQoLW4rMikge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbi5waG90b2JveC0tdGhyZWUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuICAucGhvdG9ib3gtLXRocmVlID4gYSB7XG4gICAgbWluLWhlaWdodDogMXB4O1xuICAgIGZsZXg6IDAgMSAzMi4zMzMzMyU7IH1cbiAgLnBob3RvYm94LS10aHJlZSBhOm50aC1sYXN0LWNoaWxkKC1uKzMpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4ucGhvdG9ib3gtLWZvdXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuICAucGhvdG9ib3gtLWZvdXIgPiBhIHtcbiAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgZmxleDogMCAxIDIzLjg3NSU7IH1cbiAgLnBob3RvYm94LS1mb3VyIGE6bnRoLWxhc3QtY2hpbGQoLW4rNCkge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLm1vZGFsLXNlYXJjaCB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGhlaWdodDogMTAwdmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXM7XG4gIHotaW5kZXg6IDM7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICAvKipcbiAgICogRm9ybSBBcmVhXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG4gIC8qKlxuICAgKiBJbnB1dCBBcmVhXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovIH1cbiAgLm1vZGFsLXNlYXJjaDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAubW9kYWwtc2VhcmNoX19mb3JtIHtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAubW9kYWwtc2VhcmNoX19mb3JtIGZpZWxkc2V0IHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5tb2RhbC1zZWFyY2hfX2lucHV0LCAubW9kYWwtc2VhcmNoIGxhYmVsW2Zvcj1tb2RhbC1zZWFyY2hfX2lucHV0XSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiA5MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIHJpZ2h0OiBhdXRvO1xuICAgIGJvdHRvbTogYXV0bztcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm1vZGFsLXNlYXJjaF9faW5wdXQsIC5tb2RhbC1zZWFyY2ggbGFiZWxbZm9yPW1vZGFsLXNlYXJjaF9faW5wdXRdIHtcbiAgICAgICAgZm9udC1zaXplOiA0LjVyZW07IH0gfVxuICAgIC5tb2RhbC1zZWFyY2hfX2lucHV0OmZvY3VzICsgbGFiZWwsIC5tb2RhbC1zZWFyY2ggbGFiZWxbZm9yPW1vZGFsLXNlYXJjaF9faW5wdXRdOmZvY3VzICsgbGFiZWwge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAubW9kYWwtc2VhcmNoIC50b2dnbGUge1xuICAgIGhlaWdodDogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgICB3aWR0aDogMnJlbTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxcmVtO1xuICAgIHJpZ2h0OiAxcmVtO1xuICAgIGJvdHRvbTogYXV0bztcbiAgICBsZWZ0OiBhdXRvOyB9XG5cbi5tb2RhbC1zZWFyY2gtaW5wdXQ6Zm9jdXMgKyBsYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4ubmF2aWdhdGlvbi0taG9tZSB7XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLm5hdmlnYXRpb24tLWhvbWUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBib3R0b206IGF1dG87XG4gICAgICBsZWZ0OiAwOyB9IH1cbiAgLm5hdmlnYXRpb24tLWhvbWVfX2xpbmsge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IDAuNzY0NTJyZW0gMDsgfVxuICAgIC5uYXZpZ2F0aW9uLS1ob21lX19saW5rOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIuKGkCBcIjsgfVxuXG4ucGFnaW5hdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5wYWdpbmF0aW9uIHAge1xuICAgIGZsZXg6IDE7IH1cbiAgLnBhZ2luYXRpb24gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnBhZ2luYXRpb24tLXNpdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMDE5MzZyZW07IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAucGFnaW5hdGlvbi0tc2l0ZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0gfVxuICAucGFnaW5hdGlvbl9fY291bnQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwLjc2NDUycmVtIDA7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA2NjdweCkge1xuICAgICAgLnBhZ2luYXRpb25fX2NvdW50IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gICAgLnBhZ2luYXRpb25fX2NvdW50OmVtcHR5IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLnBhZ2luYXRpb25fX25leHQge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgLnBhZ2luYXRpb25fX25leHQgYTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiDihpJcIjsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA2NjdweCkge1xuICAgIC5wYWdpbmF0aW9uX19wcmV2aW91cyB7XG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9IH1cbiAgLnBhZ2luYXRpb25fX3ByZXZpb3VzIGE6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIuKGkCBcIjsgfVxuXG4uc2VhcmNoZm9ybV9faW5wdXQge1xuICBmb250LXNpemU6IDEuNzVyZW07XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NDBweCkge1xuICAjd2lkZ2V0cyB7XG4gICAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgICAjd2lkZ2V0czphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICAjd2lkZ2V0cyA+IGRpdiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1pbi1oZWlnaHQ6IDFweDtcbiAgICAgIHdpZHRoOiAzMiU7IH1cbiAgICAgICN3aWRnZXRzID4gZGl2Om5vdCg6bnRoLWNoaWxkKDNuKSkge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIlOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NDBweCkge1xuICAuc2lkZWJhci13aWRnZXQge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMDE5MzZyZW07IH0gfVxuXG4ud2lkZ2V0LXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41MDk2OHJlbTsgfVxuXG4ubGVmdGllLCAuYWxpZ25sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMCAycmVtIDAuNXJlbSAwO1xuICB3aWR0aDogNTAlOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAubGVmdGllLCAuYWxpZ25sZWZ0IHtcbiAgICAgIHdpZHRoOiAzMCU7IH0gfVxuXG4ucmlnaHRpZSwgLmFsaWducmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbjogMCAwIDAuNXJlbSAycmVtO1xuICB3aWR0aDogNTAlOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAucmlnaHRpZSwgLmFsaWducmlnaHQge1xuICAgICAgd2lkdGg6IDMwJTsgfSB9XG5cbi5hbGlnbmNlbnRlciB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi53cC1jYXB0aW9uLXRleHQsIC53cC1jYXB0aW9uLCAuc2NyZWVuLXJlYWRlci10ZXh0LCAuc3RpY2t5LCAuYnlwb3N0YXV0aG9yLCAuZ2FsbGVyeS1jYXB0aW9uIHtcbiAgY29sb3I6IGluaGVyaXQ7IH1cblxuLnBhZ2UtbGlua3Mge1xuICBtYXJnaW4tdG9wOiAxLjAxOTM2cmVtOyB9XG5cbi5jb21tZW50LW5vdGVzLCAubG9nZ2VkLWluLWFzIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4wMTkzNnJlbTsgfVxuXG4ucG9zdC1wYXNzd29yZC1mb3JtIGlucHV0IHtcbiAgbWFyZ2luOiAxLjAxOTM2cmVtIDA7IH1cblxuXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2Ni4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmZvb3RlcixcbmhlYWRlcixcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5maWdjYXB0aW9uLFxuZmlndXJlLFxubWFpbiB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyoqXG4gKiBDU1MgUmVzZXRcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBAY2F0ZWdvcnkgICBTdHlsZXNoZWV0XG4gKiBAcGFja2FnZSAgICBTaGVlcGllXG4gKiBAYXV0aG9yICAgICBNYXJrIEdyZWFsaXNoIDxtYXJrQGJoYWxhc2guY29tPlxuICogQGNvcHlyaWdodCAgQ29weXJpZ2h0IChjKSAyMDE1IE1hcmsgR3JlYWxpc2hcbiAqIEBsaWNlbnNlICAgIGh0dHBzOi8vd3d3LmdudS5vcmcvY29weWxlZnQvZ3BsLmh0bWwgVGhlIEdOVSBHUEwgdjMuMFxuICogQHZlcnNpb24gICAgMy4wXG4gKiBAbGluayAgICAgICBodHRwczovL2dpdGh1Yi5jb20vYmhhbGFzaC9zaGVlcGllXG4gKi9cblxuaHRtbFxuICBjb2xvcjogY29sb3IoYmxhY2tzLCBtaWQtbGlnaHQpXG4gIGZvbnQtZmFtaWx5OiAkZm9udC0tbWVyaXdlYXRoZXJcbiAgZm9udC1zaXplOiA5MCVcblxuICArbWVkaWEocHJpbnQpXG4gICAgZm9udC1zaXplOiA4NSVcblxuICArbWVkaWEoNTQwKVxuICAgIGZvbnQtc2l6ZTogMTAwJVxuXG5ib2R5XG4gICttZWRpYShwcmludClcbiAgICBtYXJnaW46IDBcblxuLyoqXG4gKiBSZW1vdmUgTWFyZ2lucyBhbmQgUGFkZGluZ1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG5ibG9ja3F1b3RlLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBsaSwgb2wsIHAsIHByZSwgdWxcbiAgbWFyZ2luOiAwXG4gIHBhZGRpbmc6IDBcblxuLyoqXG4gKiBGaWd1cmVzXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmZpZ3VyZVxuICBtYXJnaW4tbGVmdDogMFxuICBtYXJnaW4tcmlnaHQ6IDBcblxuLyoqXG4gKiBIb3Jpem9udGFsIFJ1bGVcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuaHJcbiAgYmFja2dyb3VuZDogY29sb3Iod2hpdGVzLCBtaWQtbGlnaHQpXG4gIGJvcmRlcjogMFxuICBoZWlnaHQ6IDFweFxuXG4vKipcbiAqIElmcmFtZSBhbmQgSW1hZ2UgU2l6ZXNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuaWZyYW1lLCBpbWdcbiAgbWF4LXdpZHRoOiAxMDAlXG4gIG92ZXJmbG93OiBoaWRkZW5cblxuZW1iZWQsIGlmcmFtZVxuICAvLyBFbWJlZGRlZCBhbmQgaWZyYW1lIGNvbnRlbnQgbG9va3Mgd2VpcmQgd2hlbiBwcmludGVkLlxuICArbWVkaWEocHJpbnQpXG4gICAgZGlzcGxheTogbm9uZVxuXG5hcnRpY2xlIGltZ1xuICBoZWlnaHQ6IGF1dG9cblxuLyoqXG4gKiBCbG9ja3F1b3Rlc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG5ibG9ja3F1b3RlXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgY29sb3IoYmxhY2tzLCBsaWdodClcbiAgcGFkZGluZy1sZWZ0OiAwLjYyNXJlbVxuXG4gIHAsIGxpXG4gICAgZm9udC1zdHlsZTogaXRhbGljXG5cbi8qKlxuICogQWJicmV2aWF0aW9uXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmFiYnJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmVcbiIsIi8vLyBcbi8vLyBEZWZhdWx0IFNpemUgQ29sb3JzXG4vLy8gXG4vLy8gRGVmYXVsdCBncmV5IChJIHVzZSBncmF5IGJlY2F1c2UgXCJncmV5XCIgaGlnaGxpZ2h0cyBhbm5veWluZ2x5KSBjYW1lIGZyb20gYVxuLy8vIHNpbXBsZSByb3VuZGVkIHNjYWxlLiBGb3JtdWxhOlxuLy8vIFxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyBcbi8vLyAgIDI1NSAvIDcgPSAzNi40ID0gMzZcbi8vLyAgIDI1NSAtICgzNiAqIHsxLTd9KSA9IDIxOSwgMTgzLCBldGMuXG4vLy8gXG4vLy8gQGV4YW1wbGUgc2NzcyBJZiB5b3Uga2VlcCB0aGUgc3RydWN0dXJlLCB5b3UgY2FuIG1lcmdlIGluIHlvdXIgb3duIGNvbG9ycyBhcyBmb2xsb3dzOlxuLy8vIFxuLy8vICAgJG15LXRoZW1lLWNvbG9yczogKC4uKTtcbi8vLyAgICRkZWZhdWx0LWNvbG9yczogbWFwLW1lcmdlKCRkZWZhdWx0LWNvbG9ycywgJG15LXRoZW1lLWNvbG9ycyk7XG4vLy9cbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAbGluayBodHRwOi8vZXJza2luZWRlc2lnbi5jb20vYmxvZy9mcmllbmRsaWVyLWNvbG9yLW5hbWVzLXNhc3MtbWFwcy9cbi8vL1xuXG4kY2hhcm9uLWNvbG9yLW1hcDogKFxuICBibGFja3M6IChcbiAgICB4LWRhcms6ICMwMDAwMDAsXG4gICAgZGFyazogIzEyMTIxMixcbiAgICBtaWQtZGFyazogIzI0MjQyNCxcbiAgICBiYXNlOiAjMzczNzM3LFxuICAgIG1pZC1saWdodDogIzQ5NDk0OSxcbiAgICBsaWdodDogIzViNWI1YixcbiAgICB4LWxpZ2h0OiAjNmQ2ZDZkXG4gICksXG4gIHdoaXRlczogKFxuICAgIHgtZGFyazogIzkzOTM5MyxcbiAgICBkYXJrOiAjYTVhNWE1LFxuICAgIG1pZC1kYXJrOiAjYjdiN2I3LFxuICAgIGJhc2U6ICNjOGM4YzgsXG4gICAgbWlkLWxpZ2h0OiAjZGNkY2RjLFxuICAgIGxpZ2h0OiAjZWRlZGVkLFxuICAgIHgtbGlnaHQ6ICNmZmZmZmZcbiAgKSxcbikgIWRlZmF1bHQ7XG5cbi8vLyBcbi8vLyBBZGQgQ29sb3IgUGFsZXR0ZXNcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7bWFwfSAkbWFwIC0gTWFwIG9mIGNvbG9ycyB0byBhZGQuXG4vLy8gQHJldHVybiB7bWFwfSAkY2hhcm9uLWNvbG9yLW1hcCAtIE5ldyBjb2xvci5cbi8vL1xuXG5AZnVuY3Rpb24gYWRkLWNvbG9yKCRtYXApIHtcbiAgJGNoYXJvbi1jb2xvci1tYXA6IG1hcC1tZXJnZSgkY2hhcm9uLWNvbG9yLW1hcCwgJG1hcCkgIWdsb2JhbDtcbiAgQHJldHVybiAkY2hhcm9uLWNvbG9yLW1hcDtcbn1cblxuLy8vIFxuLy8vIE91dHB1dCBDb2xvcnMgaW4gQkVNIFN0eWxlXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge3N0cmluZ30gJHByb3BlcnR5IC0gUHJvcGVydHkgdG8gdXNlLlxuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbG9ycyAtIExpc3Qgb2YgY29sb3VycyB0byBvdXRwdXQuXG4vLy8gQHBhcmFtIHtsaXN0fSAkdG9uZXMgLSBMaXN0IG9mIHRvbmVzIG9mIHRoZSBjb2xvciB0byB1c2UuXG4vLy9cblxuQG1peGluIGJlbS1jb2xvci1jbGFzc2VzKCRwcm9wZXJ0eTogJ2NvbG9yJywgJGNvbG9yczogbnVsbCwgJHRvbmVzOiBudWxsKSB7XG4gICRjb2xvcnM6IGlmKCRjb2xvcnMsICRjb2xvcnMsIG1hcC1rZXlzKCRjaGFyb24tY29sb3ItbWFwKSk7XG5cbiAgQGVhY2ggJGNvbG9yIGluICRjb2xvcnMge1xuICAgICYtLSN7JGNvbG9yfSB7XG4gICAgICAkY29sb3I6IG1hcC1nZXQoJGNoYXJvbi1jb2xvci1tYXAsICRjb2xvcik7XG4gICAgICAkdG9uZXM6IGlmKCR0b25lcywgJHRvbmVzLCBtYXAta2V5cygkY29sb3IpKTtcblxuICAgICAgQGVhY2ggJHRvbmUgaW4gJHRvbmVzIHtcbiAgICAgICAgJi0tI3skdG9uZX0ge1xuICAgICAgICAgICN7JHByb3BlcnR5fTogbWFwLWdldCgkY29sb3IsICR0b25lKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLy8gXG4vLy8gRmV0Y2ggZnJvbSBDb2xvciBQYWxldHRlXG4vLy8gXG4vLy8gSW4gc2hvcnQsIHRoZSBwb3N0IGFkdm9jYXRlcyBhIG1hcHBlZCBjb2xvciBvZiBjb2xvcnMgYW5kIHRvbmVzIHVzaW5nIGFcbi8vLyBzZXQgc2NoZW1hLCBhbmQgdGhlbiB1c2luZyB0aGlzIGZ1bmN0aW9uIHRvIHJldHVybiB0aGUgY29sb3JzLlxuLy8vIFxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyBcbi8vLyAgICRfY29sb3ItYmFzZS1ncmF5OiByZ2IoMjI5LDIzMSwyMzQpO1xuLy8vICAgXG4vLy8gICAkY29sb3JzOiAoXG4vLy8gICAgIHB1cnBsZTogKFxuLy8vICAgICAgIGJhc2U6IHJnYig0Miw0MCw4MCksXG4vLy8gICAgICAgbGlnaHQ6IHJnYig1MSw0NiwxNDApLFxuLy8vICAgICAgIGRhcms6IHJnYig0MCwzOCw2NSlcbi8vLyAgICAgKSxcbi8vLyAgICAgZ3JheTogKFxuLy8vICAgICAgIGJhc2U6ICRfY29sb3ItYmFzZS1ncmF5LFxuLy8vICAgICAgIGxpZ2h0OiBsaWdodGVuKCRfY29sb3ItYmFzZS1ncmF5LCAxMCUpLFxuLy8vICAgICAgIGRhcms6IGRhcmtlbigkX2NvbG9yLWJhc2UtZ3JheSwgMTAlKVxuLy8vICAgICApXG4vLy8gICApO1xuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQGxpbmsgaHR0cDovL2Vyc2tpbmVkZXNpZ24uY29tL2Jsb2cvZnJpZW5kbGllci1jb2xvci1uYW1lcy1zYXNzLW1hcHMvXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRjb2xvciAtIENvbG9yIHRvIGJlIHVzZWQgZnJvbSBtYXAuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICR0b25lIC0gRGVmYXVsdCB0b25lIHRvIGJlIHVzZWQuXG4vLy8gQHBhcmFtIHttYXB9ICRjb2xvciAtIFBhbGV0dGUgb2YgY29sb3JzLlxuLy8vIEByZXR1cm4ge3N0cmluZ30gQ29sb3IgY2hlbiBmcm9tIG1hcC5cbi8vL1xuXG5AZnVuY3Rpb24gY29sb3IoJGNvbG9yLCAkdG9uZTogJ2Jhc2UnKSB7XG4gIEByZXR1cm4gbWFwLWdldChtYXAtZ2V0KCRjaGFyb24tY29sb3ItbWFwLCAkY29sb3IpLCAkdG9uZSk7XG59XG5cbi8vLyBcbi8vLyBJbnZlcnQgUkdCQVxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRyZWQgLSBSZWQgdmFsdWUuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRncmVlbiAtIEdyZWVuIHZhbHVlLlxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkYmx1ZSAtIEJsdWUgdmFsdWUuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRhbHBoYSAtIEFscGhhIHZhbHVlLlxuLy8vIEByZXR1cm4ge21hcH0gLSBJbnZlcnRlZCBSR0JBLlxuLy8vXG5cbkBmdW5jdGlvbiByZ2JhLW9wcG9zaXRlKCRyZWQ6IDI1NSwgJGdyZWVuOiAyNTUsICRibHVlOiAyNTUsICRhbHBoYTogMCkge1xuICBAcmV0dXJuIHJnYmEoMjU1IC0gJHJlZCwgMjU1IC0gJGdyZWVuLCAyNTUgLSAkYmx1ZSwgMSAtICRhbHBoYSk7XG59XG4iLCIvKipcbiAqIFN0eWxlc2hlZXQgVmFyaWFibGVzXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQGNhdGVnb3J5ICAgU3R5bGVzaGVldFxuICogQHBhY2thZ2UgICAgU2hlZXBpZVxuICogQGF1dGhvciAgICAgTWFyayBHcmVhbGlzaCA8bWFya0BiaGFsYXNoLmNvbT5cbiAqIEBjb3B5cmlnaHQgIENvcHlyaWdodCAoYykgMjAxNSBNYXJrIEdyZWFsaXNoXG4gKiBAbGljZW5zZSAgICBodHRwczovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2dwbC5odG1sIFRoZSBHTlUgR1BMIHYzLjBcbiAqIEB2ZXJzaW9uICAgIDMuMFxuICogQGxpbmsgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2JoYWxhc2gvc2hlZXBpZVxuICovXG5cbi8qKlxuICogVGhlbWUgQnJlYWtwb2ludHNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuJHNoZWVwaWUtbWVkaWEtcHJlc2V0OiBhZGQtbWVkaWEtcHJlc2V0cygoXG4gIDE2MDA6ICdvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTYwMHB4KScsXG4gIDEyODA6ICdvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTI4MHB4KScsXG4gIDEwMjQ6ICdvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KScsXG4gIDc2ODogJ29ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCknLFxuICA2NDA6ICdvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpJyxcbiAgNTQwOiAnb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU0MHB4KSdcbikpO1xuXG4vKipcbiAqIE1vZHVsYXIgU2NhbGUgRm9udCBTaXplIHdpdGggdGhlIEdvbGRlbiBSYXRpb1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIDEuNiAvIGdvbGRlbiByYXRpby4gJGJhc2UtZm9udC1zaXplICogJGdvbGRlbi1yYXRpbyA9IDEuNiBleGFjdGx5IHdpdGhcbiAqIFNhc3MncyB0ZW4tZGlnaXRzLW9mLXByZWNpc2lvbiByb3VuZGluZy5cbiAqXG4gKiBAbGluayBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Hb2xkZW5fcmF0aW9cbiAqIEBsaW5rIGh0dHA6Ly93d3cubW9kdWxhcnNjYWxlLmNvbS9cbiAqIEBsaW5rIGh0dHA6Ly93d3cucGVhcnNvbmlmaWVkLmNvbS90eXBvZ3JhcGh5L1xuICovXG5cbi8vIENvcmUgZm9udCBzaXplIGFuZCBsaW5lLWhlaWdodC5cbiRiYXNlLWZvbnQtc2l6ZTogMC42M3JlbTtcblxuJGZvbnQtc2l6ZS0tcGFyYWdyYXBoOiBnb2xkZW4tc2NhbGUoMSwgJGJhc2UtZm9udC1zaXplKTtcbiRsaW5lLWhlaWdodC0tcGFyYWdyYXBoOiBnb2xkZW4tc2NhbGUoMSwgJGZvbnQtc2l6ZS0tcGFyYWdyYXBoKTtcblxuLyoqXG4gKiBDb250ZW50IFNpZGUtYnktU2lkZSBTaXplc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEJvdGggdGhlIHBlcmNlbnRhZ2Ugd2lkdGggb2YgdGhlIGNvbnRlbnQgY29sdW1uIGFuZCB0aGUgcmlnaHQgb2Zmc2V0IG9mIHRoZVxuICogaGVhZGVyIGluIHNpZGUtYnktc2lkZSBtb2RlLCBpLmUuICNjb250ZW50IGhhcyBhIHdpZHRoIG9mIDYwJSBhbmQgI2hlYWRlciBpc1xuICogb2Zmc2V0IGZyb20gdGhlIHJpZ2h0IGJ5IDYwJS5cbiAqL1xuXG4kbmF2YmFyLXdpZHRoOiAyNTtcbiRuYXZiYXItaGVpZ2h0OiAxMDB2aDtcblxuLyoqXG4gKiBEZWZhdWx0IFZlcnRpY2FsIFNwYWNlXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRGVjaW1hbCBzaXplIHRoYXQgY29tcGlsZXMgdG8gUkVNLiBJIGdvIHRocm91Z2ggdGhlIG1vdGlvbnMgb2YgY29tcGlsaW5nIHRoaXNcbiAqIHRocm91Z2ggbW9kdWxhciBzY2FsZSwgYnV0IFRsO0RSOiAxcmVtLzE2cHguXG4gKi9cblxuJHZzcGFjZTogZ29sZGVuLXNjYWxlKDEsICRiYXNlLWZvbnQtc2l6ZSk7XG5cbi8qKlxuICogU3BsaXQgQ29sdW1uIE1hcmdpblxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4kc3BsaXQtY29sdW1uLW1hcmdpbjogMS41JTtcblxuLypcbiAqIENvbG9yc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4kc2hlZXBpZS1jb2xvdXJzOiBhZGQtY29sb3IoKFxuICBibHVlczogKFxuICAgICAgYmFzZTogIzAwYTNmNVxuICApLFxuICBybXdiOiAoXG4gICAgYmFzZTogIzM0MzUzN1xuICApXG4pKTtcblxuLyoqXG4gKiAgQXZhdGFyIFNpemVzXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbiRhdmF0YXItLWJpZzogOS42O1xuJGF2YXRhci0tc21hbGw6IDYuNTtcblxuLypcbiAqIFR5cGVmYWNlIERlY2xhcmF0aW9uc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4kZm9udC0tb3BlbnNhbnM6ICdPcGVuIFNhbnMnLCBWZXJkYW5hLCBHZW5ldmEsIHNhbnMtc2VyaWYsIHNhbnMtc2VyaWY7XG4kZm9udC0tc291cmNlY29kZXBybzonU291cmNlIENvZGUgUHJvJywgJ0NvdXJpZXIgTmV3JywgQ291cmllciwgbW9ub3NwYWNlO1xuJGZvbnQtLWxhdG86ICdMYXRvJywgVmVyZGFuYSwgR2VuZXZhLCBzYW5zLXNlcmlmLCBzYW5zLXNlcmlmO1xuJGZvbnQtLW1lcml3ZWF0aGVyOiAnTWVycml3ZWF0aGVyJywgR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIHNlcmlmO1xuXG4vKipcbiAqIEJvcmRlcnNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuJGxpZ2h0LWJvcmRlcjogMXB4IHNvbGlkIHJnYmEoY29sb3Iod2hpdGVzLCBtaWQtbGlnaHQpLCAwLjQpO1xuIiwiLy8vIFxuLy8vIE1lZGlhIFF1ZXJ5IFRlcm1zXG4vLy9cbi8vLyBJbnRlcm5hbCBsaXN0IG9mIEBtZWRpYSBrZXl3b3JkcyB1c2VkIHRvIGNvbXBvc2UgcXVlcmllcyBmcm9tIHNob3J0aGFuZFxuLy8vIHF1ZXJpZXMuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL01lZGlhX1F1ZXJpZXMvVXNpbmdfbWVkaWFfcXVlcmllc1xuLy8vXG5cbiRfY2hhcm9uLW1lZGlhLXRlcm1zOiAoXG4gIG1vZDogKFxuICAgICdvbmx5JywgJ25vdCdcbiAgKSxcbiAgbWVkaWE6IChcbiAgICAvLyBOb24tZGVwcmVjYXRlZCBtZWRpYSBxdWVyeSBkZXZpY2VzLlxuICAgICdhbGwnLCAnYXVyYWwnLCAnYnJhaWxsZScsICdoYW5kaGVsZCcsICdwcmludCcsICdwcm9qZWN0aW9uJywgJ3NjcmVlbicsICd0dHknLCAndHYnLCAnZW1ib3NzZWQnXG4gICksXG4gIHByb3BlcnR5OiAoXG4gICAgLy8gTm9uLWJyb3dzZXItcHJlZml4ZWQgQG1lZGlhIGZlYXR1cmVzLlxuICAgICdoZWlnaHQnLCAnd2lkdGgnLCAnZGV2aWNlLXdpZHRoJywgJ2RldmljZS1oZWlnaHQnLCAnYXNwZWN0LXJhdGlvJywgJ2NvbG9yJywgJ2NvbG9yLWluZGV4JywgJ21vbm9jaHJvbWUnLCAncmVzb2x1dGlvbicsICdzY2FuJywgJ2dyaWQnLCAnb3JpZW50YXRpb24nXG4gICksXG4gIHByZWZpeDogKFxuICAgIC8vIFZhbGlkIHByZWZpeCBtb2RzLlxuICAgICdtaW4nLCAnbWF4J1xuICApLFxuICBwcmVmaXhlZDogKFxuICAgIC8vIEBtZWRpYSBmZWF0dXJlZCB3aXRoIGEgbWluL21heCBwcmVmaXguXG4gICAgJ2hlaWdodCcsICd3aWR0aCcsICdkZXZpY2Utd2lkdGgnLCAnZGV2aWNlLWhlaWdodCcsICdhc3BlY3QtcmF0aW8nLCAnY29sb3InLCAnY29sb3ItaW5kZXgnLCAnbW9ub2Nocm9tZScsICdyZXNvbHV0aW9uJ1xuICApLFxuICBub3ZhbDogKFxuICAgICdtb25vY2hyb21lJ1xuICApXG4pICFkZWZhdWx0O1xuXG4vLy8gXG4vLy8gUGFyc2UgTnVtYmVyIFJhbmdlIGZvciBQcmVzZXRzXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge251bWJlcn0gJG1pbiAtIFJhbmdlIG1pbmltdW0gc2l6ZS5cbi8vLyBAcGFyYW0ge251bWJlcn0gJG1heCAtIFJhbmdlIG1heGltdW0gc2l6ZS5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJHByb3BlcnR5IC0gUmFuZ2UgcHJvcGVydHkuXG4vLy8gQHJldHVybiB7c3RyaW5nfSBQYXJzZWQgbWVkaWEgcXVlcnkgcmFuZ2UgY29uZGl0aW9uLlxuLy8vXG5cbkBmdW5jdGlvbiBzaXplLXJhbmdlKCRtaW4sICRtYXgsICRwcm9wZXJ0eTogJ2RldmljZS13aWR0aCcpIHtcbiAgQHJldHVybiAnb25seSBzY3JlZW4gYW5kIChtaW4tI3skcHJvcGVydHl9OiAjeyRtaW59KSBhbmQgKG1heC0jeyRwcm9wZXJ0eX06ICN7JG1heH0pJztcbn1cblxuLy8vIFxuLy8vIEludGVybmFsIG1hcCBvZiBtZWRpYSBxdWVyaWVzIHByZXNldHNcbi8vL1xuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG5cbiRfY2hhcm9uLW1lZGlhLW1hcDogKFxuICBleGFtcGxlOiAnb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMwMHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDEwMHZoKScsXG4gIHdhdGNoOiBzaXplLXJhbmdlKDIxOHB4LCAyODFweCksXG4gIHNtYXJ0cGhvbmU6IHNpemUtcmFuZ2UoMzIwcHgsIDY2N3B4KSxcbiAgdGFibGV0OiBzaXplLXJhbmdlKDYwMHB4LCAxMjgwcHgpXG4pO1xuXG4vLy8gXG4vLy8gQWRkIHRvIFRlbXBsYXRlIFByZXNldHNcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge21hcH0gJG1hcCAtIE1hcCBvZiBwcmVzZXRzIHRvIGFkZC5cbi8vLyBAcmV0dXJuIHttYXB9ICRfY2hhcm9uLW1lZGlhLW1hcCAtIExpYnJhcnkgbWVkaWEgcHJlc2V0LlxuLy8vXG5cbkBmdW5jdGlvbiBhZGQtbWVkaWEtcHJlc2V0cygkbWFwKSB7XG4gICRfY2hhcm9uLW1lZGlhLW1hcDogbWFwLW1lcmdlKCRfY2hhcm9uLW1lZGlhLW1hcCwgJG1hcCkgIWdsb2JhbDtcbiAgQHJldHVybiAkX2NoYXJvbi1tZWRpYS1tYXA7XG59XG5cbi8vLyBcbi8vLyBUZXN0IGlmIGEgZ2l2ZW4gcHJvcGVydHkgaXMgYSBwcmVzZXQtaXMgdGhlIGtleSBwcmVzZW50IGluIHRoZSBpbnRlcm5hbCBtYXBcbi8vLyBvZiBzdG9yZWQgbWVkaWEgcXVlcmllcz9cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge3N0cmluZ30gJGNvbmRpdGlvbiAtIFByb3BlcnR5IHRvIHRlc3QuXG4vLy8gQHJldHVybiB7Ym9vbH0gUHJvcGVydHkgaXMgYSBwcmVzZXQsIHRydWUvZmFsc2UuXG4vLy9cblxuQGZ1bmN0aW9uIF9pcy1wcmVzZXQoJGNvbmRpdGlvbikge1xuICBAcmV0dXJuIG1hcC1oYXMta2V5KCRfY2hhcm9uLW1lZGlhLW1hcCwgJGNvbmRpdGlvbik7XG59XG5cbi8vLyBcbi8vLyBHZXQgcHJlc2V0IGZyb20gdGhlIGludGVybmFsIG1hcCBvZiBtZWRpYSBxdWVyaWVzLlxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkcHJvcGVydHkgLSBQcm9wZXJ0eSB0byBmZXRjaC5cbi8vLyBAcGFyYW0ge3N0cmluZ30gLSBQcmVzZXQgcHJvcGVydHkuXG4vLy9cblxuQGZ1bmN0aW9uIF9nZXQtcHJlc2V0KCRjb25kaXRpb24pIHtcbiAgQHJldHVybiBtYXAtZ2V0KCRfY2hhcm9uLW1lZGlhLW1hcCwgJGNvbmRpdGlvbik7XG59XG5cbi8vLyBcbi8vLyBUZXN0IGlmIGEgZ2l2ZW4gcHJvcGVydHkgaXMgYSBwaXRoeSBzaG9ydGhhbmQgbWVkaWEgcXVlcnkuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRwcm9wZXJ0eSAtIFByb3BlcnR5IHRvIHRlc3QuXG4vLy8gQHJldHVybiB7Ym9vbH0gLSBQcm9wZXJ0eSBpcyBzaG9ydGhhbmQvdHJ1ZSBmYWxzZS5cbi8vL1xuXG5AZnVuY3Rpb24gX2lzLW1lZGlhLXNob3J0aGFuZCgkcHJvcGVydHkpIHtcbiAgQHJldHVybiBsZW5ndGgoJHByb3BlcnR5KSA9PSAxIGFuZCBub3QgX2lzLXByZXNldCgkcHJvcGVydHkpO1xufVxuXG4vLy8gXG4vLy8gRXhwYW5kIGEgc2hvcnRoYW5kIG1lZGlhIHF1ZXJ5IGludG8gb25lIHJlY29nbml6YWJsZSBhbmQgdXNhYmxlIGJ5IHRoZSBcbi8vLyBicm93c2VyLCBlLmcuOlxuLy8vXG4vLy8gJ2xhbmRzY2FwZScgPT4gJ29ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSknXG4vLy8gJ3Byb2dyZXNzaXZlJyA9PiAnb25seSB0diBhbmQgKHNjYW46IHByb2dyZXNzaXZlKSdcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge3N0cmluZ30gJHByb3BlcnR5IC0gUHJvcGVydHkgdG8gdGVzdC5cbi8vLyBAcmV0dXJuIHtzdHJpbmd9ICRzaG9ydGhhbmQgLSBFeHBhbmRlZCBtZWRpYSBzaG9ydGhhbmQgdGVybS5cbi8vL1xuXG5AZnVuY3Rpb24gX21lZGlhLXNob3J0aGFuZCgkcHJvcGVydHkpIHtcbiAgJHNob3J0aGFuZDogJyc7XG4gICRwcm9wZXJ0eTogbnRoKCRwcm9wZXJ0eSwgMSk7XG5cbiAgQGlmICRwcm9wZXJ0eSA9PSBsYW5kc2NhcGUgb3IgJHByb3BlcnR5ID09IHBvcnRyYWl0IHtcbiAgICAvLyBvcmllbnRhdGlvbjogbGFuZHNjYXBlL3BvcnRyYWl0XG4gICAgJHNob3J0aGFuZDogJ29ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246ICN7JHByb3BlcnR5fSknO1xuICB9IEBlbHNlIGlmICRwcm9wZXJ0eSA9PSBwcm9ncmVzc2l2ZSBvciAkcHJvcGVydHkgPT0gaW50ZXJsYWNlIHtcbiAgICAvLyBzY2FuOiBwcm9ncmVzc2l2ZS9pbnRlcmxhY2VcbiAgICAkc2hvcnRoYW5kOiAnb25seSB0diBhbmQgKHNjYW46ICN7JHByb3BlcnR5fSknO1xuICB9IEBlbHNlIGlmICRwcm9wZXJ0eSA9PSBtb25vY2hyb21lIHtcbiAgICAvLyBtb25vY2hyb21lXG4gICAgJHNob3J0aGFuZDogJ2FsbCBhbmQgKCN7JHByb3BlcnR5fSknO1xuICB9IEBlbHNlIGlmIGluZGV4KG1hcC1nZXQoJF9jaGFyb24tbWVkaWEtdGVybXMsIG1lZGlhKSwgJHByb3BlcnR5KSAhPSBudWxsIHtcbiAgICAkc2hvcnRoYW5kOiAkcHJvcGVydHk7XG4gIH1cblxuICBAcmV0dXJuICRzaG9ydGhhbmQ7XG59XG5cbi8vLyBcbi8vLyBUZXN0IGlmIGEgcHJvcGVydHkgaXMgcHJlZml4ZWQuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRwcm9wZXJ0eSAtIFByb3BlcnR5IHRvIHRlc3QgZm9yIHByZWZpeGVkbmVzcy5cbi8vLyBAcmV0dXJuIHtib29sfSAtIFByb3BlcnR5IGlzIHByZWZpeGVkLCB0cnVlL2ZhbHNlLlxuLy8vXG5cbkBmdW5jdGlvbiBfaGFzLXByZWZpeCgkcHJvcGVydHkpIHtcbiAgQHJldHVybiBpbmRleChtYXAtZ2V0KCRfY2hhcm9uLW1lZGlhLXRlcm1zLCBwcmVmaXhlZCksICRwcm9wZXJ0eSkgIT0gZmFsc2U7XG59XG5cbi8vLyBcbi8vLyBTcGxpdCB1cCBhbiBlbnRlcmVkIHNob3J0aGFuZCBtZWRpYSBxdWVyeSBpbnRvIHJlbGV2YW50IGZyYWdtZW50cyB0byBiZSBcbi8vLyBnbHVlZCBpbnRvIGEgYnJvd3Nlci1hY2NlcHRhYmxlIG1lZGlhIHF1ZXJ5LlxuLy8vXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29uZGl0aW9uIC0gTWVkaWEgY29uZGl0aW9uIHRvIHNwbGl0LlxuLy8vIEByZXR1cm4ge21hcH0gJHNwbGl0IC0gU3BsaXQgdXAgY29uZGl0aW9uLlxuLy8vXG5cbkBmdW5jdGlvbiBfc3BsaXQtY29uZGl0aW9uKCRjb25kaXRpb24pIHtcbiAgJHNwbGl0OiAoKTtcblxuICBAZWFjaCAkdGVybSBpbiAkY29uZGl0aW9uIHtcbiAgICBAaWYgaW5kZXgobWFwLWdldCgkX2NoYXJvbi1tZWRpYS10ZXJtcywgbWVkaWEpLCAkdGVybSkgIT0gbnVsbCB7XG4gICAgICAvLyBAbWVkaWEgdHlwZTogc2NyZWVuLCBwcmludCwgZXRjLlxuICAgICAgJHNwbGl0OiBtYXAtbWVyZ2UoJHNwbGl0LCAobWVkaWE6ICR0ZXJtKSk7XG4gICAgfSBAZWxzZSBpZiBpbmRleChtYXAtZ2V0KCRfY2hhcm9uLW1lZGlhLXRlcm1zLCBtb2QpLCAkdGVybSkgIT0gbnVsbCB7XG4gICAgICAvLyBNZWRpYSBtb2RpZmllciB0ZXJtOiBub3Qgb3IgYW5kLlxuICAgICAgJHNwbGl0OiBtYXAtbWVyZ2UoJHNwbGl0LCAobW9kOiAkdGVybSkpO1xuICAgIH0gQGVsc2UgaWYgaW5kZXgobWFwLWdldCgkX2NoYXJvbi1tZWRpYS10ZXJtcywgcHJlZml4KSwgJHRlcm0pICE9IG51bGwge1xuICAgICAgLy8gQG1lZGlhIHByb3BlcnR5IHByZWZpeDogbWluIG9yIG1heC5cbiAgICAgICRzcGxpdDogbWFwLW1lcmdlKCRzcGxpdCwgKHByZWZpeDogJHRlcm0pKTtcbiAgICB9IEBlbHNlIGlmIGluZGV4KG1hcC1nZXQoJF9jaGFyb24tbWVkaWEtdGVybXMsIHByb3BlcnR5KSwgJHRlcm0pICE9IG51bGwge1xuICAgICAgLy8gQG1lZGlhIHByb3BlcnR5OiBjb2xvciwgd2lkdGgsIGhlaWdodCwgZXRjLlxuICAgICAgJHNwbGl0OiBtYXAtbWVyZ2UoJHNwbGl0LCAocHJvcGVydHk6ICR0ZXJtKSk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAvLyBAbWVkaWEgcHJvcGVydHkgdmFsdWU6IDMwMHB4LCAxMHJlbSwgZXRjLlxuICAgICAgJHNwbGl0OiBtYXAtbWVyZ2UoJHNwbGl0LCAodmFsdWU6ICR0ZXJtKSk7XG4gICAgfVxuICB9XG5cbiAgQGlmIG5vdCBtYXAtaGFzLWtleSgkc3BsaXQsIHByb3BlcnR5KSB7XG4gICAgQGVycm9yIFwiTWVkaWEgY29uZGl0aW9uICcjeyRjb25kaXRpb259JyBpcyBtaXNzaW5nIGEgbWVkaWEgcXVlcnkgcHJvcGVydHkgKGUuZy4gbWluLXdpZHRoLCBoZWlnaHQpIVwiO1xuICB9XG5cbiAgQGlmIG5vdCBtYXAtaGFzLWtleSgkc3BsaXQsIG1vZCkge1xuICAgIC8vIEFkZCBtb2RpZmllciBpZiBpdCB3YXNuJ3QgYWRkZWQuXG4gICAgJHNwbGl0OiBtYXAtbWVyZ2UoJHNwbGl0LCAobW9kOiBvbmx5KSk7XG4gIH1cblxuICBAaWYgbm90IG1hcC1oYXMta2V5KCRzcGxpdCwgbWVkaWEpIHtcbiAgICAvLyBUZXN0IGZvciBtaXNzaW5nIHByb3BlcnR5LlxuICAgICRzcGxpdDogbWFwLW1lcmdlKCRzcGxpdCwgKG1lZGlhOiBzY3JlZW4pKTtcbiAgfVxuXG4gIEBpZiBub3QgbWFwLWhhcy1rZXkoJHNwbGl0LCBwcmVmaXgpIHtcbiAgICAvLyBUZXN0IGZvciBtaXNzaW5nIHByZWZpeC5cbiAgICAkc3BsaXQ6IG1hcC1tZXJnZSgkc3BsaXQsIChwcmVmaXg6ICcnKSk7XG4gIH1cblxuICBAaWYgbm90IG1hcC1oYXMta2V5KCRzcGxpdCwgdmFsdWUpIGFuZCBwcm9wZXJ0eS1oYXMtdmFsdWUobWFwLWdldCgkc3BsaXQsIHByb3BlcnR5KSkge1xuICAgIC8vIFRlc3QgZm9yIG1pc3NpbmcgdmFsdWUsIGlmIHByb3BlcnR5IGhhcyB2YWx1ZS5cbiAgICBAZXJyb3IgXCJNZWRpYSBjb25kaXRpb24gJyN7JGNvbmRpdGlvbn0nIGlzIG1pc3NpbmcgYSBtZWRpYSBxdWVyeSB2YWx1ZSAoZS5nLiwgMzAwcHgsIDEwcmVtKSFcIjtcbiAgfVxuXG4gIEByZXR1cm4gJHNwbGl0O1xufVxuXG4vLy8gXG4vLy8gSW50ZXJuYWwgbWV0aG9kIHRvIGV4cGFuZCBzaG9ydGhhbmQgbWVkaWEgY29uZGl0aW9uOlxuLy8vIFxuLy8vICAgICAnd2lkdGggbWF4IDMwMHB4JyA9PiAnb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMwMHB4KSdcbi8vL1xuLy8vIEV4YW1wbGVzOlxuLy8vXG4vLy8gICAgIHNjcmVlbiB3aWR0aCAzMDBweFxuLy8vICAgICBub3Qgc2NyZWVuIHdpZHRoIG1pbiAyMDBweFxuLy8vICAgICBub3Qgc2NyZWVuIG1pbiB3aWR0aCAyMDBweFxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7bWFwfSAkY29uZGl0aW9uIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uIHRvIGJlIHBhcnNlZC5cbi8vLyBAcmV0dXJuIHtzdHJpbmd9ICRjb25kaXRpb24gLSBQYXJzZWQgY29uZGl0aW9uIGFwcGVuZGVkIHRvIHF1ZXJ5LlxuLy8vXG5cbkBmdW5jdGlvbiBfcGFyc2UtY29uZGl0aW9uKCRjb25kaXRpb24pIHtcbiAgJHNwbGl0OiBfc3BsaXQtY29uZGl0aW9uKCRjb25kaXRpb24pO1xuXG4gICRtZWRpYTogbWFwLWdldCgkc3BsaXQsIG1lZGlhKTtcbiAgJG1vZDogbWFwLWdldCgkc3BsaXQsIG1vZCk7XG4gICRwcmVmaXg6IG1hcC1nZXQoJHNwbGl0LCBwcmVmaXgpO1xuICAkcHJvcGVydHk6IG1hcC1nZXQoJHNwbGl0LCBwcm9wZXJ0eSk7XG4gICR2YWx1ZTogbWFwLWdldCgkc3BsaXQsIHZhbHVlKTtcblxuICBAaWYgcHJvcGVydHktaGFzLXZhbHVlKCRwcm9wZXJ0eSkge1xuICAgIEBpZiBfaGFzLXByZWZpeCgkcHJvcGVydHkpIGFuZCAkcHJlZml4IHtcbiAgICAgICRwcmVmaXg6ICcjeyRwcmVmaXh9LSc7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkcHJlZml4OiAnJztcbiAgICB9XG5cbiAgICAkcHJvcGVydHk6ICcoI3skcHJlZml4fSN7JHByb3BlcnR5fTogI3skdmFsdWV9KSc7XG4gIH0gQGVsc2Uge1xuICAgICRwcm9wZXJ0eTogJygjeyRwcm9wZXJ0eX0pJztcbiAgfVxuXG4gICRjb25kaXRpb246ICcjeyRtb2R9ICN7JG1lZGlhfSBhbmQgI3skcHJvcGVydHl9JztcblxuICBAcmV0dXJuICRjb25kaXRpb247XG59XG5cbi8vLyBcbi8vLyBDU1MgQG1lZGlhIFF1ZXJ5IEZ1bmN0aW9uXG4vLy8gXG4vLy8gT3JkZXIgb2YgcmVzb2x1dGlvbjpcbi8vLyBcbi8vLyAxLiBVc2VyLWFkZGVkIHByZXNldHMuXG4vLy8gMi4gRXhpc3Rpbmcgc2hvcnRoYW5kIHJ1bGVzLlxuLy8vIDMuIEFsbCBvdGhlciBhcmJpdHJhcnkgcXVlcmllcy5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbmRpdGlvbiAtIFF1ZXJ5IGNvbmRpdGlvbnMocyk7XG4vLy8gQHJldHVybiB7c3RyaW5nfSAkY29uZGl0aW9uIC0gUGFyc2VkIG1lZGlhIHF1ZXJ5LlxuLy8vXG5cbkBmdW5jdGlvbiBxdWVyeSgkY29uZGl0aW9uKSB7XG4gIEBpZiBfaXMtcHJlc2V0KCRjb25kaXRpb24pIHtcbiAgICAkY29uZGl0aW9uOiBfZ2V0LXByZXNldCgkY29uZGl0aW9uKTtcbiAgfSBAZWxzZSBpZiBfaXMtbWVkaWEtc2hvcnRoYW5kKCRjb25kaXRpb24pIHtcbiAgICAkY29uZGl0aW9uOiBfbWVkaWEtc2hvcnRoYW5kKCRjb25kaXRpb24pO1xuICB9IEBlbHNlIHtcbiAgICAkY29uZGl0aW9uOiBfcGFyc2UtY29uZGl0aW9uKCRjb25kaXRpb24pO1xuICB9XG5cbiAgQHJldHVybiAkY29uZGl0aW9uO1xufVxuXG4vLy8gXG4vLy8gTWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlIGxpYnJhcnkuIENvbmRpdGlvbnMgYXJlIHBhc3NlZCB0byBxdWVyeSgpIHRvIHBhcnNlLlxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtsaXN0fSAkcXVlcmllcyAtIFF1ZXJ5IGNvbmRpdGlvbnMuXG4vLy9cblxuQG1peGluIG1lZGlhKCRjb25kaXRpb25zLi4uKSB7XG4gIC8vICwgPT0gT1IgLXwtIGFuZCA9PSBBTkRcbiAgJGJvb2w6ICcsJztcbiAgJHF1ZXJ5OiAnJztcblxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkY29uZGl0aW9ucykge1xuICAgICRjb25kaXRpb246IG50aCgkY29uZGl0aW9ucywgJGkpO1xuXG4gICAgQGlmICRpID4gMSB7XG4gICAgICAkcXVlcnk6ICcjeyRxdWVyeX0jeyRib29sfSAnO1xuICAgIH1cblxuICAgICRxdWVyeTogJyN7JHF1ZXJ5fSAje3F1ZXJ5KCRjb25kaXRpb24pfSc7XG4gIH1cblxuICBAbWVkaWEgI3skcXVlcnl9IHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gXG4vLy8gUmV0aW5hIFBpeGVsIERlbnNpdHkgU2NyZWVuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGRlbnNpdHkgLSBQaXhlbCBkZW5zaXR5LlxuLy8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL3JldGluYS1kaXNwbGF5LW1lZGlhLXF1ZXJ5L1xuLy8vXG5cbkBtaXhpbiBkZW5zaXR5KCRkZW5zaXR5KSB7XG4gIEBtZWRpYVxuICBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86ICRkZW5zaXR5KSxcbiAgc2NyZWVuIGFuZCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAkZGVuc2l0eSksXG4gIHNjcmVlbiBhbmQgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86ICRkZW5zaXR5LzEpLFxuICBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAkZGVuc2l0eSksXG4gIHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAjeyRkZW5zaXR5ICogOTZ9ICsgZHBpKSxcbiAgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246ICN7JGRlbnNpdHl9ICsgZHBweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBcbi8vLyBJbnRlcm5ldCBFeHBsb3JlclxuLy8vIFxuLy8vIEkgYW0gaGFwcHkgdG8gZXhjbHVkZSBJbnRlcm5ldCBFeHBsb3JlciAxMSBiZWNhdXNlIGl0IGlzIGRlY2VudGx5IGdvb2QuIE15XG4vLy8gSUUgcHJvYmxlbXMgaW5jcmVhc2UgZXhwb25lbnRpYWxseSBhcyBJIHdvcmsgYmFja3dhcmRzIGluIHRpbWUuXG4vLy8gXG4vLy8gQGxpbmsgaHR0cDovL2tlaXRoY2xhcmsuY28udWsvYXJ0aWNsZXMvbW92aW5nLWllLXNwZWNpZmljLWNzcy1pbnRvLW1lZGlhLWJsb2Nrcy9cbi8vLyBAbGluayBodHRwOi8va2VpdGhjbGFyay5jby51ay9hcnRpY2xlcy9tb3ZpbmctaWUtc3BlY2lmaWMtY3NzLWludG8tbWVkaWEtYmxvY2tzL21lZGlhLXRlc3RzL1xuLy8vIEBsaW5rIGh0dHA6Ly93d3cubGltZWNhbnZhcy5jb20vY3NzLWhhY2tzLXRhcmdldGluZy1pZS0xMC9cbi8vLyBAbGluayBodHRwOi8vd3d3LnBhdWxpcmlzaC5jb20vMjAwOS9icm93c2VyLXNwZWNpZmljLWNzcy1oYWNrcy9cbi8vLyBcbi8vLyBETyBOT1QgVVNFIFRISVMuXG4vLy8gXG4vLy8gV2FpdC4uLndoYXQ/IEl0J3MgYSBiYWQgaWRlYSB0byBtaXggY29uZGl0aW9uYWwgSUUgQ1NTIGFuZCByZWd1bGFyIENTUy4gSXQnc1xuLy8vIGhlcmUgaWYgeW91IG5lZWQgaXQsIGJ1dCBhc2sgeW91cnNlbGYgZmlyc3Q6IHNob3VsZCBJIHJlYWxseSBkbyB0aGlzP1xuLy8vXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge251bWJlcn0gJHZlcnNpb24gLSBJbnRlcm5ldCBFeHBsb3JlciB2ZXJzaW9uIHRvIHRhcmdldCAoaW4gcmFuZ2UgNi0xMCkuXG4vLy9cblxuQG1peGluIGllKCR2ZXJzaW9uOiAxMCkge1xuICAkdmVyc2lvbjogYWJzKCR2ZXJzaW9uKTtcblxuICBAaWYgJHZlcnNpb24gPT0gNiB7XG4gICAgJHZlcnNpb246ICdzY3JlZW5cXDknO1xuICB9IEBlbHNlIGlmICR2ZXJzaW9uID09IDcge1xuICAgICR2ZXJzaW9uOiAnXFwwc2NyZWVuXFwsc2NyZWVuXFw5JztcbiAgfSBAZWxzZSBpZiAkdmVyc2lvbiA9PSA4IHtcbiAgICAkdmVyc2lvbjogJ1xcMHNjcmVlbic7XG4gIH0gQGVsc2UgaWYgJHZlcnNpb24gPT0gOSB7XG4gICAgLy8gVGFyZ2V0cyBJRSA4LCA5LCAxMC5cbiAgICAkdmVyc2lvbjogJ3NjcmVlblxcMCc7XG4gIH0gQGVsc2UgaWYgJHZlcnNpb24gPT0gMTAge1xuICAgICR2ZXJzaW9uOiAnc2NyZWVuIGFuZCAobWluLXdpZHRoOjBcXDApJztcbiAgfVxuXG4gIEBtZWRpYSAjeyR2ZXJzaW9ufSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8qKlxuICogVHlwb2dyYXBoeVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEBjYXRlZ29yeSAgIFN0eWxlc2hlZXRcbiAqIEBwYWNrYWdlICAgIFNoZWVwaWVcbiAqIEBhdXRob3IgICAgIE1hcmsgR3JlYWxpc2ggPG1hcmtAYmhhbGFzaC5jb20+XG4gKiBAY29weXJpZ2h0ICBDb3B5cmlnaHQgKGMpIDIwMTUgTWFyayBHcmVhbGlzaFxuICogQGxpY2Vuc2UgICAgaHR0cHM6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCBUaGUgR05VIEdQTCB2My4wXG4gKiBAdmVyc2lvbiAgICAzLjBcbiAqIEBsaW5rICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9iaGFsYXNoL3NoZWVwaWVcbiAqL1xuXG4vKipcbiAqIERlZmF1bHQgVGV4dCBTaXplIGFuZCBXZWlnaHRcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuYmxvY2txdW90ZSwgY2l0ZSwgbGksIGlucywgcCwgcVxuICBmb250LXNpemU6ICRmb250LXNpemUtLXBhcmFncmFwaFxuICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS1wYXJhZ3JhcGhcblxuYSwgY2l0ZVxuICBmb250LXNpemU6IGluaGVyaXRcblxuYVxuICBjb2xvcjogY29sb3IoYmx1ZXMpXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG4gICY6aG92ZXJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZVxuXG4vKipcbiAqIEhlYWRsaW5lIEl0ZW1zXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogU3RhcnRpbmcgYXQgNSAtICRpIG1ha2VzIGg1IHRoZSBzYW1lIHNpemUgYXMgcmVndWxhciBwYXJhZ3JhcGggdGV4dCwgYW5kIGg2XG4gKiBvbmUgc3RlcCBzbWFsbGVyLlxuICovXG5cbkBmb3IgJGkgZnJvbSAxIHRocm91Z2ggNlxuICAkZm9udC1zaXplLS1oZWFkbGluZTogZ29sZGVuLXNjYWxlKDUgLSAkaSwgJGJhc2UtZm9udC1zaXplKVxuICAkbGluZS1oZWlnaHQtLWhlYWRsaW5lOiBnb2xkZW4tc2NhbGUoMSwgJGZvbnQtc2l6ZS0taGVhZGxpbmUpXG5cbiAgaCN7JGl9XG4gICAgZm9udDogXG4gICAgICB3ZWlnaHQ6IGJvbGRcbiAgICAgIHNpemU6ICRmb250LXNpemUtLWhlYWRsaW5lXG4gICAgLy8gbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC0taGVhZGxpbmVcblxuLyoqXG4gKiBBcnRpY2xlIFRpdGxlc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4udGl0bGVcbiAgY29sb3I6IGNvbG9yKGJsYWNrcywgbWlkLWRhcmspXG4gIGZvbnQ6XG4gICAgZmFtaWx5OiAkZm9udC0tbGF0b1xuICAgIHdlaWdodDogYm9sZFxuXG4gIGFcbiAgICBjb2xvcjogaW5oZXJpdFxuICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0XG5cbiAgICAmOmhvdmVyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuLyoqXG4gKiBBcnRpY2xlIE1ldGFcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuLmNvbW1lbnQtbm90ZXMsIC5sb2dnZWQtaW4tYXMsIC5tZXRhXG4gIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS0tcGFyYWdyYXBoICogMC44XG4gIGZvbnQtd2VpZ2h0OiAxMDBcbiAgbGluZS1oZWlnaHQ6IDFyZW1cbiIsIi8qKlxuICogUmV1c2FibGUgQ1NTIENsYXNzZXNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBAY2F0ZWdvcnkgICBTdHlsZXNoZWV0XG4gKiBAcGFja2FnZSAgICBTaGVlcGllXG4gKiBAYXV0aG9yICAgICBNYXJrIEdyZWFsaXNoIDxtYXJrQGJoYWxhc2guY29tPlxuICogQGNvcHlyaWdodCAgQ29weXJpZ2h0IChjKSAyMDE1IE1hcmsgR3JlYWxpc2hcbiAqIEBsaWNlbnNlICAgIGh0dHBzOi8vd3d3LmdudS5vcmcvY29weWxlZnQvZ3BsLmh0bWwgVGhlIEdOVSBHUEwgdjMuMFxuICogQHZlcnNpb24gICAgMy4wXG4gKiBAbGluayAgICAgICBodHRwczovL2dpdGh1Yi5jb20vYmhhbGFzaC9zaGVlcGllXG4gKlxuICovXG5cbi8qKlxuICogUm91bmRlZCBDb3JuZXJzXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbi5yb3VuZFxuICBib3JkZXItcmFkaXVzOiA1MCVcblxuLypcbiAqIFNvY2lhbCBTaGFyaW5nIFZlY3RvciBJY29uc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4uc29jaWFsXG4gICtzb2NpYWwobnVsbCwgJy5zb2NpYWxfX2ljb24nKVxuXG4gIGEsICZfX2ljb25cbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94XG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IGluaGVyaXRcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdFxuICAgIHBhZGRpbmc6IDBcbiAgICArZmx1aWQtc3F1YXJlKDEwMCUgMSlcblxuICBhXG4gICAgZm9udC1zaXplOiAwICFpbXBvcnRhbnRcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsXG5cbi8qXG4gKiBIaWRlIER1cmluZyBQcmludGluZ1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4ubm9wcmludFxuICArbWVkaWEocHJpbnQpXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50XG5cbi8qXG4gKiBDbGVhcmZpeFxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4uY2xlYXJmaXhcbiAgK2NsZWFyZml4XG5cbi8qXG4gKiBVc2VyIEF2YXRhclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4uYXZhdGFyXG4gICtjb2x1bW5zKGZsZXgsIGRpdiwgMTcuNSUgYXV0bywgNSUpXG5cbiAgK21lZGlhKDU0MClcbiAgICArY29sdW1ucyhmbGV4LCBkaXYsIDEwJSBhdXRvLCAyJSlcblxuICAmX19waG90b1xuICAgIGJhY2tncm91bmQ6IGNlbnRlci9jb3ZlciBuby1yZXBlYXRcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgICtmbHVpZC1zcXVhcmUoMTAwJSAxKVxuXG4vKipcbiAqIEZvbnQgU2l6ZXNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuLnRleHRcbiAgJi0tc21hbGxcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtLXBhcmFncmFwaCAqIDAuOFxuICAgIGxpbmUtaGVpZ2h0OiAkdnNwYWNlXG5cbiAgJi0tYmlnXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLS1wYXJhZ3JhcGggKiAxLjJcblxuICAmLS1ib2xkXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRcblxuICAmLS1pdGFsaWNcbiAgICBmb250LXN0eWxlOiBpdGFsaWNcblxuICAmLS1sZWZ0XG4gICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICYtLWNlbnRlclxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICYtLXJpZ2h0XG4gICAgdGV4dC1hbGlnbjogcmlnaHRcblxuLyoqXG4gKiBEaXNwbGF5IFN0YXRlIHdpdGggT3BhY2l0eSBUcmFuc2l0aW9uXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbi5oaWRkZW5cbiAgZGlzcGxheTogbm9uZVxuXG4vKipcbiAqIEZsb2F0c1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4uZmxvYXRcbiAgJi0tbGVmdFxuICAgIGZsb2F0OiBsZWZ0XG5cbiAgJi0tcmlnaHRcbiAgICBmbG9hdDogcmlnaHRcblxuICAmLS1ub25lXG4gICAgK25vZmxvYXRcblxuLyoqXG4gKiBWZXJ0aWNhbCBTcGFjaW5nXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbi52c3BhY2VcbiAgJi0tdHJpcGxlXG4gICAgbWFyZ2luLWJvdHRvbTogJHZzcGFjZSAqIDNcblxuICAmLS1kb3VibGVcbiAgICBtYXJnaW4tYm90dG9tOiAkdnNwYWNlICogMlxuXG4gICYtLWZ1bGxcbiAgICBtYXJnaW4tYm90dG9tOiAkdnNwYWNlICogMVxuXG4gICYtLXRocmVlcXVhcnRlclxuICAgIG1hcmdpbi1ib3R0b206ICR2c3BhY2UgKiAwLjc1XG5cbiAgJi0tdHdvdGhpcmRcbiAgICBtYXJnaW4tYm90dG9tOiAkdnNwYWNlICogMC42NlxuXG4gICYtLWhhbGZcbiAgICBtYXJnaW4tYm90dG9tOiAkdnNwYWNlICogMC41MFxuXG4gICYtLW9uZXRoaXJkXG4gICAgbWFyZ2luLWJvdHRvbTogJHZzcGFjZSAqIDAuMzNcblxuICAmLS1xdWFydGVyXG4gICAgbWFyZ2luLWJvdHRvbTogJHZzcGFjZSAqIDAuMjVcblxuXG4udmNlbnRlclxuICAmLS10cmlwbGVcbiAgICArdmVydGljYWwtY2VudGVyKCR2c3BhY2UgKiAzKVxuXG4gICYtLWRvdWJsZVxuICAgICt2ZXJ0aWNhbC1jZW50ZXIoJHZzcGFjZSAqIDIpXG5cbiAgJi0tZnVsbFxuICAgICt2ZXJ0aWNhbC1jZW50ZXIoJHZzcGFjZSAqIDEpXG5cbiAgJi0tdGhyZWVxdWFydGVyXG4gICAgK3ZlcnRpY2FsLWNlbnRlcigkdnNwYWNlICogMC4zMylcblxuICAmLS10d290aGlyZFxuICAgICt2ZXJ0aWNhbC1jZW50ZXIoJHZzcGFjZSAqIDAuMzMpXG5cbiAgJi0taGFsZlxuICAgICt2ZXJ0aWNhbC1jZW50ZXIoJHZzcGFjZSAqIDAuMzMpXG5cbiAgJi0tb25ldGhpcmRcbiAgICArdmVydGljYWwtY2VudGVyKCR2c3BhY2UgKiAwLjMzKVxuXG4gICYtLXF1YXJ0ZXJcbiAgICArdmVydGljYWwtY2VudGVyKCR2c3BhY2UgKiAwLjI1KVxuXG4vKipcbiAqIFRoZW1lIENvbG91cnNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBGSVhNRTogVGhpcyBzZWN0aW9uIGNhbiBiZSByZXBsYWNlZCBieSBpdGVyYXRpb24hIVxuICovXG5cbi5jb2xvclxuICAmLS1ibHVlc1xuICAgICYtLWJnLCAmLS1iZy1ob3Zlcjpob3ZlclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IoYmx1ZXMpXG5cbiAgICAmLS10ZXh0LCAmLS10ZXh0LWhvdmVyOmhvdmVyXG4gICAgICBjb2xvcjogY29sb3IoYmx1ZXMpXG5cbiAgJi0tcm13YlxuICAgICYtLWJnLCAmLS1iZy1ob3Zlcjpob3ZlclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3Iocm13YilcblxuICAgICYtLXRleHQsICYtLXRleHQtaG92ZXI6aG92ZXJcbiAgICAgIGNvbG9yOiBjb2xvcihybXdiKVxuXG4gICYtLXdoaXRlXG4gICAgJi0tYmcsICYtLWJnLWhvdmVyOmhvdmVyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih3aGl0ZXMsIHgtbGlnaHQpXG5cbiAgICAmLS10ZXh0LCAmLS10ZXh0LWhvdmVyOmhvdmVyXG4gICAgICBjb2xvcjogY29sb3Iod2hpdGVzLCB4LWxpZ2h0KVxuIiwiLy8vIFxuLy8vIERlZmF1bHQgVmVjdG9yIFN0eWxlc2hlZXRcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBHYXBzIHNlcGFyYXRlIHJvd3MuIEN1cnJlbnRseSA2IGNvbHVtbnMgYnkgNCByb3dzIGluIHNpemUuXG4vLy9cblxuJHNvY2lhbC1zcHJpdGVzOiBhZGQtc3ByaXRlc2hlZXQoc29jaWFsLCAoXG4gIHBhdGg6ICd2ZWN0b3JzL2J1dHRvbi1zcHJpdGVzLnN2ZycsXG4gIGRpbWVuc2lvbnM6ICg2LCA0KSxcbiAgc3ByaXRlczogKFxuICAgIGJlYXJkOiAoMCwgMCwgIzM0MzUzNyksXG4gICAgZGlzY3VzczogKDEsIDAsICNiOWRmYmMpLFxuICAgIGVtYWlsOiAoMiwgMCwgI2Y1NzU2YyksXG4gICAgZmFjZWJvb2s6ICgzLCAwLCAjM0I1OTk4KSxcbiAgICBmbGlja3I6ICg0LCAwLCAjZmYwMDg0KSxcbiAgICBnaXRodWI6ICg1LCAwLCAjNjY2NjY2KSxcbiAgICBnb29nbGU6ICgwLCAxLCAjZGQ0YjM5KSxcbiAgICBpbnN0YWdyYW06ICgxLCAxLCAjM2Y3MjliKSxcbiAgICBsaW5rZWRpbjogKDIsIDEsICMwOTc2YjQpLFxuICAgIHBpbnRlcmVzdDogKDMsIDEsICNjYzIxMjcpLFxuICAgIHByaW50OiAoNCwgMSwgIzAwN2FhZiksXG4gICAgcmVkZGl0OiAoNSwgMSwgI2ZmNTcwMCksXG4gICAgcnNzOiAoMCwgMiwgI2ZmNjYwMCksXG4gICAgc2VhcmNoOiAoMSwgMiwgIzM0MzUzNyksXG4gICAgc2hhcmU6ICgyLCAyLCAjMzQzNTM3KSxcbiAgICB0dW1ibHI6ICgzLCAyLCAjMzU0NjVjKSxcbiAgICB0d2l0dGVyOiAoNCwgMiwgIzU1YWNlZSksXG4gICAgeW91dHViZTogKDUsIDIsICNiMzEyMTcpLFxuICAgIG1lbnU6ICgwLCAzLCAjMzQzNTM3KSxcbiAgICBjbG9zZTogKDEsIDMsICMzNDM1MzcpXG4gIClcbikpICFkZWZhdWx0O1xuXG4vLy8gXG4vLy8gR2V0IFNvY2lhbCBOZXR3b3JrIENvbG91clxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRuZXR3b3JrIC0gU29jaWFsIG5ldHdvcmsuXG4vLy8gQHJldHVybiB7c3RyaW5nfSAtIE5ldHdvcmsgY29sb3VyLlxuLy8vXG5cbkBmdW5jdGlvbiBzb2NpYWwtY29sb3IoJG5ldHdvcmspIHtcbiAgQHJldHVybiBudGgoZ2V0LXNwcml0ZShzb2NpYWwsICRuZXR3b3JrKSwgMyk7XG59XG5cbi8vLyBcbi8vLyBTb2NpYWwgSW1hZ2VzIGFuZCBDb2xvdXJzXG4vLy8gXG4vLy8gSSB3YW50ZWQgdG8gcmVkdWNlIHRoZSB3b3JrIChhbmQgbG9hZCB0aW1lKSBvZiB1YmlxdWktY2FuY2Vyb3VzIHNvY2lhbFxuLy8vIGljb25zLiBUaGlzIG1peGluIGdlbmVyYXRlcyB1c2VzIGFuIFNWRyBzcHJpdGVtYXAgd2l0aCBQTkcgZmFsbGJhY2sgdG9cbi8vLyBnZW5lcmF0ZSBzb2NpYWwgaWNvbnMgZm9yIHBvcHVsYXIgbmV0d29ya3MuIEhhdmUgYSBsb29rIGF0IF9kZWZhdWx0cy5zY3NzIHRvXG4vLy8gc2VlIHRoZSB7bGlzdH0gb2YgY3VycmVudGx5IHN1cHBvcnRlZCBzZXJ2aWNlcywgYXMgd2VsbCBhcyB0aGUgZm9ybWF0IHVzZWQuXG4vLy8gXG4vLy8gSSBoYXZlIGluY2x1ZGVkIGJsYWNrIGFuZCB3aGl0ZSBtaW5pbWFsIGljb25zOyB0aGUgYmFja2dyb3VuZCBjb2xvdXJzIG9mIHRoZVxuLy8vIGVsZW1lbnQgd2lsbCBiZSB0aGF0IGZvciB0aGUgcmVsZXZhbnQgbmV0d29yay5cbi8vLyBcbi8vLyBPbiAkc2VsZWN0b3I6IFRoZXJlIHdlcmUgc29tZSBjYXNlcyB3aGVyZSBJIHdhbnQgdGhlIHNvY2lhbCBzdHlsZVxuLy8vIHRvIGJlIGF0dGFjaGVkIHRvIHRoZSBwYXJlbnQsIGFuZCBvbiBvdGhlciBvY2Nhc2lvbnMgdG8gYW4gYXJiaXRyYXJ5IGNoaWxkXG4vLy8gaW5zdGVhZC5cbi8vLyBcbi8vLyBJZiAkc2VsZWN0b3IgZm9yIHRoZSBiYWNrZ3JvdW5kIGltYWdlIGV4aXN0cywgaXQgaXMgYXR0YWNoZWQgdG8gc2VsZWN0b3IsXG4vLy8gZWxzZXdpc2UgdG8gdGhlIHBhcmVudC5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7bWFwfSAkc2l6ZSAtIFNpemVzIGZvciBzcXVhcmUtZmxleCgpLlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkc2VsZWN0b3IgLSBPcHRpb25hbCBzZWxlY3Rvci5cbi8vLyBAcGFyYW0ge2Jvb2x9ICRzcGxpdCAtIFNlcGVyYXRlIGljb24gY29sb3VyIGZyb20gaWNvbi5cbi8vLyBAcGFyYW0ge21hcH0gJG5ldHdvcmtzIC0gU29jaWFsIG5ldHdvcmtzIHRvIG91dHB1dC5cbi8vL1xuXG5AbWl4aW4gc29jaWFsKCRzaXplOiBudWxsLCAkc2VsZWN0b3I6IG51bGwsICRzcGxpdDogZmFsc2UsICRuZXR3b3JrczogbnVsbCkge1xuICBAaWYgbm90ICRuZXR3b3JrcyB7XG4gICAgLy8gSWYgbm8gbmV0d29yayB3YXMgcGFzc2VkLCBkZWZhdWx0IHRvIGFsbCBzcHJpdGUgaWNvbnMuXG4gICAgJG5ldHdvcmtzOiAoKTtcblxuICAgIEBlYWNoICRrZXksICR2YWx1ZSBpbiBzcHJpdGVzaGVldChzcHJpdGUsIHNvY2lhbCkge1xuICAgICAgJG5ldHdvcmtzOiBhcHBlbmQoJG5ldHdvcmtzLCAka2V5KTtcbiAgICB9XG4gIH1cblxuICAvLyBQYXJzZSBzZWxlY3RvciwgaWYgYW55LlxuICAkc2VsZWN0b3I6IGlmKCRzZWxlY3RvciwgJyAnICsgJHNlbGVjdG9yLCAkc2VsZWN0b3IpO1xuXG4gICYjeyRzZWxlY3Rvcn0ge1xuICAgIEBpZiAkc2l6ZSB7XG4gICAgICBAaW5jbHVkZSBzcXVhcmUtZmxleCgkc2l6ZSk7XG4gICAgfVxuICB9XG5cbiAgQGVhY2ggJG5ldHdvcmsgaW4gJG5ldHdvcmtzIHtcbiAgICAvLyBJdGVyYXRlLCBvbmUgY2xhc3MgcGVyIG5ld29yay5cbiAgICAkY29sb3VyOiBzb2NpYWwtY29sb3IoJG5ldHdvcmspO1xuXG4gICAgQGlmICRzcGxpdCB7XG4gICAgICAmLiN7JG5ldHdvcmt9IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG91cjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLiN7JG5ldHdvcmt9I3skc2VsZWN0b3J9IHtcbiAgICAgIGJhY2tncm91bmQ6IHNwcml0ZShzb2NpYWwsICRuZXR3b3JrKTtcblxuICAgICAgQGlmIG5vdCAkc3BsaXQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3VyO1xuICAgICAgfVxuXG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiIsIi8vLyBcbi8vLyBTcHJpdGVzaGVldFxuLy8vIFxuLy8vIEFkZCB5b3VyIG93biB7bWFwfSB0byB0aGlzIHdpdGggYWRkLXNwcml0ZXNoZWV0KCkuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vL1xuXG4kY2hhcm9uLXNwcml0ZXNoZWV0OiAoKSAhZGVmYXVsdDtcblxuLy8vIFxuLy8vIFJlY3Vyc2l2ZSBNYXAgR2V0XG4vLy8gXG4vLy8gVGhlcmUncyBhIHNpdHVhdGlvbiB3aGVyZSAnbnVsbCcgY2FuIGJlIHBhc3NlZCB0byBhIGxpc3QsIGFuZCBpbnRlcnByZXRlZFxuLy8vIGxpdGVyYWxseSwgZS5nLCBpdCBpc24ndCBhIG51bGwgdmFsdWUsIGJ1dCBsaXRlcmFsbHkgYSB7c3RyaW5nfSAnbnVsbCcuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge2xpc3R9ICRrZXlzIC0gTGlzdCBvZiBrZXlzLlxuLy8vIEByZXR1cm4ge2xpc3R9ICRrZXlzIC0gQ2xlYW5lZCB7bGlzdH0gb2Yga2V5cy5cbi8vL1xuXG5AZnVuY3Rpb24gY2xlYW4ta2V5cygka2V5cykge1xuICAkY2xlYW4ta2V5czogKCk7XG5cbiAgQGVhY2ggJGtleSBpbiAka2V5cyB7XG4gICAgQGlmICRrZXkge1xuICAgICAgJGNsZWFuLWtleXM6IGFwcGVuZCgkY2xlYW4ta2V5cywgJGtleSk7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkY2xlYW4ta2V5cztcbn1cblxuLy8vIFxuLy8vIFJlY3Vyc2l2ZSBNYXAgR2V0XG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge21hcH0gJG1hcCAtIE1hcCB0byBzZWFyY2guXG4vLy8gQHBhcmFtIHtsaXN0fSAka2V5cyAtIFRlcm1zIHRvIHNlYXJjaCBmb3Igd3RpaGluIHRoZSBtYXAuXG4vLy8gQHBhcmFtIHttYXB9ICRtYXAgLSBSZWN1cnNpdmVseS1mZXRjaGVkIHJlc3VsdHMuXG4vLy9cblxuQGZ1bmN0aW9uIG1hcC1zZWVrKCRtYXAsICRrZXlzOiBkZWZhdWx0KSB7XG4gICRrZXlzOiBjbGVhbi1rZXlzKCRrZXlzKTtcblxuICBAZWFjaCAka2V5IGluICRrZXlzIHtcbiAgICBAaWYgbWFwLWhhcy1rZXkoJG1hcCwgJGtleSkge1xuICAgICAgJG1hcDogbWFwLWdldCgkbWFwLCAka2V5KTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIEB3YXJuIFwiVmFsdWUgI3ska2V5fSB3YXMgbm90IGZvdW5kIGluIG1hcFwiO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJG1hcDtcbn1cblxuLy8vIFxuLy8vIEFkZCBTcHJpdGVzaGVldCB0byBTcHJpdGVzaGVldCBNYXBcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAka2V5IC0gQXNzb2NpYXRpdmUga2V5IGZvciBhZGRlZCBtYXAuXG4vLy8gQHBhcmFtIHttYXB9ICRtYXAgLSBTcHJpdGVzaGVldCBtYXAuXG4vLy8gQHJldHVybiB7bWFwfSAkY2hhcm9uLXNwcml0ZXNoZWV0IC0gQ29tcGxldGUge21hcH0gb2Ygc3ByaXRlcy5cbi8vL1xuXG5AZnVuY3Rpb24gYWRkLXNwcml0ZXNoZWV0KCRrZXksICRtYXApIHtcbiAgJGNoYXJvbi1zcHJpdGVzaGVldDogbWFwLW1lcmdlKCRjaGFyb24tc3ByaXRlc2hlZXQsICgka2V5OiAkbWFwKSkgIWdsb2JhbDtcbiAgQHJldHVybiAkY2hhcm9uLXNwcml0ZXNoZWV0O1xufVxuXG4vLy8gXG4vLy8gQWNjZXNzIFNwcml0ZXNoZWV0XG4vLy8gXG4vLy8gUmV0dXJuIHJlcXVlc3RlZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3ByaXRlc2hlZXQuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge3N0cmluZ30gJGNvbW1hbmQgLSBBY3Rpb24gdG8gcGVyZm9ybSBvbiBzcHJpdGVzaGVldC5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJHNoZWV0IC0gU2hlZXQgb24gd2hpY2ggdG8gcGVyZm9ybSBhY3Rpb24uXG4vLy8gQHBhcmFtIHttYXB9ICRhcmdzIC0gQW55IG90aGVyIGFyZ3MgKHNpemUgYXhpcyBvciBzcHJpdGUpLlxuLy8vIEBwYXJhbSB7bWFwfSAkcmVzdWx0cyAtIFJlcXVlc3RlZCBpbmZvcm1hdGlvbi5cbi8vL1xuXG5AZnVuY3Rpb24gc3ByaXRlc2hlZXQoJGNvbW1hbmQsICRzaGVldDogbnVsbCwgJGFyZzogbnVsbCkge1xuICAkcmVzdWx0czogKCk7XG5cbiAgQGlmICRjb21tYW5kID09IHNwcml0ZSB7XG4gICAgJHJlc3VsdHM6IG1hcC1zZWVrKCRjaGFyb24tc3ByaXRlc2hlZXQsICRzaGVldCBzcHJpdGVzICRhcmcpO1xuICB9XG5cbiAgQGlmICRjb21tYW5kID09IHBhdGgge1xuICAgICRyZXN1bHRzOiBtYXAtc2VlaygkY2hhcm9uLXNwcml0ZXNoZWV0LCAkc2hlZXQgcGF0aCk7XG4gIH1cblxuICBAaWYgJGNvbW1hbmQgPT0gY291bnQge1xuICAgICRyZXN1bHRzOiBsZW5ndGgobWFwLXNlZWsoJGNoYXJvbi1zcHJpdGVzaGVldCwgJHNoZWV0KSk7XG4gIH1cblxuICBAaWYgJGNvbW1hbmQgPT0gZGltZW5zaW9ucyB7XG4gICAgJHJlc3VsdHM6IG1hcC1zZWVrKCRjaGFyb24tc3ByaXRlc2hlZXQsICRzaGVldCBkaW1lbnNpb25zKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlc3VsdHM7XG59XG5cbi8vLyBcbi8vLyBSZXR1cm4gQ291bnQgb2YgU3ByaXRlc1xuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaGVldCAtIFRhcmdldCBzcHJpdGVzaGVldC5cbi8vLyBAcmV0dXJuIHtudW1iZXJ9IC0gQ291bnQgb2Ygc3ByaXRlcyBpbiBzaGVldC5cbi8vL1xuXG5AZnVuY3Rpb24gY291bnQoJHNoZWV0KSB7XG4gIEByZXR1cm4gc3ByaXRlc2hlZXQoY291bnQsICRzaGVldCk7XG59XG5cbi8vLyBcbi8vLyBSZXR1cm4gU3ByaXRlc2hlZXQgUGF0aFxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaGVldCAtIFRhcmdldCBzcHJpdGVzaGVldC5cbi8vLyBAcmV0dXJuIHtzdHJpbmd9IC0gUGF0aCB0byBzcHJpdGVzaGVldC5cbi8vL1xuXG5AZnVuY3Rpb24gcGF0aCgkc2hlZXQpIHtcbiAgQHJldHVybiBzcHJpdGVzaGVldChwYXRoLCAkc2hlZXQpO1xufVxuXG4vLy8gXG4vLy8gUmV0dXJuIFNwcml0ZXNoZWV0IERpbWVuc2lvbnNcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAkc2hlZXQgLSBUYXJnZXQgc3ByaXRlc2hlZXQuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRheGlzIC0gT3B0aW9uYWwgYXhpcyB0byByZXR1cm4uXG4vLy8gQHJldHVybiB7bnVtYmVyfSAkZGltZW5zaW9uIC0gU3ByaXRlc2hlZXQgZGltZW5zaW9uKHMpLlxuLy8vXG5cbkBmdW5jdGlvbiBkaW1lbnNpb24oJHNoZWV0LCAkYXhpczogbnVsbCkge1xuICAkZGltZW5zaW9uOiBzcHJpdGVzaGVldChkaW1lbnNpb25zLCAkc2hlZXQpO1xuXG4gIEBpZiAkYXhpcyB7XG4gICAgQGlmICRheGlzID09IHggb3IgJGF4aXMgPT0geSB7XG4gICAgICAkbjogaWYoJGF4aXMgPT0geCwgMSwgMik7XG4gICAgICAkZGltZW5zaW9uOiBudGgoJGRpbWVuc2lvbiwgJG4pO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yIFwiSW1hZ2luYXJ5IGF4aXMgJyN7JGF4aXN9JyByZXF1ZXN0ZWQhXCJcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRkaW1lbnNpb247XG59XG5cbi8vLyBcbi8vLyBHZXQgU3ByaXRlIGZyb20gU3ByaXRlc2hlZXRcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAkc2hlZXQgLSBUYXJnZXQgc3ByaXRlc2hlZXQuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzcHJpdGUgLSBTcHJpdGUgdG8gZmV0Y2guXG4vLy8gQHJldHVybiB7bWFwfSBTcHJpdGUgaW5mb3JtYXRpb24uXG4vLy9cblxuQGZ1bmN0aW9uIGdldC1zcHJpdGUoJHNoZWV0LCAkc3ByaXRlKSB7XG4gIEBpZiBsZW5ndGgoJHNwcml0ZSkgPiAxIHtcbiAgICAkc3ByaXRlOiBudGgoJHNwcml0ZSwgMSk7XG4gIH1cblxuICBAcmV0dXJuIHNwcml0ZXNoZWV0KHNwcml0ZSwgJHNoZWV0LCAkc3ByaXRlKTtcbn1cblxuLy8vIFxuLy8vIEdldCBTcHJpdGUgUG9zaXRpb25cbi8vLyBcbi8vLyBSZXR1cm4gWC9ZIENTUyBwb3NpdGlvbiBvZiBzcHJpdGUgYXMgYSBwZXJjZW50YWdlLlxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaGVldCAtIFRhcmdldCBzcHJpdGVzaGVldC5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJHNwcml0ZSAtIFNwcml0ZSB0byBmZXRjaC5cbi8vLyBAcmV0dXJuIHttYXB9ICR4ICR5IC0gUGVyY2VudGFnZSBwb3NpdGlvbiBvZiBzcHJpdGUuXG4vLy9cblxuQGZ1bmN0aW9uIHNwcml0ZS1wb3NpdGlvbigkc2hlZXQsICRzcHJpdGUpIHtcblxuICAkc3ByaXRlOiBnZXQtc3ByaXRlKCRzaGVldCwgJHNwcml0ZSk7XG4gICRzaGVldDogZGltZW5zaW9uKCRzaGVldCk7XG5cbiAgJHNwcml0ZS14OiBudGgoJHNwcml0ZSwgMSk7XG4gICRzcHJpdGUteTogbnRoKCRzcHJpdGUsIDIpO1xuICAkc2hlZXQteDogbnRoKCRzaGVldCwgMSk7XG4gICRzaGVldC15OiBudGgoJHNoZWV0LCAyKTtcblxuICAkeDogcGVyY2VudGFnZSgkc3ByaXRlLXggLyAoJHNoZWV0LXggLSAxKSk7XG4gICR5OiBwZXJjZW50YWdlKCRzcHJpdGUteSAvICgkc2hlZXQteSAtIDEpKTtcblxuICBAcmV0dXJuICR4ICR5O1xufVxuXG4vLy8gXG4vLy8gUmV0dXJuIFcvSCBDU1Mgc2l6ZSBvZiBzcHJpdGUgYXMgYSBwZXJjZW50YWdlLlxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaGVldCAtIFRhcmdldCBzcHJpdGVzaGVldC5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJHNwcml0ZSAtIFNwcml0ZSB0byBmZXRjaC5cbi8vLyBAcmV0dXJuIHttYXB9ICR4ICR5IC0gUGVyY2VudGFnZSBzaXplIG9mIHNwcml0ZS5cbi8vL1xuXG5AZnVuY3Rpb24gc3ByaXRlLXNpemUoJHNoZWV0LCAkc3ByaXRlKSB7XG4gICRzaGVldDogZGltZW5zaW9uKCRzaGVldCk7XG5cbiAgJHg6IHBlcmNlbnRhZ2UobnRoKCRzaGVldCwgMSkpO1xuICAkeTogcGVyY2VudGFnZShudGgoJHNoZWV0LCAyKSk7XG5cbiAgQHJldHVybiAkeCAkeTtcbn1cblxuLy8vIFxuLy8vIFNwcml0ZSBCYWNrZ3JvdW5kIFByb3BlcnR5XG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge3N0cmluZ30gJHNoZWV0IC0gVGFyZ2V0IHNwcml0ZXNoZWV0LlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkc3ByaXRlIC0gU3ByaXRlIHRvIGZldGNoLlxuLy8vIEByZXR1cm4ge21hcH0gLSBDU1MgYmFja2dyb3VuZCB2YWx1ZSBmb3Igc3ByaXRlLlxuLy8vXG5cbkBmdW5jdGlvbiBzcHJpdGUoJHNoZWV0LCAkc3ByaXRlKSB7XG4gICRwb3NpdGlvbjogc3ByaXRlLXBvc2l0aW9uKCRzaGVldCwgJHNwcml0ZSk7XG4gICRzaXplOiBzcHJpdGUtc2l6ZSgkc2hlZXQsICRzcHJpdGUpO1xuICAkcGF0aDogdXJsKHBhdGgoJHNoZWV0KSk7XG5cbiAgQHJldHVybiAkcG9zaXRpb24vJHNpemUgbm8tcmVwZWF0ICRwYXRoO1xufVxuXG4vLy8gXG4vLy8gSW5jbHVkZSBTcHJpdGUgTWFpbiBNaXhpblxuLy8vIFxuLy8vIE1haW4gZW50cnkgcG9pbnQgZm9yIHRoaXMgbGlicmFyeS4gVEw7RFI6IFRoaXMgbWFrZXMgYSBzcXVhcmUoaXNoKSBzcHJpdGUgdGhlXG4vLy8gY2VudGVyZWQgYmFja2dyb3VuZCBpbWFnZSBvZiBhIHNxdWFyZSBjb250YWluZXIuIElmIGVpdGhlciBvciBib3RoIGlzIHNxdWFyZVxuLy8vIHdlaXJkIHRoaW5ncyB3aWxsIG9jY3VyLiBXQVJFIFlFLlxuLy8vIFxuLy8vIFNxdWFyZSBpcyBnb29kLiBBbGwgaGFpbCB0aGUgc3F1cmUuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge3N0cmluZ30gJHNoZWV0IC0gVGFyZ2V0IHNwcml0ZXNoZWV0LlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkc3ByaXRlIC0gU3ByaXRlIHRvIGZldGNoLlxuLy8vXG5cbkBtaXhpbiBzcHJpdGUoJHNoZWV0LCAkc3ByaXRlLCAkc2VsZWN0b3IpIHtcbiAgJiN7JHNlbGVjdG9yfSB7XG4gICAgYmFja2dyb3VuZDogc3ByaXRlKCRzaGVldCwgJHNwcml0ZSk7XG4gIH1cblxuICBAY29udGVudDtcbn1cbiIsIi8vLyBcbi8vLyBGbGV4aWJsZSBTcXVhcmUgQm94ZXNcbi8vLyBcbi8vLyBHZW5lcmF0ZSBhIGJveCB3aG9zZSBoZWlnaHQgaXMgZXF1YWwgdG8gdGhlIGdpdmVuIHJhdGlvIG9mIHRoZSB3aWR0aC5cbi8vLyBXaWR0aCBjYW4gYmUgb2YgYW55IHNpemUuIFJhdGlvIGNhbiBiZSBhbnkgdmFsdWUgYmV0d2VlbiAwIGFuZCAkZm9vLlxuLy8vIFxuLy8vIEFueSB1bml0LCBmaXhlZCBvciBwZXJjZW50YWdlLCBpcyBhY2NlcHRhYmxlLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIGZsdWlkLXNxdWFyZSBmdW5jdGlvbi5cbi8vL1xuLy8vICAgICBAaW5jbHVkZSBmbHVpZC1zcXVhcmUoNTBweCAxKTsgPT5cbi8vLyAgICAgXG4vLy8gICAgIGhlaWdodDogMDtcbi8vLyAgICAgcGFkZGluZy10b3A6IDUwcHg7XG4vLy8gICAgIHdpZHRoOiA1MHB4O1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIGZsdWlkLXNxdWFyZSBmdW5jdGlvbi5cbi8vL1xuLy8vICAgICBAaW5jbHVkZSBmbHVpZC1zcXVhcmUoMTAwJSAwLjc1KTsgPT5cbi8vL1xuLy8vICAgICBoZWlnaHQ6IDA7XG4vLy8gICAgIHBhZGRpbmctYm90dG9tOiA3NSU7XG4vLy8gICAgIHdpZHRoOiAxMDAlO1xuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQGxpbmsgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTM2MjU4NDMvMTQzMzQwMFxuLy8vIEBwYXJhbSB7bWFwfSAkc2l6ZSAtIEhvcml6b250YWwgd2lkdGggYW5kIGhlaWdodCByYXRpby5cbi8vL1xuXG5AbWl4aW4gZmx1aWQtc3F1YXJlKCRzaXplOiAxMDAlIDEpIHtcbiAgJHdpZHRoOiBudGgoJHNpemUsIDEpO1xuICAkcmF0aW86IHN0cmlwLXVuaXQobnRoKCRzaXplLCAyKSkgKiAkd2lkdGg7XG5cbiAgaGVpZ2h0OiAwO1xuICBwYWRkaW5nLWJvdHRvbTogJHJhdGlvO1xuICB3aWR0aDogJHdpZHRoO1xufVxuXG4vLy8gXG4vLy8gQXV0b21hdGljYWxseSB2ZW5kb3IgcHJlZml4ZXMgdG8gQ1NTIHByb3BlcnRpZXMuIFlvdSBzaG91bGQgdXNlIGF1dG9wcmVmaXhlciFcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAkYXR0cmlidXRlIC0gQ1NTIGF0dHJpYnV0ZSB0byBiZSBwcmVmaXhlZC5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJHZhbHVlIC0gQ1NTIHZhbHVlLlxuLy8vIEBwYXJhbSB7bWFwfSAkcHJlZml4ZXMgLSBNYXAgb2YgcHJlZml4ZXMgdG8gYmUgYXBwbGllZC5cbi8vL1xuXG5AbWl4aW4gcHJlZml4KCRhdHRyaWJ1dGUsICR2YWx1ZSwgJHByZWZpeGVzOiB3ZWJraXQpIHtcbiAgQGVhY2ggJHByZWZpeCBpbiAkcHJlZml4ZXMge1xuICAgICN7XCItXCIgKyAkcHJlZml4ICsgXCItXCIgKyAkYXR0cmlidXRlfTogJHZhbHVlO1xuICB9XG5cbiAgI3skYXR0cmlidXRlfTogI3skdmFsdWV9O1xufVxuXG4vLy8gXG4vLy8gQXV0b21hdGljYWxseSB2ZW5kb3IgcHJlZml4ZXMgdG8gQ1NTIHZhbHVlcy4gWW91IHNob3VsZCB1c2UgYXV0b3ByZWZpeGVyIVxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRhdHRyaWJ1dGUgLSBDU1MgYXR0cmlidXRlLlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkdmFsdWUgLSBDU1MgdmFsdWUgdG8gYmUgcHJlZml4ZWQuXG4vLy8gQHBhcmFtIHttYXB9ICRwcmVmaXhlcyAtIE1hcCBvZiBwcmVmaXhlcyB0byBiZSBhcHBsaWVkLlxuLy8vXG5cbkBtaXhpbiBwcmVmaXgtdmFsdWUoJGF0dHJpYnV0ZSwgJHZhbHVlLCAkcHJlZml4ZXM6IHdlYmtpdCkge1xuICBAZWFjaCAkcHJlZml4IGluICRwcmVmaXhlcyB7XG4gICAgI3skYXR0cmlidXRlfTogI3tcIi1cIiArICRwcmVmaXggKyBcIi1cIiArICR2YWx1ZX07XG4gIH1cblxuICAjeyRhdHRyaWJ1dGV9OiAjeyR2YWx1ZX07XG59XG5cbi8vLyBcbi8vLyAgRnJlZXplIDxkaXY+IENvbnRlbnRcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG5cbkBtaXhpbiBmcmVlemUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiAtMTtcbiAgQGluY2x1ZGUgZml4ZWQoMCk7XG59XG5cbi8vLyBcbi8vLyBQbGFjZWhvbGRlciBTdHlsZXNcbi8vLyBcbi8vLyBHZW5lcmF0ZSBzdHlsZXMgZm9yIGlucHV0IHBsYWNlaG9sZGVycyBpbiBJbnRlcm5ldCBFeHBsb3JlciwgRmlyZWZveCBhbmRcbi8vLyBXZWJraXQgYnJvd3NlcnMuXG4vLy8gXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vXG4vLy8gICBpbnB1dC5mb28ge1xuLy8vICAgICBAaW5jbHVkZSBwbGFjZWhvbGRlci1zdHlsZSB7XG4vLy8gICAgICAgY29sb3I6IHJlZDtcbi8vLyAgICAgfVxuLy8vICAgfVxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy9cblxuQG1peGluIHBsYWNlaG9sZGVyLXN0eWxlIHtcbiAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gICY6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgQGNvbnRlbnQ7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gICY6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgIEBjb250ZW50O1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFxuLy8vIEJhY2tncm91bmQgY29sb3JlZCBtYXNrLiBVc2VmdWwgZm9yIHdoZW4geW91IGhhdmUgdG8gbGF5ZXIgdGV4dCBhYm92ZSBhXG4vLy8gYmFja2dyb3VuZCBpbWFnZS5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG5cbiViYWNrZ3JvdW5kLW1hc2sge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgPiAqIHtcbiAgICAvLyBTcGVjaWZpYyB3b3JrYXJvdW5kIGZvciBNb2JpbGUgU2FmYXJpOiB3aXRob3V0IHRoaXMgI2ludGVyaW9yIGNvbnRlbnRcbiAgICAvLyB3aWxsIHNjcm9sbCBiZWhpbmQgdGhlIGhlYWRlci5cbiAgICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAvLyBDaGlsZCBjb250ZW50IG11c3QgYmUgcmFpc2VkIG93aW5nIHRvIHRoZSBiYWNrZ3JvdW5kIGdyYWRpZW50LlxuICAgIHotaW5kZXg6IDI7XG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiAnICc7XG4gICAgQGluY2x1ZGUgYWJzb2x1dGUoMCk7XG4gIH1cbn1cblxuLy8vIFxuLy8vIFNvbGlkIEJhY2tncm91bmQgTWFza1xuLy8vIFxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkcmVkIC0gUmVkIHZhbHVlLlxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3JlZW4gLSBHcmVlbiB2YWx1ZS5cbi8vLyBAcGFyYW0ge251bWJlcn0gJGJsdWUgLSBCbHVlIHZhbHVlLlxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkYWxwaGEgLSBBbHBoYSB2YWx1ZS5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG5cbkBtaXhpbiBzb2xpZC1tYXNrKCRyZWQ6IDI1NSwgJGdyZWVuOiAyNTUsICRibHVlOiAyNTUsICRhbHBoYTogMSkge1xuICBAZXh0ZW5kICViYWNrZ3JvdW5kLW1hc2s7XG5cbiAgJjphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkcmVkLCAkZ3JlZW4sICRibHVlLCAkYWxwaGEpO1xuICB9XG59XG5cbi8vLyBcbi8vLyBDb2x1bW4gQ291bnRcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG5cbkBtaXhpbiBjb2x1bW4tY291bnQoJGNvdW50OiAzLCAkZ2FwOiBudWxsLCAkcnVsZTogbnVsbCkge1xuICBjb2x1bW4tY291bnQ6ICRjb3VudDtcblxuICBAaWYgJGdhcCB7XG4gICAgY29sdW1uLWdhcDogJGdhcDtcbiAgfVxuXG4gIEBpZiAkcnVsZSB7XG4gICAgY29sdW1uLXJ1bGU6ICRydWxlO1xuICB9XG59XG5cbi8vLyBcbi8vLyBNb2RhbCBQb3BvdmVyXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vL1xuXG5AbWl4aW4gcG9wLW1vZGFsIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICBAaW5jbHVkZSBmaXhlZCgwKTtcblxuICAmOnRhcmdldCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3V0bGluZTogMDtcbiAgICB6LWluZGV4OiA0O1xuICB9XG59XG5cbi8vLyBcbi8vLyBHcmFkaWVudCBCYWNrZ3JvdW5kIE1hc2tcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7bWFwfSAkc3RhcnQgLSBHcmFkaWVudCBzdGFydCBjb2xvciBhbmQgb3BhY2l0eS5cbi8vLyBAcGFyYW0ge21hcH0gJGVuZCAtIEdyYWRpZW50IGVuZCBjb2xvciBhbmQgb3BhY2l0eS5cbi8vL1xuXG5AbWl4aW4gZ3JhZGllbnQtbWFzaygkc3RhcnQ6IHJnYmEoMCwgMCwgMCwgMC43NSksICRlbmQ6IHJnYmEoMCwgMCwgMCwgMC4yNSkpIHtcbiAgQGV4dGVuZCAlYmFja2dyb3VuZC1tYXNrO1xuXG4gICY6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRzdGFydCAwJSwgJGVuZCAxMDAlKTtcbiAgfVxufVxuXG4vLy8gXG4vLy8gQ1NTIENvdW50ZXJcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAkY291bnRlciAtIE5hbWUgb2YgdGhlIGNvdW50ZXIuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRlbGVtZW50IC0gVGFyZ2V0IGVsZW1lbnQuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRiZWZvcmUgLSBTdHJpbmcgcHJlY2VkaW5nIGNvdW50ZXI7XG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRhZnRlciAtIFN0cmluZyBhbnRlY2VkaW5nIGNvdW50ZXI7XG4vLy9cblxuQG1peGluIGNvdW50ZXIoJGNvdW50ZXIsICRlbGVtZW50LCAkYmVmb3JlOiBudWxsLCAkYWZ0ZXI6IG51bGwpIHtcbiAgY291bnRlci1yZXNldDogJGNvdW50ZXI7XG5cbiAgJiAjeyRlbGVtZW50fTpiZWZvcmUge1xuICAgIGNvdW50ZXItaW5jcmVtZW50OiAkY291bnRlcjtcbiAgICBjb250ZW50OiBcIiN7JGJlZm9yZX1cIiBjb3VudGVyKCRjb3VudGVyKSBcIiN7JGFmdGVyfVwiO1xuICB9XG59XG5cbi8vLyBcbi8vLyBDbGVhcmZpeFxuLy8vIFxuLy8vIEJ1bGxldHByb29mIGFuZCBSb2NrLVNvbGlkIHNlbGYtY2xlYXJpbmcgZmxvYXQuIFlvdSBjYW4gdGVsbCBpdCBpcyBib3RoXG4vLy8gQnVsbGV0cHJvb2YgYW5kIFJvY2stU29saWQgc2luY2UgSSBjYXBpdGFsaXplZCB0aGUgd29yZHMuIFRoZXJlIGFyZSB2ZXJ5IHJhcmVcbi8vLyBpbnN0YW5jZXMgd2VyZSBJIG1pZ2h0IG5lZWQgdG8gdXNlIGEgY2xlYXJpbmcgZWxlbWVudCAoc3VjaCBhcyBzcGxpdHRpbmdcbi8vLyBmbG9hdGluZyBlbGVtZW50cyB2ZXJ0aWNhbGx5KS5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAkb3ZlcmZsb3cgLSBUeXBlIG9mIG92ZXJmbG93LCBhdXRvL2hpZGRlbi5cbi8vLyBAcGFyYW0ge2Jvb2x9ICRpbXBvcnRhbnQgLSBNYXJrIG92ZXJmbG93IHR5cGUgYXMgaW1wb3J0YW50LlxuLy8vXG5cbkBtaXhpbiBjbGVhcmZpeCgkb3ZlcmZsb3c6IGF1dG8sICRpbXBvcnRhbnQ6IGZhbHNlKSB7XG4gICRvdmVyZmxvdzogaWYoJG92ZXJmbG93ICE9IGF1dG8sIGhpZGRlbiwgJG92ZXJmbG93KTtcblxuICBvdmVyZmxvdzogdW5xdW90ZShcIiN7JG92ZXJmbG93fSN7aWYoJGltcG9ydGFudCwgIWltcG9ydGFudCwgXCJcIil9XCIpO1xuXG4gICY6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICB9XG59XG5cbi8vLyBcbi8vLyBSZW1vdmUgRmxvYXRcbi8vLyBcbi8vLyBBYnNvbHV0ZWx5LCBwb3NpdGl2ZWx5IHJlbW92ZSBhIGZsb2F0IGZyb20gYW4gZWxlbWVudCBhbmQgcmVzZXQgaXRzIHdpZHRoIHRvXG4vLy8gdGhlIGRlZmF1bHQgdmFsdWUuIFRoZXJlIGFyZSBvY2Nhc2lvbnMsIHRpZWQgdG8gc2NvcGUsIHdoZXJlIHlvdSBtYXkgaGF2ZSB0b1xuLy8vIGZvcmNlIHRoaXMgd2l0aCAhaW1wb3J0YW50LlxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtib29sfSAkaW1wb3J0YW50IC0gTWFyayBjbGVhciBhcyBpbXBvcnRhbnQuXG4vLy9cblxuQG1peGluIG5vZmxvYXQoJGltcG9ydGFudDogZmFsc2UpIHtcbiAgZmxvYXQ6IG5vbmUgI3tpZigkaW1wb3J0YW50LCAhaW1wb3J0YW50LCBcIlwiKX07XG4gIHdpZHRoOiBpbml0aWFsICN7aWYoJGltcG9ydGFudCwgIWltcG9ydGFudCwgXCJcIil9O1xufVxuXG4vLy8gXG4vLy8gRmxleGJveCBQYXJlbnRcbi8vLyBcbi8vLyBJZiB5b3UgaGF2ZSBjb21lIHRoaXMgZmFyIHlvdSBzaG91bGQgaGF2ZSBhbiB1bmRlcnN0YW5kaW5nIG9mIGhvdywgd2h5IGFuZFxuLy8vIHdoZXJlIHlvdSB3b3VsZCB1c2UgZmxleGJveC4gVGhlc2UgbWl4aW5zIGdlbmVyYXRlIHVucHJlZml4ZWQgQ1NTIGZsZXhib3hcbi8vLyBydWxlcy5cbi8vLyBcbi8vLyBUd28gc2FmZSBkZWZhdWx0cyBhcmUgYXNzdW1lcyBmb3IgZmxleC1kaXJlY3Rpb24gYW5kIGZsZXgsIGJ1dCBvdGhlcndpc2UgSVxuLy8vIGxlYXZlIGJyb3dzZXIgZGVmYXVsdHMgYmUuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAbGluayBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL2Nzcy9hLWd1aWRlLXRvLWZsZXhib3gvXG4vLy8gQGxpbmsgaHR0cDovL3pvbWlnaS5jb20vYmxvZy9mbGV4Ym94LXN5bnRheC1mb3ItaWUtMTAvXG4vLy8gQGxpbmsgaHR0cDovL2ZsZXhpZWpzLmNvbS9cbi8vLyBAcGFyYW0ge3N0cmluZ30gJGRpcmVjdGlvbiAtIERpcmVjdGlvbiBvZiBmbGV4Ym94OiBDb2x1bW4gb3Igcm93LlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkanVzdGlmeS1jb250ZW50IC0gQWxpZ25tZW50IG9mIGNvbnRlbnQgYWxvbmcgbWFpbiBheGlzLlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkd3JhcCAtIFdoZXRoZXIgb3Igbm90IHRvIHdyYXAgY29udGVudC5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJGFsaWduLWl0ZW1zIC0gQWxpZ25tZW50IG9mIGNvbnRlbnQgYWxvbmcgc2Vjb25kYXJ5IGF4aXMuXG4vLy9cblxuQG1peGluIGZsZXgtcGFyZW50KCRkaXJlY3Rpb246IHJvdywgJGp1c3RpZnk6IG51bGwsICR3cmFwOiBudWxsLCAkYWxpZ246IG51bGwpIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG5cbiAgQGlmICRqdXN0aWZ5IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5O1xuICB9XG5cbiAgQGlmICR3cmFwIHtcbiAgICBmbGV4LXdyYXA6ICR3cmFwO1xuICB9XG5cbiAgQGlmICRhbGlnbiB7XG4gICAgYWxpZ24taXRlbXM6ICRhbGlnbjtcbiAgfVxufVxuXG4vLy8gXG4vLy8gRmxleGJveCBDaGlsZFxuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtIHtsaXN0fSAkZmxleCAtIERlZmF1bHQgZmxleCBhcmd1bWVudHMuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRhbGlnbi1zZWxmIC0gU2VsZi1hbGlnbm1lbnQgcG9zaXRpb24uXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRvcmRlciAtIE9yZGVyIGZvciBzZWxmIGluIGZsZXggcGFyZW50LlxuLy8vXG5cbkBtaXhpbiBmbGV4LWNoaWxkKCRmbGV4OiAxLCAkYWxpZ24tc2VsZjogbnVsbCwgJG9yZGVyOiBudWxsKSB7XG4gIGZsZXg6ICRmbGV4O1xuXG4gIEBpZiAkYWxpZ24tc2VsZiB7XG4gICAgYWxpZ24tc2VsZjogJGFsaWduLXNlbGY7XG4gIH1cblxuICBAaWYgJG9yZGVyIHtcbiAgICBvcmRlcjogJG9yZGVyO1xuICB9XG59XG4iLCIvLy8gXG4vLy8gU3ltbWV0cmljLCBFdmVuIEZsZXhib3ggb3IgRmxvYXRlZCBDb2x1bW5zXG4vLy8gIFxuLy8vIFRPRE86IEJldHRlciBkb2N1bWVudGF0aW9uLiBcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7c3RyaW5nfSAkdHlwZSAtIEZsZXhib3ggb3IgZmxvYXQ/XG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRlbGVtZW50IC0gVGFyZ2V0IGNoaWxkIGVsZW1lbnQuXG4vLy8gQHBhcmFtIGludC9saXN0ICRjb2x1bW5zIC0gTnVtYmVyIG9mIGNvbHVtbnMgdG8gcHJvZHVjZS5cbi8vLyBAcGFyYW0ge251bWJlcn0gJGd1dHRlciAtIE1hcmdpbiBiZXR3ZWVuIGNvbHVtbnMuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaWRlIC0gRmxvYXQgc2lkZS5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJG92ZXJmbG93IC0gT3ZlcmZsb3csIGhpZGRlbiBvciBhdXRvP1xuLy8vXG5cbkBtaXhpbiBjb2x1bW5zKCR0eXBlOiAnZmxleCcsICRlbGVtZW50OiBkaXYsICRjb2x1bW5zOiAzLCAkZ3V0dGVyOiAwLCAkc2lkZTogbGVmdCwgJG92ZXJmbG93OiBhdXRvKSB7XG4gIC8vIFZhbGlkYXRlIGNvbHVtbiBndXR0ZXIuXG4gICRndXR0ZXI6IF9jb2x1bW4tZ3V0dGVyKCRndXR0ZXIpO1xuICAkdHlwZTogX2NvbHVtbi10eXBlKCR0eXBlKTtcblxuICBAaWYgaXMtZGVjaW1hbCgkY29sdW1ucykgYW5kICRjb2x1bW5zID4gMCB7XG4gICAgQGluY2x1ZGUgX2V2ZW4tY29sdW1ucygkdHlwZSwgJGVsZW1lbnQsICRjb2x1bW5zLCAkZ3V0dGVyLCAkc2lkZSwgJG92ZXJmbG93KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgaXMtbGlzdCgkY29sdW1ucykge1xuICAgIEBpbmNsdWRlIF9vZGQtY29sdW1ucygkdHlwZSwgJGVsZW1lbnQsICRjb2x1bW5zLCAkZ3V0dGVyLCAkc2lkZSwgJG92ZXJmbG93KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciBcIkNvbHVtbnMgc2hvdWxkIGJlIGVpdGhlciBhIHtsaXN0fSBvciBhIGEgbnVtYmVyXCI7XG4gIH1cbn1cblxuLy8vIFxuLy8vIFN5bW1ldHJpYyBDb2x1bW4gV2lkdGhcbi8vLyBcbi8vLyBEZXRlcm1pbmUgdGhlIHdpZHRoIG9mIGVhY2ggY29sdW1uIGluIGEgc3llbW1ldHJpY2FsIGVsZW1lbnQuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRjb2x1bW5zIC0gTnVtYmVyIG9mIGNvbHVtbnMuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXIgLSBQZXJjZW50YWdlIHNwYWNlIGJldHdlZW4gY29sdW1ucy5cbi8vLyBAcmV0dXJuIHtudW1iZXJ9IENhbGN1bGF0ZWQgY29sdW1uIHdpZHRoLlxuLy8vXG5cbkBmdW5jdGlvbiBfY29sdW1uLXdpZHRoKCRjb2x1bW5zLCAkZ3V0dGVyKSB7XG4gICR3aWR0aDogKDEwMCAtICgkY29sdW1ucyAtIDEpICogJGd1dHRlcikgLyAkY29sdW1ucztcblxuICBAaWYgbm90IGlzLXBlcmNlbnQoJHdpZHRoKSB7XG4gICAgJHdpZHRoOiBwZXJjZW50YWdlKCR3aWR0aCAqIDAuMDEpO1xuICB9XG5cbiAgQHJldHVybiAkd2lkdGg7XG59XG5cbi8vLyBcbi8vLyBTeW1tZXRyaWMgQ29sdW1uIE1hcmdpblxuLy8vIFxuLy8vIERldGVybWluZSB0aGUgd2lkdGggb2YgZWFjaCBjb2x1bW4gaW4gYSBzeWVtbWV0cmljYWwgZWxlbWVudC5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge251bWJlcn0gJGd1dHRlciAtIE1hcmdpbiBhcyBhIGRlY2ltYWwgb3IgcGVyY2VudGFnZS5cbi8vLyBAcGFyYW0ge251bWJlcn0gJGd1dHRlciAtIE1hcmdpbiBhcyBhIHBlcmNlbnRhZ2UuXG4vLy9cblxuQGZ1bmN0aW9uIF9jb2x1bW4tZ3V0dGVyKCRndXR0ZXIpIHtcbiAgQGlmICRndXR0ZXIgIT0gMCB7XG4gICAgQGlmICRndXR0ZXIgIT0gMCBhbmQgaXMtZGVjaW1hbCgkZ3V0dGVyKSB7XG4gICAgICAkZ3V0dGVyOiBwZXJjZW50YWdlKHN0cmlwLXVuaXQoJGd1dHRlcikgKiAwLjAxKTtcbiAgICB9IEBlbHNlIGlmIG5vdCBpcy1wZXJjZW50KCRndXR0ZXIpIHtcbiAgICAgIEBlcnJvciBcIk1hcmdpbiBzaG91bGQgYmUgc3VwcGxpZWQgYXMgYSBkZWNpbWFsIG9yIGEgcGVyY2VudGFnZSFcIjtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRndXR0ZXI7XG59XG5cbi8vLyBcbi8vLyBBc3ltbWV0cmljIENvbHVtbiBXaWR0aFxuLy8vIFxuLy8vIERldGVybWluZSB0aGUgd2lkdGggb2YgXCJhdXRvXCIgY29sdW1ucyBpbiBhc3llbW1ldHJpY2FsIGVsZW1lbnQuXG4vLy8gV2lkdGggZm9yIG1hcmdpbiBpcyBzdWJ0cmFjdGVkIGZyb20gYXV0byBjb2x1bW5zLiBJbiBzaG9ydDpcbi8vLyBcbi8vLyBAZXhhbXBsZVxuLy8vIFxuLy8vICAgJSBjb2x1bW4gdG90YWwgPSAlIHdpZHRoICsgbWFyZ2luO1xuLy8vICAgYXV0byBjb2x1bW4gdG90YWwgPSAlIHdpZHRoIC0gbWFyZ2luO1xuLy8vIFxuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLSBMaXN0IG9mIGNvbHVtbnMuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXIgLSBDb2x1bW4gZ3V0dGVyICh0byByaWdodCBvciBsZWZ0KVxuLy8vIEByZXR1cm4ge251bWJlcn0gLSBQZXJjZW50YWdlIHdpZHRoIG9mIFwiYXV0b1wiIGNvbHVtbnMuXG4vLy9cblxuQGZ1bmN0aW9uIF9vZGQtY29sb3Vtbl93aWR0aCgkY29sdW1ucywgJGd1dHRlcikge1xuICAkcGVyY2VudDogMDtcbiAgJGF1dG9zOiAwO1xuXG4gIEBlYWNoICRjb2wgaW4gJGNvbHVtbnMge1xuICAgICRwZXJjZW50OiAkcGVyY2VudCArIF92YWx1ZS1wZXJjZW50KCRjb2wpO1xuXG4gICAgQGlmIGlzLWRlZmF1bHQtd29yZCgkY29sKSB7XG4gICAgICAkYXV0b3M6ICRhdXRvcyArIDE7XG4gICAgfVxuICB9XG5cbiAgLy8gRGl2aXNpb24gYnkgemVybyBpcyBiYWQuXG4gICRhdXRvczogaWYoJGF1dG9zID09IDAsIDEsICRhdXRvcyk7XG5cbiAgQHJldHVybiAoKDEwMCAtICRwZXJjZW50KSAvICRhdXRvcykgLSAoKCRndXR0ZXIgKiAobGVuZ3RoKCRjb2x1bW5zKSAtIDEpKSAvICRhdXRvcyk7XG59XG5cbi8vLyBcbi8vLyBHZXQgT3Bwb3NpdGUgRmxvYXQgU2lkZVxuLy8vIFxuLy8vIFVzZWQgaW4gc2V2ZXJhbCBwbGFjZXMgYW5kIHN1cnByaXNpbmdseSB1c2VmdWwuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaWRlIC0gRmxvYXQgc2lkZTtcbi8vLyBAcmV0dXJuIHtzdHJpbmd9ICRvcHBvc2l0ZSAtIEludmVyc2Ugb2YgZmxvYXRlZCBzaWRlO1xuLy8vXG5cbkBmdW5jdGlvbiBfb3Bwb3NpdGUtc2lkZSgkc2lkZTogbGVmdCkge1xuICBAcmV0dXJuIGlmKCRzaWRlID09IHJpZ2h0LCBsZWZ0LCByaWdodCk7XG59XG5cbi8vLyBcbi8vLyAgRXZhbHVhdGUgV2hldGhlciBOdW1iZXIgaXMgQ29sdW1uXG4vLy8gXG4vLy8gSWYgbnVtYmVyIGlzIGEgcGVyY2VudGFnZSwgcmV0dXJuIG51bWJlciwgZWxzZSByZXR1cm4gbnVtYmVyIDAuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICR2YWx1ZSAtIE51bWJlciB0byB0ZXN0LlxuLy8vIEByZXR1cm4ge251bWJlcn0gLSBOdW1iZXIgb3IgMC5cbi8vL1xuXG5AZnVuY3Rpb24gX3ZhbHVlLXBlcmNlbnQoJHZhbHVlKSB7XG4gIEByZXR1cm4gaWYoaXMtcGVyY2VudCgkdmFsdWUpLCAkdmFsdWUsIDApO1xufVxuXG4vLy8gXG4vLy8gVG90YWwgUGVyY2VudGFnZXMgaW4gTGlzdFxuLy8vIFxuLy8vIFRoZSB7bGlzdH0gZm9yIGFzeW1tZXRyaWMgZmxvYXQgY29sdW1ucyBoYXMgYSBtaXggb2YgcGVyY2VudGFnZSBhbmQgXCJhdXRvXCJcbi8vLyBzaXplZCBjb2x1bW5zLiBUaGlzIHRhbGxpZXMgdGhlIHBlcmNlbnRhZ2UgY29sdW1ucyBhbmQgcmV0dXJucyB3aGV0aGVyIHRoZXlcbi8vLyBleGNlZWQgMTAwJS5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC0gTGlzdCBvZiBjb2x1bW5zIHRvIGV2YWx1YXRlLlxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkdGFyZ2V0IC0gVGFyZ2V0IHBlcmNlbnRhZ2UgdG8gY2hlY2sgYWdhaW5zdC5cbi8vLyBAcmV0dXJuIHtib29sfSBDb2x1bW5zIGZpdCB3aXRoaW4gJHRhcmdldCwgdHJ1ZS9mYWxzZS5cbi8vL1xuXG5AZnVuY3Rpb24gX2xpc3QtZ3JlYXRlci10aGFuKCRjb2x1bW5zLCAkdGFyZ2V0OiAxMDApIHtcbiAgJHBlcmNlbnQ6IDA7XG5cbiAgQGVhY2ggJGNvbCBpbiAkY29sdW1ucyB7XG4gICAgJHBlcmNlbnQ6ICRwZXJjZW50ICsgX3ZhbHVlLXBlcmNlbnQoJGNvbCk7XG4gIH1cblxuICBAcmV0dXJuICgkcGVyY2VudCA+ICR0YXJnZXQpO1xufVxuXG4vLy8gXG4vLy8gVmFsaWRhdGUgQXN5bW1ldHJpYyBNaXhpbiBWYXJzXG4vLy8gXG4vLy8gVmFsaWRhdGVkIHBhcmFtYXRlcnMgcGFzc2VkIGZvciBhc3ltbWV0cmljIGNvbHVtbnMuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29sdW1ucyAtIExpc3Qgb2YgY29sdW1ucy5cbi8vLyBAcmV0dXJuIHtsaXN0fSAkY29sdW1ucyAtIExpc3Qgb2YgY29sdW1ucywgdmFsaWRhdGVkLlxuLy8vXG5cbkBmdW5jdGlvbiBfY2hlY2stX29kZC1jb2x1bW5zKCRjb2x1bW5zKSB7XG4gIEBpZiBub3QgaXMtbGlzdCgkY29sdW1ucykge1xuICAgIEBlcnJvciBcIkFzeW1tZXRyaWNhbCBjb2x1bW5zIHNob3VsZCBiZSBzdXBwbGllZCBhIGxpc3QhXCI7XG4gIH1cblxuICBAZWFjaCAkY29sIGluICRjb2x1bW5zIHtcbiAgICBAaWYgbm90IGlzLXBlcmNlbnQoJGNvbCkgYW5kIG5vdCBpcy1kZWZhdWx0LXdvcmQoJGNvbCkge1xuICAgICAgLy8gQ2hlY2sgZm9yIGFwcHJvcHJhaXRlIHVuaXRzLlxuICAgICAgQGVycm9yIFwiU3VwcGxpZWQgdW5pdHMgc2hvdWxkIGJlIGVpdGhlciBhIHBlcmNlbnRhZ2Ugb3IgJ2F1dG8hJ1wiO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbGlzdC1ncmVhdGVyLXRoYW4oJGNvbHVtbnMsIDEwMCkge1xuICAgIC8vIENoZWNrIGZvciBhcHByb3ByaWF0ZSBzaXplLlxuICAgIEBlcnJvciBcIkNvbHVtbiBwZXJjZW50YWdlcyBzaG91bGQgdG90YWwgPCAxMDAlIVwiO1xuICB9XG5cbiAgQHJldHVybiAkY29sdW1ucztcbn1cblxuLy8vIFxuLy8vIFZhbGlkYXRlIENvbHVtbiBUeXBlXG4vLy8gXG4vLy8gQ29sdW1uIHR5cGUgbXVzdCBiZSBlaXRoZXIgZmxvYXRib3ggb3IgZmxleC4gVGhyb3cgZXJyb3IgaWYgYW55IG90aGVyIHBhcmFtXG4vLy8gaXMgZW50ZXJlZC5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge3N0cmluZ30gJHR5cGUgLSBUeXBlIG9mIGNvbHVtbnMuXG4vLy8gQHJldHVybiB7c3RyaW5nfSAkdHlwZSAtIFR5cGUgb2YgY29sdW1ucywgdmFsaWRhdGVkLlxuLy8vXG5cbkBmdW5jdGlvbiBfY29sdW1uLXR5cGUoJHR5cGUpIHtcbiAgQGlmICR0eXBlICE9ICdmbG9hdCcgYW5kICR0eXBlICE9ICdmbGV4JyB7XG4gICAgQGVycm9yIFwiVHlwZSBtdXN0IGJlIGVpdGhlciAnZmxvYXQnIG9yICdmbGV4JyFcIlxuICB9XG5cbiAgQHJldHVybiAkdHlwZTtcbn1cblxuLy8vIFxuLy8vIFNldCBcIkF1dG9cIi13aWR0aCBDb2x1bW4gU2l6ZXNcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC0gTGlzdCBvZiBjb2x1bW5zLlxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVyIC0gTWFyZ2luIHNpemUuXG4vLy8gQHJldHVybiB7bGlzdH0gJGNvbHVtbnMgLSBTZXQgc2l6ZXMgZm9yIGNvbHVtbnMuXG4vLy9cblxuQGZ1bmN0aW9uIF9zZXQtYXV0b2NvbC1zaXplcygkY29sdW1ucywgJGd1dHRlcikge1xuICAkYXV0by13aWR0aDogX29kZC1jb2xvdW1uX3dpZHRoKCRjb2x1bW5zLCAkZ3V0dGVyKTtcblxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkY29sdW1ucykge1xuICAgIEBpZiBpcy1kZWZhdWx0LXdvcmQobnRoKCRjb2x1bW5zLCAkaSksIGF1dG8pIHtcbiAgICAgICRjb2x1bW5zOiBzZXQtbnRoKCRjb2x1bW5zLCAkaSwgJGF1dG8td2lkdGgpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJGNvbHVtbnM7XG59XG5cbi8vLyBcbi8vLyBBc3ltbWV0cmljIGNvbHVtbnMuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cblxuQG1peGluIF9ldmVuLWNvbHVtbnMoJHR5cGUsICRlbGVtZW50LCAkY29sdW1ucywgJGd1dHRlciwgJHNpZGUsICRvdmVyZmxvdykge1xuICAkd2lkdGg6IF9jb2x1bW4td2lkdGgoJGNvbHVtbnMsICRndXR0ZXIpO1xuXG4gIEBpZiAkdHlwZSA9PSAnZmxleCcge1xuICAgIEBpbmNsdWRlIF9ldmVuLWZsZXhib3goJGVsZW1lbnQsICRjb2x1bW5zLCAkZ3V0dGVyLCAkd2lkdGgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBpZiAkdHlwZSA9PSAnZmxvYXQnIHtcbiAgICBAaW5jbHVkZSBfZXZlbi1mbG9hdCgkZWxlbWVudCwgJGNvbHVtbnMsICRndXR0ZXIsICRzaWRlLCAkd2lkdGgsICRvdmVyZmxvdykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vLyBcbi8vLyBBc3ltbWV0cmljIGNvbHVtbnMuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cblxuQG1peGluIF9vZGQtY29sdW1ucygkdHlwZSwgJGVsZW1lbnQsICRjb2x1bW5zLCAkZ3V0dGVyLCAkc2lkZSwgJG92ZXJmbG93KSB7XG4gIC8vIFZhbGlkYXRlIGNvbHVtbnMsIGlmIGxpc3QuXG4gICRjb2x1bW5zOiBfY2hlY2stX29kZC1jb2x1bW5zKCRjb2x1bW5zKTtcblxuICBAaWYgJHR5cGUgPT0gJ2ZsZXgnIHtcbiAgICBAaW5jbHVkZSBfb2RkLWZsZXhib3goJGVsZW1lbnQsICRjb2x1bW5zLCAkZ3V0dGVyKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgJHR5cGUgPT0gJ2Zsb2F0JyB7XG4gICAgQGluY2x1ZGUgX29kZC1mbG9hdCgkZWxlbWVudCwgJGNvbHVtbnMsICRndXR0ZXIsICRzaWRlLCAkb3ZlcmZsb3cpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLy8gXG4vLy8gRmxleGJveCBDb2x1bW5zXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRlbGVtZW50IC0gVGFyZ2V0IGVsZW1lbnQgZWxlbWVudC5cbi8vLyBAcGFyYW0ge251bWJlcn0gJHdpZHRoIC0gV2lkdGggb2YgZWFjaCBjb2x1bW5zLlxuLy8vXG5cbkBtaXhpbiBfZXZlbi1mbGV4Ym94KCRlbGVtZW50LCAkY29sdW1ucywgJGd1dHRlciwgJHdpZHRoKSB7XG4gIC8vIElmIG1hcmdpbiBpcyAwLCB3aWR0aCBpcyBub3QgbmVlZGVkLCBzbyBpbnN0ZWFkIG1ha2UgY29sdW1ucyBhdXRvIGZpbGwuXG4gICR3aWR0aDogaWYoJGd1dHRlciAhPSAwLCAwIDEgJHdpZHRoLCAxKTtcblxuICBAaW5jbHVkZSBmbGV4LXBhcmVudChyb3csIHNwYWNlLWJldHdlZW4sIHdyYXApO1xuXG4gID4gI3skZWxlbWVudH0ge1xuICAgIG1pbi1oZWlnaHQ6IDFweDtcbiAgICBAaW5jbHVkZSBmbGV4LWNoaWxkKCR3aWR0aCk7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFxuLy8vIEZsb2F0IENvbHVtbnNcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge3N0cmluZ30gJGVsZW1lbnQgLSBUYXJnZXQgZWxlbWVudCBlbGVtZW50LlxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkY29sdW1ucyAtIE51bWJlciBvZiBjb2x1bW5zIHRvIHByb2R1Y2UuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICR3aWR0aCAtIFdpZHRoIG9mIGVhY2ggY29sdW1ucy5cbi8vLyBAcGFyYW0ge251bWJlcn0gJGd1dHRlciAtIE1hcmdpbiBiZXR3ZWVuIGNvbHVtbnMuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRzaWRlIC0gRmxvYXQgc2lkZS5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJG92ZXJmbG93IC0gT3ZlcmZsb3csIGhpZGRlbiBvciBhdXRvP1xuLy8vXG5cbkBtaXhpbiBfZXZlbi1mbG9hdCgkZWxlbWVudCwgJGNvbHVtbnMsICRndXR0ZXIsICRzaWRlLCAkd2lkdGgsICRvdmVyZmxvdykge1xuICBAaW5jbHVkZSBjbGVhcmZpeCgkb3ZlcmZsb3cpO1xuXG4gID4gI3skZWxlbWVudH0ge1xuICAgIGZsb2F0OiAkc2lkZTtcbiAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgd2lkdGg6ICR3aWR0aDs7XG5cbiAgICAmOm5vdCg6bnRoLWNoaWxkKCN7JGNvbHVtbnMgKyAnbid9KSkge1xuICAgICAgbWFyZ2luLSN7X29wcG9zaXRlLXNpZGUoJHNpZGUpfTogJGd1dHRlcjtcbiAgICB9XG5cbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gXG4vLy8gQXN5bW1ldHJpY2FsIEZsZXhib3ggRWxlbWVudHNcbi8vLyBcbi8vLyBfb2RkLWNvbHVtbnMgcHJvdmlkZXMgaXJyZWd1bGFybHktc2l6ZWQgZmxvYXRlZCBjb2x1bW5zIHNpZGUgYnkgc2lkZS4gVGhpc1xuLy8vIGFsbG93cyBmb3IgYW4gYXN5bW1ldHJpY2FsIHN0cnVjdHVyZS5cbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge3N0cmluZ30gJGVsZW1lbnQgLSBUYXJnZXQgY2hpbGQgZWxlbWVudC5cbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC0gTGlzdCBvZiBjb2x1bW5zIHRvIHByb2R1Y2UuXG4vLy9cblxuQG1peGluIF9vZGQtZmxleGJveCgkZWxlbWVudCwgJGNvbHVtbnMsICRndXR0ZXIpIHtcbiAgQGlmICRndXR0ZXIgIT0gMCB7XG4gICAgJGNvbHVtbnM6IF9zZXQtYXV0b2NvbC1zaXplcygkY29sdW1ucywgJGd1dHRlcik7XG4gIH1cblxuICBAaW5jbHVkZSBmbGV4LXBhcmVudChyb3csIHNwYWNlLWJldHdlZW4pO1xuXG4gID4gI3skZWxlbWVudH0ge1xuICAgIG1pbi1oZWlnaHQ6IDFweDtcblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRjb2x1bW5zKSB7XG4gICAgICAmOm50aC1jaGlsZCgjeyRpfSkge1xuICAgICAgICAvLyBTaXplIGlzIGp1c3QgXCJmbGV4OiAxXCIgaWYgbWFyZ2lucyBhcmUgemVyb2FuZCB0aGUgY29sdW1uIGlzIGF1dG8uXG4gICAgICAgICR3aWR0aDogaWYobnRoKCRjb2x1bW5zLCAkaSkgIT0gYXV0bywgMCAxIG50aCgkY29sdW1ucywgJGkpLCAxKTtcblxuICAgICAgICBAaW5jbHVkZSBmbGV4LWNoaWxkKCR3aWR0aCk7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLy8gXG4vLy8gQXN5bW1ldHJpY2FsIEZsb2F0ZWQgRWxlbWVudHNcbi8vLyBcbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge3N0cmluZ30gJGVsZW1lbnQgLSBUYXJnZXQgY2hpbGQgZWxlbWVudC5cbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC0gTGlzdCBvZiBjb2x1bW5zIHRvIHByb2R1Y2UuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXIgLSBNYXJnaW4gYmV0d2VlbiBjb2x1bW5zLlxuLy8vIEBwYXJhbSB7c3RyaW5nfSAkc2lkZSAtIEZsb2F0IHNpZGUuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRvdmVyZmxvdyAtIE92ZXJmbG93LCBoaWRkZW4gb3IgYXV0bz9cbi8vL1xuXG5AbWl4aW4gX29kZC1mbG9hdCgkZWxlbWVudCwgJGNvbHVtbnMsICRndXR0ZXIsICRzaWRlLCAkb3ZlcmZsb3cpIHtcbiAgJGNvbHVtbnM6IF9zZXQtYXV0b2NvbC1zaXplcygkY29sdW1ucywgJGd1dHRlcik7XG4gIEBpbmNsdWRlIGNsZWFyZml4KCRvdmVyZmxvdyk7XG5cbiAgPiAjeyRlbGVtZW50fSB7XG4gICAgZmxvYXQ6ICRzaWRlO1xuICAgIG1pbi1oZWlnaHQ6IDFweDtcblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRjb2x1bW5zKSB7XG4gICAgICAmOm50aC1jaGlsZCgjeyRpfSkge1xuICAgICAgICBAaWYgJGkgPCBsZW5ndGgoJGNvbHVtbnMpIGFuZCBzdHJpcC11bml0KCRndXR0ZXIpICE9IDAge1xuICAgICAgICAgIG1hcmdpbi0je19vcHBvc2l0ZS1zaWRlKCRzaWRlKX06ICRndXR0ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBGbG9hdGVkIGNvbHVtbnMgZG8gbm90IGVuam95IHRoZSBiZW5lZml0IG9mIGF1dG8gc2l6ZXMuXG4gICAgICAgIHdpZHRoOiBudGgoJGNvbHVtbnMsICRpKTtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLy8gXG4vLy8gU2V0IFBvc2l0aW9uIG9mIEZpeGVkLCBBYnNvbHV0ZSBvciBSZWxhdGl2ZSBJdGVtc1xuLy8vIFxuLy8vIEkgd2FudGVkIGEgc2xpZ2h0bHkgZGlmZmVyZW50IG9wZXJhdGlvbiBmb3IgbXkgcG9zaXRpb24gbWl4aW46IFRvIGJlIGFibGUgdG9cbi8vLyB1c2UgaW4gYSBtYW5uZXIgaWRlbnRpY2FsIHRvIG1hcmdpbiBvciBwYWRkaW5nIHNpZGUgc2hvcnRoYW5kOlxuLy8vIFxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyBcbi8vLyAgICBtYXJnaW46IDEwcHggMjBweCA1cHg7XG4vLy8gICAgQGluY2x1ZGUgYWJzb2x1dGUoMTBweCAyMHB4IDVweCk7XG4vLy8gXG4vLy8gQGV4YW1wbGUgc2NzcyBPdXRwdXQgY29udGVudC5cbi8vLyBcbi8vLyAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4vLy8gICAgdG9wOiAxMHB4O1xuLy8vICAgIGxlZnQ6IDIwcHg7XG4vLy8gICAgcmlnaHQ6IDIwcHg7XG4vLy8gICAgYm90dG9tOiA1cHg7XG4vLy8gXG4vLy8gSWYgdmFsdWVzIGFyZSB1bml0bGVzcyBhbmQgZ3JlYXRlciB0aGFuIHplcm8sIGl0IHdpbGwgYXNzdW1lIHRoZXkgZGVjaW1hbFxuLy8vIHZhbHVlcyBhbmQgZ2VuZXJhdGUgcmVtIGRpbWVuc2lvbnMuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAbGluayBodHRwOi8vaHVnb2dpcmF1ZGVsLmNvbS8yMDE0LzA1LzE5L25ldy1vZmZzZXRzLXNhc3MtbWl4aW4vXG4vLy8gQGxpbmsgaHR0cDovL2h1Z29naXJhdWRlbC5jb20vMjAxMy8wOC8wNS9vZmZzZXRzLXNhc3MtbWl4aW4vXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRwb3NpdGlvbiAtIFR5cGUgb2YgcG9zaXRpb24gKGFic29sdXRlLCBmaXhlZCwgcmVsYXRpdmUsIHN0aWNreSkuXG4vLy8gQHBhcmFtIHttYXB9ICRwb3NpdGlvbnMgLSBWYWx1ZXMgdG8gYmUgYXBwbGllZCAoNTAlIDNweCAyMHZnKS5cbi8vLyBAcGFyYW0ge21hcH0gJG9mZnNldHMgLSBTaWRlcyBmb3IgdmFsdWVzICh0b3AgbGVmdCBib3R0b20gcmlnaHQpLlxuLy8vXG5cbkBtaXhpbiBwb3NpdGlvbigkcG9zaXRpb24sICRwb3NpdGlvbnMsICRvZmZzZXRzOiBudWxsKSB7XG4gIHBvc2l0aW9uOiAkcG9zaXRpb247XG5cbiAgQGlmIG5vdCAkb2Zmc2V0cyB7XG4gICAgLy8gMS4gRGVmYXVsdCBvZmZzZXRzIGxpc3QuXG4gICAgJG9mZnNldHM6IHRvcCByaWdodCBib3R0b20gbGVmdDtcblxuICAgIEBpZiBsZW5ndGgoJHBvc2l0aW9ucykgPT0gMSB7XG4gICAgICBAZm9yICRpIGZyb20gMSB0byA0IHtcbiAgICAgICAgLy8gMSBvciA0IHBvc2l0aW9ucy4gSWYgb25seSBvbmUgc2lkZSBpbnB1dCwgZHVwbGljYXRlIGl0IGZvciB0aGUgb3RoZXIgc2lkZXMuXG4gICAgICAgICRwb3NpdGlvbnM6IGFwcGVuZCgkcG9zaXRpb25zLCBudGgoJHBvc2l0aW9ucywgMSkpO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgbGVuZ3RoKCRwb3NpdGlvbnMpID09IDIge1xuICAgICAgLy8gMiBwb3NpdGlvbnMuIER1cGxpY2F0ZSBlYWNoIHZhbHVlIGlmIHR3byBpdGVtcyBwcm92aWRlZC5cbiAgICAgICRvZmZzZXRzOiB0b3AgbGVmdCBib3R0b20gcmlnaHQ7XG4gICAgICAkcG9zaXRpb25zOiBhcHBlbmQoJHBvc2l0aW9ucywgbnRoKCRwb3NpdGlvbnMsIDEpKTtcbiAgICAgICRwb3NpdGlvbnM6IGFwcGVuZCgkcG9zaXRpb25zLCBudGgoJHBvc2l0aW9ucywgMikpO1xuICAgIH0gQGVsc2UgaWYgbGVuZ3RoKCRwb3NpdGlvbnMpID09IDMge1xuICAgICAgLy8gMyBwb3NpdGlvbnMuIEFkZCBleHRyYSBzaWRlIGlmIHRocmVlIHBvc2l0aW9ucyBwcm92aWRlZC5cbiAgICAgICRvZmZzZXRzOiB0b3AgbGVmdCBib3R0b20gcmlnaHQ7XG4gICAgICAkcG9zaXRpb25zOiBhcHBlbmQoJHBvc2l0aW9ucywgbnRoKCRwb3NpdGlvbnMsIDIpKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBpZiBsZW5ndGgoJHBvc2l0aW9ucykgIT0gbGVuZ3RoKCRvZmZzZXRzKSB7XG4gICAgICBAZXJyb3IgJ1RoZSBudW1iZXIgb2Ygb2Zmc2V0IHByb3BlcnRpZXMgYW5kIG9mZnNldCBwb3NpdGlvbnMgbXVzdCBiZSBlcXVhbC4nO1xuICAgIH1cbiAgfVxuXG4gIEBlYWNoICRvZmZzZXQgaW4gJG9mZnNldHMge1xuICAgICRzaWRlOiBpbmRleCgkb2Zmc2V0cywgJG9mZnNldCk7XG4gICAgJHZhbHVlOiBudGgoJHBvc2l0aW9ucywgJHNpZGUpO1xuXG4gICAgQGlmIG5vdCBpcy12YWxpZC11bml0KCR2YWx1ZSkge1xuICAgICAgQGVycm9yIFwiI3skc2lkZX0gaXMgbm90IGEgdmFsaWQgdW5pdCBmb3IgdGhpcyBtaXhpbi5cIjtcbiAgICB9XG5cbiAgICAjeyRvZmZzZXR9OiAkdmFsdWU7XG4gIH1cbn1cblxuLy8vXG4vLy8gQWJzb2x1dGVseSBwb3NpdGlvbiBhbiBlbGVtZW50LlxuLy8vIFxuLy8vIEBleGFtcGxlXG4vLy8gICBcbi8vLyAgIC5mb28ge1xuLy8vICAgICBAaW5jbHVkZSBhYnNvbHV0ZSg1MCUgYXV0byAxMHB4IGF1dG8pO1xuLy8vICAgfVxuLy8vICAgXG4vLy8gICAuYmFyIHtcbi8vLyAgICAgQGluY2x1ZGUgYWJzb2x1dGUoNTAlIDIwJSwgbGVmdCB0b3ApO1xuLy8vICAgfVxuLy8vXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvcG9zaXRpb25cbi8vLyBAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9kb2NzL1dlYi9DU1MvbWFyZ2luXG4vLy8gQHBhcmFtIHtsaXN0fSAkcG9zaXRpb25zIC0gTGlzdCBvZiB1bml0cyBmb3Igb2Zmc2V0cyAoNTAlIDI1JSBhdXRvIDEwcHgpLlxuLy8vIEBwYXJhbSB7bGlzdD19ICRvZmZzZXRzIC0gTGlzdCBvZiBvZmZzZXRzICh0b3AgbGVmdCBib3R0b20gcmlnaHQpLlxuLy8vXG5cbkBtaXhpbiBhYnNvbHV0ZSgkcG9zaXRpb25zLCAkb2Zmc2V0czogbnVsbCkge1xuICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgJHBvc2l0aW9ucywgJG9mZnNldHMpO1xufVxuXG4vLy9cbi8vLyBGaXggdGhlIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgb24gc2NyZWVuLlxuLy8vIFxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIFxuLy8vICAgLmZvbyB7XG4vLy8gICAgIEBpbmNsdWRlIGZpeGVkKDUwJSBhdXRvIDEwcHggYXV0byk7XG4vLy8gICB9XG4vLy8gICBcbi8vLyAgIC5iYXIge1xuLy8vICAgICBAaW5jbHVkZSBmaXhlZCg1MCUgMjAlLCBsZWZ0IHRvcCk7XG4vLy8gICB9XG4vLy9cbi8vLyBAc2luY2UgMS4wLjBcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9wb3NpdGlvblxuLy8vIEBsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL2RvY3MvV2ViL0NTUy9tYXJnaW5cbi8vLyBAcGFyYW0ge2xpc3R9ICRwb3NpdGlvbnMgLSBMaXN0IG9mIHVuaXRzIGZvciBvZmZzZXRzICg1MCUgMjUlIGF1dG8gMTBweCkuXG4vLy8gQHBhcmFtIHtsaXN0PX0gJG9mZnNldHMgLSBMaXN0IG9mIG9mZnNldHMgKHRvcCBsZWZ0IGJvdHRvbSByaWdodCkuXG4vLy9cblxuQG1peGluIGZpeGVkKCRwb3NpdGlvbnMsICRvZmZzZXRzOiBudWxsKSB7XG4gIEBpbmNsdWRlIHBvc2l0aW9uKGZpeGVkLCAkcG9zaXRpb25zLCAkb2Zmc2V0cyk7XG59XG5cbi8vL1xuLy8vIFJlbGF0aXZlbHkgcG9zaXRpb24gYW4gZWxlbWVudC5cbi8vLyBcbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICBcbi8vLyAgIC5mb28ge1xuLy8vICAgICBAaW5jbHVkZSByZWxhdGl2ZSg1MCUgYXV0byAxMHB4IGF1dG8pO1xuLy8vICAgfVxuLy8vICAgXG4vLy8gICAuYmFyIHtcbi8vLyAgICAgQGluY2x1ZGUgcmVsYXRpdmUoNTAlIDIwJSwgbGVmdCB0b3ApO1xuLy8vICAgfVxuLy8vXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvcG9zaXRpb25cbi8vLyBAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9kb2NzL1dlYi9DU1MvbWFyZ2luXG4vLy8gQHBhcmFtIHtsaXN0fSAkcG9zaXRpb25zIC0gTGlzdCBvZiB1bml0cyBmb3Igb2Zmc2V0cyAoNTAlIDI1JSBhdXRvIDEwcHgpLlxuLy8vIEBwYXJhbSB7bGlzdD19ICRvZmZzZXRzIC0gTGlzdCBvZiBvZmZzZXRzICh0b3AgbGVmdCBib3R0b20gcmlnaHQpLlxuLy8vXG5cbkBtaXhpbiByZWxhdGl2ZSgkcG9zaXRpb25zLCAkb2Zmc2V0czogbnVsbCkge1xuICBAaW5jbHVkZSBwb3NpdGlvbihyZWxhdGl2ZSwgJHBvc2l0aW9ucywgJG9mZnNldHMpO1xufVxuXG4vLy9cbi8vLyBTdGlja2lseSBwb3NpdGlvbiBhbiBlbGVtZW50LlxuLy8vIFxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIFxuLy8vICAgLmZvbyB7XG4vLy8gICAgIEBpbmNsdWRlIHN0aWNreSg1MCUgYXV0byAxMHB4IGF1dG8pO1xuLy8vICAgfVxuLy8vICAgXG4vLy8gICAuYmFyIHtcbi8vLyAgICAgQGluY2x1ZGUgc3RpY2t5KDUwJSAyMCUsIGxlZnQgdG9wKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBzaW5jZSAxLjAuMFxuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Bvc2l0aW9uXG4vLy8gQGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vZG9jcy9XZWIvQ1NTL21hcmdpblxuLy8vIEBwYXJhbSB7bGlzdH0gJHBvc2l0aW9ucyAtIExpc3Qgb2YgdW5pdHMgZm9yIG9mZnNldHMgKDUwJSAyNSUgYXV0byAxMHB4KS5cbi8vLyBAcGFyYW0ge2xpc3Q9fSAkb2Zmc2V0cyAtIExpc3Qgb2Ygb2Zmc2V0cyAodG9wIGxlZnQgYm90dG9tIHJpZ2h0KS5cbi8vL1xuXG5AbWl4aW4gc3RpY2t5KCRwb3NpdGlvbnMsICRvZmZzZXRzOiBudWxsKSB7XG4gIEBpbmNsdWRlIHBvc2l0aW9uKHN0aWNreSwgJHBvc2l0aW9ucywgJG9mZnNldHMpO1xufVxuXG4vLy8gXG4vLy8gQWJzb2x1dGVseSBwb3NpdGlvbiBhbiBlbGVtZW50IGluIHRoZSBjZW50ZXIuXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vL1xuXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyIHtcbiAgQGluY2x1ZGUgYWJzb2x1dGUoNTAlIGF1dG8gYXV0byA1MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLy8vIFxuLy8vIFZlcnRpY2FsbHkgY2VudGVyIGEgYmxvY2sgZWxlbWVudCB1c2luZyB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4vLy8gXG4vLy8gQHNpbmNlIDEuMC4wXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGFtb3VudCAtIEFtb3VudCBvZiB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4vLy9cblxuQG1peGluIHZlcnRpY2FsLWNlbnRlcigkYW1vdW50KSB7XG4gIG1hcmdpbi1ib3R0b206ICRhbW91bnQ7XG4gIG1hcmdpbi10b3A6ICRhbW91bnQ7XG59XG4iLCIvKipcbiAqIDQwNCBFcnJvciBUZW1wbGF0ZVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEBjYXRlZ29yeSAgIFN0eWxlc2hlZXRcbiAqIEBwYWNrYWdlICAgIFNoZWVwaWVcbiAqIEBhdXRob3IgICAgIE1hcmsgR3JlYWxpc2ggPG1hcmtAYmhhbGFzaC5jb20+XG4gKiBAY29weXJpZ2h0ICBDb3B5cmlnaHQgKGMpIDIwMTUgTWFyayBHcmVhbGlzaFxuICogQGxpY2Vuc2UgICAgaHR0cHM6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCBUaGUgR05VIEdQTCB2My4wXG4gKiBAdmVyc2lvbiAgICAzLjBcbiAqIEBsaW5rICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9iaGFsYXNoL3NoZWVwaWVcbiAqL1xuXG4uZXJyb3JcbiAgYWxpZ24taXRlbXM6IGNlbnRlclxuICBkaXNwbGF5OiBmbGV4XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyXG4gIHRleHQtYWxpZ246IGNlbnRlclxuICArZml4ZWQoMClcbiIsIi8qKlxuICogQXJjaGl2ZSBUZW1wbGF0ZXNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBAY2F0ZWdvcnkgICBTdHlsZXNoZWV0XG4gKiBAcGFja2FnZSAgICBTaGVlcGllXG4gKiBAYXV0aG9yICAgICBNYXJrIEdyZWFsaXNoIDxtYXJrQGJoYWxhc2guY29tPlxuICogQGNvcHlyaWdodCAgQ29weXJpZ2h0IChjKSAyMDE1IE1hcmsgR3JlYWxpc2hcbiAqIEBsaWNlbnNlICAgIGh0dHBzOi8vd3d3LmdudS5vcmcvY29weWxlZnQvZ3BsLmh0bWwgVGhlIEdOVSBHUEwgdjMuMFxuICogQHZlcnNpb24gICAgMy4wXG4gKiBAbGluayAgICAgICBodHRwczovL2dpdGh1Yi5jb20vYmhhbGFzaC9zaGVlcGllXG4gKi9cblxuZGl2LmFyY2hpdmVcbiAgK21lZGlhKDY0MClcbiAgICArY29sdW1ucyhmbGV4LCBkaXYsIDIsIDIpXG5cbi8qKlxuICogVGltZWQgQXJjaGl2ZSBDYXJkIFllYXJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuLmFyY2hpdmUteWVhci1uYW1lXG4gIGJhY2tncm91bmQ6IGNlbnRlci9jb3ZlclxuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICBhXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjQpXG4gICAgY29sb3I6IGNvbG9yKHdoaXRlcywgeC1saWdodClcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIHBhZGRpbmc6IDJyZW1cblxuICAgICY6aG92ZXJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG4uYXJjaGl2ZS1jYXJkLXllYXJcbiAgYmFja2dyb3VuZDogY29sb3IoYmxhY2tzKVxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZVxuICBwYWRkaW5nOiAwLjVyZW1cbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gICtjb2x1bW5zKGZsb2F0LCBsaSwgNCwgMSUpXG5cbi8qKlxuICogVGltZWQgQXJjaGl2ZSBDYXJkIE1vbnRoXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbi5hcmNoaXZlLWNhcmQtbW9udGhcbiAgY29sb3I6IGNvbG9yKHdoaXRlcywgeC1saWdodClcbiAgbWFyZ2luLWJvdHRvbTogMSVcblxuLyoqXG4gKiBUaW1lZCBBcmNoaXZlIENhcmQgRGF0YVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4uYXJjaGl2ZS1jYXJkLWRhdGFcbiAgc3BhblxuICAgICthYnNvbHV0ZSg1MCUgNTAlLCB0b3AgbGVmdClcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKVxuXG4gIHNwYW4ubW9udGgtY291bnRcbiAgICBkaXNwbGF5OiBub25lXG5cbiAgJjpob3ZlciBzcGFuLm1vbnRoLWNvdW50XG4gICAgZGlzcGxheTogaW5pdGlhbFxuXG4gICY6aG92ZXIgc3Bhbi5tb250aC1uYW1lXG4gICAgZGlzcGxheTogbm9uZVxuXG4uYXJjaGl2ZS1jYXJkLW1vbnRoIGFcbiAgYmFja2dyb3VuZDogY29sb3IoYmxhY2tzLCBtaWQtZGFyaylcbiAgY29sb3I6IGluaGVyaXRcbiAgZGlzcGxheTogYmxvY2tcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gICtmbHVpZC1zcXVhcmUoMTAwJSAxKVxuXG4gICY6aG92ZXJcbiAgICBiYWNrZ3JvdW5kOiBjb2xvcihibHVlcylcbiIsIi8qKlxuICogU2l0ZSBDb250ZW50IENvbnRhaW5lclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEBjYXRlZ29yeSAgIFN0eWxlc2hlZXRcbiAqIEBwYWNrYWdlICAgIFNoZWVwaWVcbiAqIEBhdXRob3IgICAgIE1hcmsgR3JlYWxpc2ggPG1hcmtAYmhhbGFzaC5jb20+XG4gKiBAY29weXJpZ2h0ICBDb3B5cmlnaHQgKGMpIDIwMTUgTWFyayBHcmVhbGlzaFxuICogQGxpY2Vuc2UgICAgaHR0cHM6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCBUaGUgR05VIEdQTCB2My4wXG4gKiBAdmVyc2lvbiAgICAzLjBcbiAqIEBsaW5rICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9iaGFsYXNoL3NoZWVwaWVcbiAqL1xuXG4vKipcbiAqIENvbnRlbnQgUGFyZW50IENvbnRhaW5lciBSdWxlc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG4ubWFpblxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG4gIG1hcmdpbjogMCBhdXRvXG4gIG1heC13aWR0aDogNzJyZW1cbiAgbWluLXdpZHRoOiAwXG4gIHBhZGRpbmc6IDMlXG5cbiAgK21lZGlhKDc2OClcbiAgICBwYWRkaW5nOiA3LjUlXG5cbiAgK21lZGlhKHByaW50KVxuICAgIG1heC13aWR0aDogMTAwJVxuICAgIHBhZGRpbmc6IDBcbiIsIi8qKlxuICogQXJ0aWNsZXMgYW5kIFBhZ2VzXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQGNhdGVnb3J5ICAgU3R5bGVzaGVldFxuICogQHBhY2thZ2UgICAgU2hlZXBpZVxuICogQGF1dGhvciAgICAgTWFyayBHcmVhbGlzaCA8bWFya0BiaGFsYXNoLmNvbT5cbiAqIEBjb3B5cmlnaHQgIENvcHlyaWdodCAoYykgMjAxNSBNYXJrIEdyZWFsaXNoXG4gKiBAbGljZW5zZSAgICBodHRwczovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2dwbC5odG1sIFRoZSBHTlUgR1BMIHYzLjBcbiAqIEB2ZXJzaW9uICAgIDMuMFxuICogQGxpbmsgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2JoYWxhc2gvc2hlZXBpZVxuICovXG5cbi8qKlxuICogRGVmYXVsdCBBcnRpY2xlIFN0eWxpbmdcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBEZWZhdWx0IHRleHQgYW5kIG90aGVyIGVsZW1lbnQgc3R5bGluZyBmb3IgYXJ0aWNsZXMuXG4gKi9cblxuLmFydGljbGVcbiAgK2NsZWFyZml4XG5cbiAgZGwsIG9sLCB1bFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcbiAgICBtYXJnaW4tbGVmdDogMS4yNXJlbVxuICAgIHBhZGRpbmctbGVmdDogMC41cmVtXG5cbiAgYmxvY2txdW90ZSBwOm5vdCg6bGFzdC1jaGlsZClcbiAgICBtYXJnaW4tYm90dG9tOiAkdnNwYWNlXG5cbiAgaW1nXG4gICAgYm9yZGVyOiAxcHggc29saWQgY29sb3Iod2hpdGVzLCBtaWQtbGlnaHQpXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxuXG4gIGlucHV0XG4gICAgLy8gRm9yIHBhc3N3b3JkIG9uIHBhc3N3b3JkLXByb3RlY3RlZCBwb3N0cy5cbiAgICBkaXNwbGF5OiBibG9ja1xuXG4vKlxuICogRXhjZXJwdGVkIEFydGljbGVzXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbi5leGNlcnB0IHBcbiAgY29sb3I6IGNvbG9yKGJsYWNrcywgeC1saWdodClcblxuLypcbiAqIFJlbGF0ZWQgQXJ0aWNsZXNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBJbnNlcnRlZCBiZWxvdyBhcnRpY2xlcywgdGhlc2UgYXJ0aWNsZXMgcmVwcmludCB0aHJlZSByZWxhdGVkIGFydGljbGVzXG4gKiBwaWNrZWQgYXQgcmFuZG9tIGZyb20gdGhlIHBvc3QgYXJjaGl2ZXMuXG4gKi9cblxuLnJlbGF0ZWQtYXJ0aWNsZXNcbiAgK21lZGlhKDY0MClcbiAgICArY29sdW1ucyhmbGV4LCBhcnRpY2xlLCAzLCAkc3BsaXQtY29sdW1uLW1hcmdpbiAqIDIpXG5cbi5yZWxhdGVkXG4gIG1hcmdpbi1ib3R0b206ICR2c3BhY2VcblxuICAmOm5vdCg6bGFzdC1jaGlsZClcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvcih3aGl0ZXMsIG1pZC1saWdodClcbiAgICBib3JkZXItd2lkdGg6IDAgMCAxcHggMFxuICAgIHBhZGRpbmctYm90dG9tOiAkdnNwYWNlXG5cbiAgK21lZGlhKDY0MClcbiAgICBtYXJnaW46IDBcblxuICAgICY6bm90KDpsYXN0LWNoaWxkKVxuICAgICAgYm9yZGVyLXdpZHRoOiAwIDFweCAwIDBcbiAgICAgIHBhZGRpbmc6IDAgJHNwbGl0LWNvbHVtbi1tYXJnaW4gMCAwXG5cbiAgLnRpdGxlXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXNcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwXG5cbiAgJl9fdGh1bWJuYWlsXG4gICAgYmFja2dyb3VuZDogY2VudGVyIHRvcC9jb3ZlciBuby1yZXBlYXRcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIGhlaWdodDogJHZzcGFjZSAqIDlcblxuLypcbiAqIEZ1bGwgQXJ0aWNsZVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFRoaXMgaGFzIGEgbmVzdGVkIGZsZXggbGF5b3V0OlxuICovXG5cbi5mdWxsXG4gICZfX2NvbnRlbnRcbiAgICArY2xlYXJmaXhcblxuICAgICYgPiAqOm5vdCg6bGFzdC1jaGlsZClcbiAgICAgIG1hcmdpbi1ib3R0b206ICR2c3BhY2VcblxuLypcbiAqIEFydGljbGUgRm9vdGVyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogVGhpcyBoYXMgYSBuZXN0ZWQgZmxleCBsYXlvdXQ6XG4gKlxuICogMS4gU2lkZS1ieS1zaWRlIGF2YXRhciBhbmQgdGV4dC5cbiAqIDIuIFdpdGhpbiByaWdodC1zaWRlIHRleHQsIHZlcnRpY2FsbHktY2VudHJlZCBjb2x1bW4uXG4gKi9cblxuLmZvb3RlclxuICAmX19hdXRob3JcbiAgICBhbGlnbi1pdGVtczogY2VudGVyXG4gICAgZGlzcGxheTogZmxleFxuXG4gICAgK21lZGlhKDY0MClcbiAgICAgIGFsaWduLWl0ZW1zOiBpbml0aWFsXG5cbiAgJl9fYXZhdGFyXG4gICAgK2F2YXRhcig1cmVtKVxuXG4gICZfX2Jpb1xuICAgIGZsZXg6IDFcbiAgICBtYXJnaW4tbGVmdDogJHZzcGFjZVxuICAgICtmbGV4LWNlbnRlci1jaGlsZHJlbignLWJsdXJiJylcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
